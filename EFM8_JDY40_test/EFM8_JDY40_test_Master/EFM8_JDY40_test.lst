0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1170 (Feb 16 2022) (MSVC)
0000              4   ; This file was generated Thu Mar 27 20:14:45 2025
0000              5   ;--------------------------------------------------------
                  5   $name EFM8_JDY40_test
                  6   $optc51 --model-small
0000              8            R_DSEG    segment data
0000              9            R_CSEG    segment code
0000             10            R_BSEG    segment bit
0000             11            R_XSEG    segment xdata
0000             12            R_PSEG    segment xdata
0000             13            R_ISEG    segment idata
0000             14            R_OSEG    segment data overlay
0000             15            BIT_BANK  segment data overlay
0000             16            R_HOME    segment code
0000             17            R_GSINIT  segment code
0000             18            R_IXSEG   segment xdata
0000             19            R_CONST   segment code
0000             20            R_XINIT   segment code
0000             21            R_DINIT   segment code
0000             22   
0000             23   ;--------------------------------------------------------
0000             24   ; Public variables in this module
0000             25   ;--------------------------------------------------------
0000             26            public _InitPinADC_PARM_2
0000             27            public _main
0000             28            public _InitPushButton
0000             29            public _Volts_at_Pin
0000             30            public _ADC_at_Pin
0000             31            public _InitPinADC
0000             32            public _ReceptionOff
0000             33            public _SendATCommand
0000             34            public _waitms_or_RI1
0000             35            public _RXU1
0000             36            public _getstr1
0000             37            public _getchar1_with_timeout
0000             38            public _getchar1
0000             39            public _sendstr1
0000             40            public _putchar1
0000             41            public _UART1_Init
0000             42            public _waitms
0000             43            public _Timer3us
0000             44            public _InitADC
0000             45            public __c51_external_startup
0000             46            public _buff
0000             47            public _getstr1_PARM_2
0000             48   ;--------------------------------------------------------
0000             49   ; Special Function Registers
0000             50   ;--------------------------------------------------------
0000             51   _ACC            DATA 0xe0
0000             52   _ADC0ASAH       DATA 0xb6
0000             53   _ADC0ASAL       DATA 0xb5
0000             54   _ADC0ASCF       DATA 0xa1
0000             55   _ADC0ASCT       DATA 0xc7
0000             56   _ADC0CF0        DATA 0xbc
0000             57   _ADC0CF1        DATA 0xb9
0000             58   _ADC0CF2        DATA 0xdf
0000             59   _ADC0CN0        DATA 0xe8
0000             60   _ADC0CN1        DATA 0xb2
0000             61   _ADC0CN2        DATA 0xb3
0000             62   _ADC0GTH        DATA 0xc4
0000             63   _ADC0GTL        DATA 0xc3
0000             64   _ADC0H          DATA 0xbe
0000             65   _ADC0L          DATA 0xbd
0000             66   _ADC0LTH        DATA 0xc6
0000             67   _ADC0LTL        DATA 0xc5
0000             68   _ADC0MX         DATA 0xbb
0000             69   _B              DATA 0xf0
0000             70   _CKCON0         DATA 0x8e
0000             71   _CKCON1         DATA 0xa6
0000             72   _CLEN0          DATA 0xc6
0000             73   _CLIE0          DATA 0xc7
0000             74   _CLIF0          DATA 0xe8
0000             75   _CLKSEL         DATA 0xa9
0000             76   _CLOUT0         DATA 0xd1
0000             77   _CLU0CF         DATA 0xb1
0000             78   _CLU0FN         DATA 0xaf
0000             79   _CLU0MX         DATA 0x84
0000             80   _CLU1CF         DATA 0xb3
0000             81   _CLU1FN         DATA 0xb2
0000             82   _CLU1MX         DATA 0x85
0000             83   _CLU2CF         DATA 0xb6
0000             84   _CLU2FN         DATA 0xb5
0000             85   _CLU2MX         DATA 0x91
0000             86   _CLU3CF         DATA 0xbf
0000             87   _CLU3FN         DATA 0xbe
0000             88   _CLU3MX         DATA 0xae
0000             89   _CMP0CN0        DATA 0x9b
0000             90   _CMP0CN1        DATA 0x99
0000             91   _CMP0MD         DATA 0x9d
0000             92   _CMP0MX         DATA 0x9f
0000             93   _CMP1CN0        DATA 0xbf
0000             94   _CMP1CN1        DATA 0xac
0000             95   _CMP1MD         DATA 0xab
0000             96   _CMP1MX         DATA 0xaa
0000             97   _CRC0CN0        DATA 0xce
0000             98   _CRC0CN1        DATA 0x86
0000             99   _CRC0CNT        DATA 0xd3
0000            100   _CRC0DAT        DATA 0xcb
0000            101   _CRC0FLIP       DATA 0xcf
0000            102   _CRC0IN         DATA 0xca
0000            103   _CRC0ST         DATA 0xd2
0000            104   _DAC0CF0        DATA 0x91
0000            105   _DAC0CF1        DATA 0x92
0000            106   _DAC0H          DATA 0x85
0000            107   _DAC0L          DATA 0x84
0000            108   _DAC1CF0        DATA 0x93
0000            109   _DAC1CF1        DATA 0x94
0000            110   _DAC1H          DATA 0x8a
0000            111   _DAC1L          DATA 0x89
0000            112   _DAC2CF0        DATA 0x95
0000            113   _DAC2CF1        DATA 0x96
0000            114   _DAC2H          DATA 0x8c
0000            115   _DAC2L          DATA 0x8b
0000            116   _DAC3CF0        DATA 0x9a
0000            117   _DAC3CF1        DATA 0x9c
0000            118   _DAC3H          DATA 0x8e
0000            119   _DAC3L          DATA 0x8d
0000            120   _DACGCF0        DATA 0x88
0000            121   _DACGCF1        DATA 0x98
0000            122   _DACGCF2        DATA 0xa2
0000            123   _DERIVID        DATA 0xad
0000            124   _DEVICEID       DATA 0xb5
0000            125   _DPH            DATA 0x83
0000            126   _DPL            DATA 0x82
0000            127   _EIE1           DATA 0xe6
0000            128   _EIE2           DATA 0xf3
0000            129   _EIP1           DATA 0xbb
0000            130   _EIP1H          DATA 0xee
0000            131   _EIP2           DATA 0xed
0000            132   _EIP2H          DATA 0xf6
0000            133   _EMI0CN         DATA 0xe7
0000            134   _FLKEY          DATA 0xb7
0000            135   _HFO0CAL        DATA 0xc7
0000            136   _HFO1CAL        DATA 0xd6
0000            137   _HFOCN          DATA 0xef
0000            138   _I2C0ADM        DATA 0xff
0000            139   _I2C0CN0        DATA 0xba
0000            140   _I2C0DIN        DATA 0xbc
0000            141   _I2C0DOUT       DATA 0xbb
0000            142   _I2C0FCN0       DATA 0xad
0000            143   _I2C0FCN1       DATA 0xab
0000            144   _I2C0FCT        DATA 0xf5
0000            145   _I2C0SLAD       DATA 0xbd
0000            146   _I2C0STAT       DATA 0xb9
0000            147   _IE             DATA 0xa8
0000            148   _IP             DATA 0xb8
0000            149   _IPH            DATA 0xf2
0000            150   _IT01CF         DATA 0xe4
0000            151   _LFO0CN         DATA 0xb1
0000            152   _P0             DATA 0x80
0000            153   _P0MASK         DATA 0xfe
0000            154   _P0MAT          DATA 0xfd
0000            155   _P0MDIN         DATA 0xf1
0000            156   _P0MDOUT        DATA 0xa4
0000            157   _P0SKIP         DATA 0xd4
0000            158   _P1             DATA 0x90
0000            159   _P1MASK         DATA 0xee
0000            160   _P1MAT          DATA 0xed
0000            161   _P1MDIN         DATA 0xf2
0000            162   _P1MDOUT        DATA 0xa5
0000            163   _P1SKIP         DATA 0xd5
0000            164   _P2             DATA 0xa0
0000            165   _P2MASK         DATA 0xfc
0000            166   _P2MAT          DATA 0xfb
0000            167   _P2MDIN         DATA 0xf3
0000            168   _P2MDOUT        DATA 0xa6
0000            169   _P2SKIP         DATA 0xcc
0000            170   _P3             DATA 0xb0
0000            171   _P3MDIN         DATA 0xf4
0000            172   _P3MDOUT        DATA 0x9c
0000            173   _PCA0CENT       DATA 0x9e
0000            174   _PCA0CLR        DATA 0x9c
0000            175   _PCA0CN0        DATA 0xd8
0000            176   _PCA0CPH0       DATA 0xfc
0000            177   _PCA0CPH1       DATA 0xea
0000            178   _PCA0CPH2       DATA 0xec
0000            179   _PCA0CPH3       DATA 0xf5
0000            180   _PCA0CPH4       DATA 0x85
0000            181   _PCA0CPH5       DATA 0xde
0000            182   _PCA0CPL0       DATA 0xfb
0000            183   _PCA0CPL1       DATA 0xe9
0000            184   _PCA0CPL2       DATA 0xeb
0000            185   _PCA0CPL3       DATA 0xf4
0000            186   _PCA0CPL4       DATA 0x84
0000            187   _PCA0CPL5       DATA 0xdd
0000            188   _PCA0CPM0       DATA 0xda
0000            189   _PCA0CPM1       DATA 0xdb
0000            190   _PCA0CPM2       DATA 0xdc
0000            191   _PCA0CPM3       DATA 0xae
0000            192   _PCA0CPM4       DATA 0xaf
0000            193   _PCA0CPM5       DATA 0xcc
0000            194   _PCA0H          DATA 0xfa
0000            195   _PCA0L          DATA 0xf9
0000            196   _PCA0MD         DATA 0xd9
0000            197   _PCA0POL        DATA 0x96
0000            198   _PCA0PWM        DATA 0xf7
0000            199   _PCON0          DATA 0x87
0000            200   _PCON1          DATA 0xcd
0000            201   _PFE0CN         DATA 0xc1
0000            202   _PRTDRV         DATA 0xf6
0000            203   _PSCTL          DATA 0x8f
0000            204   _PSTAT0         DATA 0xaa
0000            205   _PSW            DATA 0xd0
0000            206   _REF0CN         DATA 0xd1
0000            207   _REG0CN         DATA 0xc9
0000            208   _REVID          DATA 0xb6
0000            209   _RSTSRC         DATA 0xef
0000            210   _SBCON1         DATA 0x94
0000            211   _SBRLH1         DATA 0x96
0000            212   _SBRLL1         DATA 0x95
0000            213   _SBUF           DATA 0x99
0000            214   _SBUF0          DATA 0x99
0000            215   _SBUF1          DATA 0x92
0000            216   _SCON           DATA 0x98
0000            217   _SCON0          DATA 0x98
0000            218   _SCON1          DATA 0xc8
0000            219   _SFRPAGE        DATA 0xa7
0000            220   _SFRPGCN        DATA 0xbc
0000            221   _SFRSTACK       DATA 0xd7
0000            222   _SMB0ADM        DATA 0xd6
0000            223   _SMB0ADR        DATA 0xd7
0000            224   _SMB0CF         DATA 0xc1
0000            225   _SMB0CN0        DATA 0xc0
0000            226   _SMB0DAT        DATA 0xc2
0000            227   _SMB0FCN0       DATA 0xc3
0000            228   _SMB0FCN1       DATA 0xc4
0000            229   _SMB0FCT        DATA 0xef
0000            230   _SMB0RXLN       DATA 0xc5
0000            231   _SMB0TC         DATA 0xac
0000            232   _SMOD1          DATA 0x93
0000            233   _SP             DATA 0x81
0000            234   _SPI0CFG        DATA 0xa1
0000            235   _SPI0CKR        DATA 0xa2
0000            236   _SPI0CN0        DATA 0xf8
0000            237   _SPI0DAT        DATA 0xa3
0000            238   _SPI0FCN0       DATA 0x9a
0000            239   _SPI0FCN1       DATA 0x9b
0000            240   _SPI0FCT        DATA 0xf7
0000            241   _SPI0PCF        DATA 0xdf
0000            242   _TCON           DATA 0x88
0000            243   _TH0            DATA 0x8c
0000            244   _TH1            DATA 0x8d
0000            245   _TL0            DATA 0x8a
0000            246   _TL1            DATA 0x8b
0000            247   _TMOD           DATA 0x89
0000            248   _TMR2CN0        DATA 0xc8
0000            249   _TMR2CN1        DATA 0xfd
0000            250   _TMR2H          DATA 0xcf
0000            251   _TMR2L          DATA 0xce
0000            252   _TMR2RLH        DATA 0xcb
0000            253   _TMR2RLL        DATA 0xca
0000            254   _TMR3CN0        DATA 0x91
0000            255   _TMR3CN1        DATA 0xfe
0000            256   _TMR3H          DATA 0x95
0000            257   _TMR3L          DATA 0x94
0000            258   _TMR3RLH        DATA 0x93
0000            259   _TMR3RLL        DATA 0x92
0000            260   _TMR4CN0        DATA 0x98
0000            261   _TMR4CN1        DATA 0xff
0000            262   _TMR4H          DATA 0xa5
0000            263   _TMR4L          DATA 0xa4
0000            264   _TMR4RLH        DATA 0xa3
0000            265   _TMR4RLL        DATA 0xa2
0000            266   _TMR5CN0        DATA 0xc0
0000            267   _TMR5CN1        DATA 0xf1
0000            268   _TMR5H          DATA 0xd5
0000            269   _TMR5L          DATA 0xd4
0000            270   _TMR5RLH        DATA 0xd3
0000            271   _TMR5RLL        DATA 0xd2
0000            272   _UART0PCF       DATA 0xd9
0000            273   _UART1FCN0      DATA 0x9d
0000            274   _UART1FCN1      DATA 0xd8
0000            275   _UART1FCT       DATA 0xfa
0000            276   _UART1LIN       DATA 0x9e
0000            277   _UART1PCF       DATA 0xda
0000            278   _VDM0CN         DATA 0xff
0000            279   _WDTCN          DATA 0x97
0000            280   _XBR0           DATA 0xe1
0000            281   _XBR1           DATA 0xe2
0000            282   _XBR2           DATA 0xe3
0000            283   _XOSC0CN        DATA 0x86
0000            284   _DPTR           DATA 0x8382
0000            285   _TMR2RL         DATA 0xcbca
0000            286   _TMR3RL         DATA 0x9392
0000            287   _TMR4RL         DATA 0xa3a2
0000            288   _TMR5RL         DATA 0xd3d2
0000            289   _TMR0           DATA 0x8c8a
0000            290   _TMR1           DATA 0x8d8b
0000            291   _TMR2           DATA 0xcfce
0000            292   _TMR3           DATA 0x9594
0000            293   _TMR4           DATA 0xa5a4
0000            294   _TMR5           DATA 0xd5d4
0000            295   _SBRL1          DATA 0x9695
0000            296   _PCA0           DATA 0xfaf9
0000            297   _PCA0CP0        DATA 0xfcfb
0000            298   _PCA0CP1        DATA 0xeae9
0000            299   _PCA0CP2        DATA 0xeceb
0000            300   _PCA0CP3        DATA 0xf5f4
0000            301   _PCA0CP4        DATA 0x8584
0000            302   _PCA0CP5        DATA 0xdedd
0000            303   _ADC0ASA        DATA 0xb6b5
0000            304   _ADC0GT         DATA 0xc4c3
0000            305   _ADC0           DATA 0xbebd
0000            306   _ADC0LT         DATA 0xc6c5
0000            307   _DAC0           DATA 0x8584
0000            308   _DAC1           DATA 0x8a89
0000            309   _DAC2           DATA 0x8c8b
0000            310   _DAC3           DATA 0x8e8d
0000            311   ;--------------------------------------------------------
0000            312   ; special function bits
0000            313   ;--------------------------------------------------------
0000            314   _ACC_0          BIT 0xe0
0000            315   _ACC_1          BIT 0xe1
0000            316   _ACC_2          BIT 0xe2
0000            317   _ACC_3          BIT 0xe3
0000            318   _ACC_4          BIT 0xe4
0000            319   _ACC_5          BIT 0xe5
0000            320   _ACC_6          BIT 0xe6
0000            321   _ACC_7          BIT 0xe7
0000            322   _TEMPE          BIT 0xe8
0000            323   _ADGN0          BIT 0xe9
0000            324   _ADGN1          BIT 0xea
0000            325   _ADWINT         BIT 0xeb
0000            326   _ADBUSY         BIT 0xec
0000            327   _ADINT          BIT 0xed
0000            328   _IPOEN          BIT 0xee
0000            329   _ADEN           BIT 0xef
0000            330   _B_0            BIT 0xf0
0000            331   _B_1            BIT 0xf1
0000            332   _B_2            BIT 0xf2
0000            333   _B_3            BIT 0xf3
0000            334   _B_4            BIT 0xf4
0000            335   _B_5            BIT 0xf5
0000            336   _B_6            BIT 0xf6
0000            337   _B_7            BIT 0xf7
0000            338   _C0FIF          BIT 0xe8
0000            339   _C0RIF          BIT 0xe9
0000            340   _C1FIF          BIT 0xea
0000            341   _C1RIF          BIT 0xeb
0000            342   _C2FIF          BIT 0xec
0000            343   _C2RIF          BIT 0xed
0000            344   _C3FIF          BIT 0xee
0000            345   _C3RIF          BIT 0xef
0000            346   _D1SRC0         BIT 0x88
0000            347   _D1SRC1         BIT 0x89
0000            348   _D1AMEN         BIT 0x8a
0000            349   _D01REFSL       BIT 0x8b
0000            350   _D3SRC0         BIT 0x8c
0000            351   _D3SRC1         BIT 0x8d
0000            352   _D3AMEN         BIT 0x8e
0000            353   _D23REFSL       BIT 0x8f
0000            354   _D0UDIS         BIT 0x98
0000            355   _D1UDIS         BIT 0x99
0000            356   _D2UDIS         BIT 0x9a
0000            357   _D3UDIS         BIT 0x9b
0000            358   _EX0            BIT 0xa8
0000            359   _ET0            BIT 0xa9
0000            360   _EX1            BIT 0xaa
0000            361   _ET1            BIT 0xab
0000            362   _ES0            BIT 0xac
0000            363   _ET2            BIT 0xad
0000            364   _ESPI0          BIT 0xae
0000            365   _EA             BIT 0xaf
0000            366   _PX0            BIT 0xb8
0000            367   _PT0            BIT 0xb9
0000            368   _PX1            BIT 0xba
0000            369   _PT1            BIT 0xbb
0000            370   _PS0            BIT 0xbc
0000            371   _PT2            BIT 0xbd
0000            372   _PSPI0          BIT 0xbe
0000            373   _P0_0           BIT 0x80
0000            374   _P0_1           BIT 0x81
0000            375   _P0_2           BIT 0x82
0000            376   _P0_3           BIT 0x83
0000            377   _P0_4           BIT 0x84
0000            378   _P0_5           BIT 0x85
0000            379   _P0_6           BIT 0x86
0000            380   _P0_7           BIT 0x87
0000            381   _P1_0           BIT 0x90
0000            382   _P1_1           BIT 0x91
0000            383   _P1_2           BIT 0x92
0000            384   _P1_3           BIT 0x93
0000            385   _P1_4           BIT 0x94
0000            386   _P1_5           BIT 0x95
0000            387   _P1_6           BIT 0x96
0000            388   _P1_7           BIT 0x97
0000            389   _P2_0           BIT 0xa0
0000            390   _P2_1           BIT 0xa1
0000            391   _P2_2           BIT 0xa2
0000            392   _P2_3           BIT 0xa3
0000            393   _P2_4           BIT 0xa4
0000            394   _P2_5           BIT 0xa5
0000            395   _P2_6           BIT 0xa6
0000            396   _P3_0           BIT 0xb0
0000            397   _P3_1           BIT 0xb1
0000            398   _P3_2           BIT 0xb2
0000            399   _P3_3           BIT 0xb3
0000            400   _P3_4           BIT 0xb4
0000            401   _P3_7           BIT 0xb7
0000            402   _CCF0           BIT 0xd8
0000            403   _CCF1           BIT 0xd9
0000            404   _CCF2           BIT 0xda
0000            405   _CCF3           BIT 0xdb
0000            406   _CCF4           BIT 0xdc
0000            407   _CCF5           BIT 0xdd
0000            408   _CR             BIT 0xde
0000            409   _CF             BIT 0xdf
0000            410   _PARITY         BIT 0xd0
0000            411   _F1             BIT 0xd1
0000            412   _OV             BIT 0xd2
0000            413   _RS0            BIT 0xd3
0000            414   _RS1            BIT 0xd4
0000            415   _F0             BIT 0xd5
0000            416   _AC             BIT 0xd6
0000            417   _CY             BIT 0xd7
0000            418   _RI             BIT 0x98
0000            419   _TI             BIT 0x99
0000            420   _RB8            BIT 0x9a
0000            421   _TB8            BIT 0x9b
0000            422   _REN            BIT 0x9c
0000            423   _CE             BIT 0x9d
0000            424   _SMODE          BIT 0x9e
0000            425   _RI1            BIT 0xc8
0000            426   _TI1            BIT 0xc9
0000            427   _RBX1           BIT 0xca
0000            428   _TBX1           BIT 0xcb
0000            429   _REN1           BIT 0xcc
0000            430   _PERR1          BIT 0xcd
0000            431   _OVR1           BIT 0xce
0000            432   _SI             BIT 0xc0
0000            433   _ACK            BIT 0xc1
0000            434   _ARBLOST        BIT 0xc2
0000            435   _ACKRQ          BIT 0xc3
0000            436   _STO            BIT 0xc4
0000            437   _STA            BIT 0xc5
0000            438   _TXMODE         BIT 0xc6
0000            439   _MASTER         BIT 0xc7
0000            440   _SPIEN          BIT 0xf8
0000            441   _TXNF           BIT 0xf9
0000            442   _NSSMD0         BIT 0xfa
0000            443   _NSSMD1         BIT 0xfb
0000            444   _RXOVRN         BIT 0xfc
0000            445   _MODF           BIT 0xfd
0000            446   _WCOL           BIT 0xfe
0000            447   _SPIF           BIT 0xff
0000            448   _IT0            BIT 0x88
0000            449   _IE0            BIT 0x89
0000            450   _IT1            BIT 0x8a
0000            451   _IE1            BIT 0x8b
0000            452   _TR0            BIT 0x8c
0000            453   _TF0            BIT 0x8d
0000            454   _TR1            BIT 0x8e
0000            455   _TF1            BIT 0x8f
0000            456   _T2XCLK0        BIT 0xc8
0000            457   _T2XCLK1        BIT 0xc9
0000            458   _TR2            BIT 0xca
0000            459   _T2SPLIT        BIT 0xcb
0000            460   _TF2CEN         BIT 0xcc
0000            461   _TF2LEN         BIT 0xcd
0000            462   _TF2L           BIT 0xce
0000            463   _TF2H           BIT 0xcf
0000            464   _T4XCLK0        BIT 0x98
0000            465   _T4XCLK1        BIT 0x99
0000            466   _TR4            BIT 0x9a
0000            467   _T4SPLIT        BIT 0x9b
0000            468   _TF4CEN         BIT 0x9c
0000            469   _TF4LEN         BIT 0x9d
0000            470   _TF4L           BIT 0x9e
0000            471   _TF4H           BIT 0x9f
0000            472   _T5XCLK0        BIT 0xc0
0000            473   _T5XCLK1        BIT 0xc1
0000            474   _TR5            BIT 0xc2
0000            475   _T5SPLIT        BIT 0xc3
0000            476   _TF5CEN         BIT 0xc4
0000            477   _TF5LEN         BIT 0xc5
0000            478   _TF5L           BIT 0xc6
0000            479   _TF5H           BIT 0xc7
0000            480   _RIE            BIT 0xd8
0000            481   _RXTO0          BIT 0xd9
0000            482   _RXTO1          BIT 0xda
0000            483   _RFRQ           BIT 0xdb
0000            484   _TIE            BIT 0xdc
0000            485   _TXHOLD         BIT 0xdd
0000            486   _TXNF1          BIT 0xde
0000            487   _TFRQ           BIT 0xdf
0000            488   ;--------------------------------------------------------
0000            489   ; overlayable register banks
0000            490   ;--------------------------------------------------------
0000            491            rbank0 segment data overlay
0000            492   ;--------------------------------------------------------
0000            493   ; internal ram data
0000            494   ;--------------------------------------------------------
0000            495            rseg R_DSEG
0000            496   _getstr1_PARM_2:
0000            497            ds 1
0001            498   _main_v_1_131:
0001            499            ds 16
0011            500   _main_norm_x_1_131:
0011            501            ds 4
0015            502   _main_norm_y_1_131:
0015            503            ds 4
0019            504   ;--------------------------------------------------------
0019            505   ; overlayable items in internal ram 
0019            506   ;--------------------------------------------------------
0000            507            rseg    R_OSEG
0000            508            rseg    R_OSEG
0000            509            rseg    R_OSEG
0000            510            rseg    R_OSEG
0000            511   _InitPinADC_PARM_2:
0000            512            ds 1
0001            513            rseg    R_OSEG
0001            514   ;--------------------------------------------------------
0001            515   ; indirectly addressable internal ram data
0001            516   ;--------------------------------------------------------
0000            517            rseg R_ISEG
0000            518   _buff:
0000            519            ds 20
0014            520   ;--------------------------------------------------------
0014            521   ; absolute internal ram data
0014            522   ;--------------------------------------------------------
0000            523            DSEG
0000            524   ;--------------------------------------------------------
0000            525   ; bit data
0000            526   ;--------------------------------------------------------
0000            527            rseg R_BSEG
0000            528   _main_button_1_state_1_131:
0000            529            DBIT    1
0001            530   _main_button_2_state_1_131:
0001            531            DBIT    1
0002            532   ;--------------------------------------------------------
0002            533   ; paged external ram data
0002            534   ;--------------------------------------------------------
0000            535            rseg R_PSEG
0000            536   ;--------------------------------------------------------
0000            537   ; external ram data
0000            538   ;--------------------------------------------------------
0000            539            rseg R_XSEG
0000            540   ;--------------------------------------------------------
0000            541   ; absolute external ram data
0000            542   ;--------------------------------------------------------
0000            543            XSEG
0000            544   ;--------------------------------------------------------
0000            545   ; external initialized ram data
0000            546   ;--------------------------------------------------------
0000            547            rseg R_IXSEG
0000            548            rseg R_HOME
0000            549            rseg R_GSINIT
0000            550            rseg R_CSEG
0000            551   ;--------------------------------------------------------
0000            552   ; Reset entry point and interrupt vectors
0000            553   ;--------------------------------------------------------
0000            554            CSEG at 0x0000
0000 020000     555            ljmp    _crt0
0003            556   ;--------------------------------------------------------
0003            557   ; global & static initialisations
0003            558   ;--------------------------------------------------------
0000            559            rseg R_HOME
0000            560            rseg R_GSINIT
0000            561            rseg R_GSINIT
0000            562   ;--------------------------------------------------------
0000            563   ; data variables initialization
0000            564   ;--------------------------------------------------------
0000            565            rseg R_DINIT
0000            566            ; The linker places a 'ret' at the end of segment R_DINIT.
0000            567   ;--------------------------------------------------------
0000            568   ; code
0000            569   ;--------------------------------------------------------
0000            570            rseg R_CSEG
0000            571   ;------------------------------------------------------------
0000            572   ;Allocation info for local variables in function '_c51_external_startup'
0000            573   ;------------------------------------------------------------
0000            574   ;------------------------------------------------------------
0000            575   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:15: char _c51_external_startup (void)
0000            576   ;        -----------------------------------------
0000            577   ;         function _c51_external_startup
0000            578   ;        -----------------------------------------
0000            579   __c51_external_startup:
0000            580            using   0
0000            581   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:18: SFRPAGE = 0x00;
0000 75A700     582            mov     _SFRPAGE,#0x00
0003            583   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:19: WDTCN = 0xDE; //First key
0003 7597DE     584            mov     _WDTCN,#0xDE
0006            585   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:20: WDTCN = 0xAD; //Second key
0006 7597AD     586            mov     _WDTCN,#0xAD
0009            587   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:22: VDM0CN=0x80;       // enable VDD monitor
0009 75FF80     588            mov     _VDM0CN,#0x80
000C            589   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:23: RSTSRC=0x02|0x04;  // Enable reset on missing clock detector and VDD
000C 75EF06     590            mov     _RSTSRC,#0x06
000F            591   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:30: SFRPAGE = 0x10;
000F 75A710     592            mov     _SFRPAGE,#0x10
0012            593   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:31: PFE0CN  = 0x20; // SYSCLK < 75 MHz.
0012 75C120     594            mov     _PFE0CN,#0x20
0015            595   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:32: SFRPAGE = 0x00;
0015 75A700     596            mov     _SFRPAGE,#0x00
0018            597   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:53: CLKSEL = 0x00;
0018 75A900     598            mov     _CLKSEL,#0x00
001B            599   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:54: CLKSEL = 0x00;
001B 75A900     600            mov     _CLKSEL,#0x00
001E            601   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:55: while ((CLKSEL & 0x80) == 0);
001E            602   L002001?:
001E E5A9       603            mov     a,_CLKSEL
0020 30E710     604            jnb     acc.7,L002001?
0023            605   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:56: CLKSEL = 0x03;
0023 75A903     606            mov     _CLKSEL,#0x03
0026            607   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:57: CLKSEL = 0x03;
0026 75A903     608            mov     _CLKSEL,#0x03
0029            609   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:58: while ((CLKSEL & 0x80) == 0);
0029            610   L002004?:
0029 E5A9       611            mov     a,_CLKSEL
002B 30E790     612            jnb     acc.7,L002004?
002E            613   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:63: P0MDOUT |= 0x11; // Enable UART0 TX (P0.4) and UART1 TX (P0.0) as push-pull outputs
002E 43A411     614            orl     _P0MDOUT,#0x11
0031            615   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:64: P2MDOUT |= 0x01; // P2.0 in push-pull mode
0031 43A601     616            orl     _P2MDOUT,#0x01
0034            617   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:65: XBR0     = 0x01; // Enable UART0 on P0.4(TX) and P0.5(RX)                     
0034 75E101     618            mov     _XBR0,#0x01
0037            619   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:66: XBR1     = 0X00;
0037 75E200     620            mov     _XBR1,#0x00
003A            621   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:67: XBR2     = 0x41; // Enable crossbar and uart 1
003A 75E341     622            mov     _XBR2,#0x41
003D            623   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:73: SCON0 = 0x10;
003D 759810     624            mov     _SCON0,#0x10
0040            625   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:74: TH1 = 0x100-((SYSCLK/BAUDRATE)/(2L*12L));
0040 758DE6     626            mov     _TH1,#0xE6
0043            627   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:75: TL1 = TH1;      // Init Timer1
0043 858D8B     628            mov     _TL1,_TH1
0046            629   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:76: TMOD &= ~0xf0;  // TMOD: timer 1 in 8-bit auto-reload
0046 53890F     630            anl     _TMOD,#0x0F
0049            631   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:77: TMOD |=  0x20;                       
0049 438920     632            orl     _TMOD,#0x20
004C            633   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:78: TR1 = 1; // START Timer1
004C D28E       634            setb    _TR1
004E            635   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:79: TI = 1;  // Indicate TX0 ready
004E D299       636            setb    _TI
0050            637   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:81: return 0;
0050 758200     638            mov     dpl,#0x00
0053 22         639            ret
0054            640   ;------------------------------------------------------------
0054            641   ;Allocation info for local variables in function 'InitADC'
0054            642   ;------------------------------------------------------------
0054            643   ;------------------------------------------------------------
0054            644   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:84: void InitADC (void)
0054            645   ;        -----------------------------------------
0054            646   ;         function InitADC
0054            647   ;        -----------------------------------------
0054            648   _InitADC:
0054            649   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:86: SFRPAGE = 0x00;
0054 75A700     650            mov     _SFRPAGE,#0x00
0057            651   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:87: ADEN=0; // Disable ADC
0057 C2EF       652            clr     _ADEN
0059            653   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:92: (0x0 << 0) ; // Accumulate n conversions: 0x0: 1, 0x1:4, 0x2:8, 0x3:16, 0x4:32
0059 75B280     654            mov     _ADC0CN1,#0x80
005C            655   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:96: (0x0 << 2); // 0:SYSCLK ADCCLK = SYSCLK. 1:HFOSC0 ADCCLK = HFOSC0.
005C 75BC20     656            mov     _ADC0CF0,#0x20
005F            657   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:100: (0x1E << 0); // Conversion Tracking Time. Tadtk = ADTK / (Fsarclk)
005F 75B91E     658            mov     _ADC0CF1,#0x1E
0062            659   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:109: (0x0 << 0) ; // TEMPE. 0: Disable the Temperature Sensor. 1: Enable the Temperature Sensor.
0062 75E800     660            mov     _ADC0CN0,#0x00
0065            661   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:114: (0x1F << 0); // ADPWR. Power Up Delay Time. Tpwrtime = ((4 * (ADPWR + 1)) + 2) / (Fadcclk)
0065 75DF3F     662            mov     _ADC0CF2,#0x3F
0068            663   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:118: (0x0 << 0) ; // ADCM. 0x0: ADBUSY, 0x1: TIMER0, 0x2: TIMER2, 0x3: TIMER3, 0x4: CNVSTR, 0x5: CEX5, 0x6: TIMER4, 0x7: TIMER5, 0x8: CLU0, 0x9: CLU1, 0xA: CLU2, 0xB: CLU3
0068 75B300     664            mov     _ADC0CN2,#0x00
006B            665   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:120: ADEN=1; // Enable ADC
006B D2EF       666            setb    _ADEN
006D 22         667            ret
006E            668   ;------------------------------------------------------------
006E            669   ;Allocation info for local variables in function 'Timer3us'
006E            670   ;------------------------------------------------------------
006E            671   ;us                        Allocated to registers r2 
006E            672   ;i                         Allocated to registers r3 
006E            673   ;------------------------------------------------------------
006E            674   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:124: void Timer3us(unsigned char us)
006E            675   ;        -----------------------------------------
006E            676   ;         function Timer3us
006E            677   ;        -----------------------------------------
006E            678   _Timer3us:
006E AA82       679            mov     r2,dpl
0070            680   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:129: CKCON0|=0b_0100_0000;
0070 438E40     681            orl     _CKCON0,#0x40
0073            682   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:131: TMR3RL = (-(SYSCLK)/1000000L); // Set Timer3 to overflow in 1us.
0073 7592B8     683            mov     _TMR3RL,#0xB8
0076 7593FF     684            mov     (_TMR3RL >> 8),#0xFF
0079            685   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:132: TMR3 = TMR3RL;                 // Initialize Timer3 for first overflow
0079 859294     686            mov     _TMR3,_TMR3RL
007C 859395     687            mov     (_TMR3 >> 8),(_TMR3RL >> 8)
007F            688   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:134: TMR3CN0 = 0x04;                 // Sart Timer3 and clear overflow flag
007F 759104     689            mov     _TMR3CN0,#0x04
0082            690   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:135: for (i = 0; i < us; i++)       // Count <us> overflows
0082 7B00       691            mov     r3,#0x00
0084            692   L004004?:
0084 C3         693            clr     c
0085 EB         694            mov     a,r3
0086 9A         695            subb    a,r2
0087 5000       696            jnc     L004007?
0089            697   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:137: while (!(TMR3CN0 & 0x80));  // Wait for overflow
0089            698   L004001?:
0089 E591       699            mov     a,_TMR3CN0
008B 30E790     700            jnb     acc.7,L004001?
008E            701   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:138: TMR3CN0 &= ~(0x80);         // Clear overflow indicator
008E 53917F     702            anl     _TMR3CN0,#0x7F
0091            703   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:135: for (i = 0; i < us; i++)       // Count <us> overflows
0091 0B         704            inc     r3
0092 8000       705            sjmp    L004004?
0094            706   L004007?:
0094            707   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:140: TMR3CN0 = 0 ;                   // Stop Timer3 and clear overflow flag
0094 759100     708            mov     _TMR3CN0,#0x00
0097 22         709            ret
0098            710   ;------------------------------------------------------------
0098            711   ;Allocation info for local variables in function 'waitms'
0098            712   ;------------------------------------------------------------
0098            713   ;ms                        Allocated to registers r2 r3 
0098            714   ;j                         Allocated to registers r4 r5 
0098            715   ;k                         Allocated to registers r6 
0098            716   ;------------------------------------------------------------
0098            717   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:143: void waitms (unsigned int ms)
0098            718   ;        -----------------------------------------
0098            719   ;         function waitms
0098            720   ;        -----------------------------------------
0098            721   _waitms:
0098 AA82       722            mov     r2,dpl
009A AB83       723            mov     r3,dph
009C            724   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:147: for(j=0; j<ms; j++)
009C 7C00       725            mov     r4,#0x00
009E 7D00       726            mov     r5,#0x00
00A0            727   L005005?:
00A0 C3         728            clr     c
00A1 EC         729            mov     a,r4
00A2 9A         730            subb    a,r2
00A3 ED         731            mov     a,r5
00A4 9B         732            subb    a,r3
00A5 5000       733            jnc     L005009?
00A7            734   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:148: for (k=0; k<4; k++) Timer3us(250);
00A7 7E00       735            mov     r6,#0x00
00A9            736   L005001?:
00A9 BE04D0     737            cjne    r6,#0x04,L005018?
00AC            738   L005018?:
00AC 5000       739            jnc     L005007?
00AE 7582FA     740            mov     dpl,#0xFA
00B1 C002       741            push    ar2
00B3 C003       742            push    ar3
00B5 C004       743            push    ar4
00B7 C005       744            push    ar5
00B9 C006       745            push    ar6
00BB 120000     746            lcall   _Timer3us
00BE D006       747            pop     ar6
00C0 D005       748            pop     ar5
00C2 D004       749            pop     ar4
00C4 D003       750            pop     ar3
00C6 D002       751            pop     ar2
00C8 0E         752            inc     r6
00C9 8000       753            sjmp    L005001?
00CB            754   L005007?:
00CB            755   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:147: for(j=0; j<ms; j++)
00CB 0C         756            inc     r4
00CC BC0010     757            cjne    r4,#0x00,L005005?
00CF 0D         758            inc     r5
00D0 8000       759            sjmp    L005005?
00D2            760   L005009?:
00D2 22         761            ret
00D3            762   ;------------------------------------------------------------
00D3            763   ;Allocation info for local variables in function 'UART1_Init'
00D3            764   ;------------------------------------------------------------
00D3            765   ;baudrate                  Allocated to registers r2 r3 r4 r5 
00D3            766   ;------------------------------------------------------------
00D3            767   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:152: void UART1_Init (unsigned long baudrate)
00D3            768   ;        -----------------------------------------
00D3            769   ;         function UART1_Init
00D3            770   ;        -----------------------------------------
00D3            771   _UART1_Init:
00D3 AA82       772            mov     r2,dpl
00D5 AB83       773            mov     r3,dph
00D7 ACF0       774            mov     r4,b
00D9 FD         775            mov     r5,a
00DA            776   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:154: SFRPAGE = 0x20;
00DA 75A720     777            mov     _SFRPAGE,#0x20
00DD            778   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:155: SMOD1 = 0x0C; // no parity, 8 data bits, 1 stop bit
00DD 75930C     779            mov     _SMOD1,#0x0C
00E0            780   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:156: SCON1 = 0x10;
00E0 75C810     781            mov     _SCON1,#0x10
00E3            782   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:157: SBCON1 =0x00;   // disable baud rate generator
00E3 759400     783            mov     _SBCON1,#0x00
00E6            784   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:158: SBRL1 = 0x10000L-((SYSCLK/baudrate)/(12L*2L));
00E6 8A00       785            mov     __divulong_PARM_2,r2
00E8 8B01       786            mov     (__divulong_PARM_2 + 1),r3
00EA 8C02       787            mov     (__divulong_PARM_2 + 2),r4
00EC 8D03       788            mov     (__divulong_PARM_2 + 3),r5
00EE 90A200     789            mov     dptr,#0xA200
00F1 75F04A     790            mov     b,#0x4A
00F4 7404       791            mov     a,#0x04
00F6 120000     792            lcall   __divulong
00F9 AA82       793            mov     r2,dpl
00FB AB83       794            mov     r3,dph
00FD ACF0       795            mov     r4,b
00FF FD         796            mov     r5,a
0100 750018     797            mov     __divulong_PARM_2,#0x18
0103 E4         798            clr     a
0104 F501       799            mov     (__divulong_PARM_2 + 1),a
0106 F502       800            mov     (__divulong_PARM_2 + 2),a
0108 F503       801            mov     (__divulong_PARM_2 + 3),a
010A 8A82       802            mov     dpl,r2
010C 8B83       803            mov     dph,r3
010E 8CF0       804            mov     b,r4
0110 ED         805            mov     a,r5
0111 120000     806            lcall   __divulong
0114 AA82       807            mov     r2,dpl
0116 AB83       808            mov     r3,dph
0118 ACF0       809            mov     r4,b
011A FD         810            mov     r5,a
011B E4         811            clr     a
011C C3         812            clr     c
011D 9A         813            subb    a,r2
011E FA         814            mov     r2,a
011F E4         815            clr     a
0120 9B         816            subb    a,r3
0121 FB         817            mov     r3,a
0122 7401       818            mov     a,#0x01
0124 9C         819            subb    a,r4
0125 E4         820            clr     a
0126 9D         821            subb    a,r5
0127 8A95       822            mov     _SBRL1,r2
0129 8B96       823            mov     (_SBRL1 >> 8),r3
012B            824   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:159: TI1 = 1; // indicate ready for TX
012B D2C9       825            setb    _TI1
012D            826   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:160: SBCON1 |= 0x40;   // enable baud rate generator
012D 439440     827            orl     _SBCON1,#0x40
0130            828   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:161: SFRPAGE = 0x00;
0130 75A700     829            mov     _SFRPAGE,#0x00
0133 22         830            ret
0134            831   ;------------------------------------------------------------
0134            832   ;Allocation info for local variables in function 'putchar1'
0134            833   ;------------------------------------------------------------
0134            834   ;c                         Allocated to registers r2 
0134            835   ;------------------------------------------------------------
0134            836   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:164: void putchar1 (char c) 
0134            837   ;        -----------------------------------------
0134            838   ;         function putchar1
0134            839   ;        -----------------------------------------
0134            840   _putchar1:
0134 AA82       841            mov     r2,dpl
0136            842   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:166: SFRPAGE = 0x20;
0136 75A720     843            mov     _SFRPAGE,#0x20
0139            844   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:167: while (!TI1);
0139            845   L007001?:
0139            846   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:168: TI1=0;
0139 10C960     847            jbc     _TI1,L007008?
013C 8000       848            sjmp    L007001?
013E            849   L007008?:
013E            850   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:169: SBUF1 = c;
013E 8A92       851            mov     _SBUF1,r2
0140            852   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:170: SFRPAGE = 0x00;
0140 75A700     853            mov     _SFRPAGE,#0x00
0143 22         854            ret
0144            855   ;------------------------------------------------------------
0144            856   ;Allocation info for local variables in function 'sendstr1'
0144            857   ;------------------------------------------------------------
0144            858   ;s                         Allocated to registers r2 r3 r4 
0144            859   ;------------------------------------------------------------
0144            860   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:173: void sendstr1 (char * s)
0144            861   ;        -----------------------------------------
0144            862   ;         function sendstr1
0144            863   ;        -----------------------------------------
0144            864   _sendstr1:
0144 AA82       865            mov     r2,dpl
0146 AB83       866            mov     r3,dph
0148 ACF0       867            mov     r4,b
014A            868   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:175: while(*s)
014A            869   L008001?:
014A 8A82       870            mov     dpl,r2
014C 8B83       871            mov     dph,r3
014E 8CF0       872            mov     b,r4
0150 120000     873            lcall   __gptrget
0153 FD         874            mov     r5,a
0154 6000       875            jz      L008004?
0156            876   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:177: putchar1(*s);
0156 8D82       877            mov     dpl,r5
0158 C002       878            push    ar2
015A C003       879            push    ar3
015C C004       880            push    ar4
015E 120000     881            lcall   _putchar1
0161 D004       882            pop     ar4
0163 D003       883            pop     ar3
0165 D002       884            pop     ar2
0167            885   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:178: s++;       
0167 0A         886            inc     r2
0168 BA00A0     887            cjne    r2,#0x00,L008001?
016B 0B         888            inc     r3
016C 8000       889            sjmp    L008001?
016E            890   L008004?:
016E 22         891            ret
016F            892   ;------------------------------------------------------------
016F            893   ;Allocation info for local variables in function 'getchar1'
016F            894   ;------------------------------------------------------------
016F            895   ;c                         Allocated to registers 
016F            896   ;------------------------------------------------------------
016F            897   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:182: char getchar1 (void)
016F            898   ;        -----------------------------------------
016F            899   ;         function getchar1
016F            900   ;        -----------------------------------------
016F            901   _getchar1:
016F            902   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:185: SFRPAGE = 0x20;
016F 75A720     903            mov     _SFRPAGE,#0x20
0172            904   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:186: while (!RI1);
0172            905   L009001?:
0172            906   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:187: RI1=0;
0172 10C8A0     907            jbc     _RI1,L009008?
0175 8000       908            sjmp    L009001?
0177            909   L009008?:
0177            910   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:189: SCON1&=0b_0011_1111;
0177 53C83F     911            anl     _SCON1,#0x3F
017A            912   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:190: c = SBUF1;
017A 859282     913            mov     dpl,_SBUF1
017D            914   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:191: SFRPAGE = 0x00;
017D 75A700     915            mov     _SFRPAGE,#0x00
0180            916   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:192: return (c);
0180 22         917            ret
0181            918   ;------------------------------------------------------------
0181            919   ;Allocation info for local variables in function 'getchar1_with_timeout'
0181            920   ;------------------------------------------------------------
0181            921   ;c                         Allocated to registers 
0181            922   ;timeout                   Allocated to registers r2 r3 
0181            923   ;------------------------------------------------------------
0181            924   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:195: char getchar1_with_timeout (void)
0181            925   ;        -----------------------------------------
0181            926   ;         function getchar1_with_timeout
0181            927   ;        -----------------------------------------
0181            928   _getchar1_with_timeout:
0181            929   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:199: SFRPAGE = 0x20;
0181 75A720     930            mov     _SFRPAGE,#0x20
0184            931   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:201: while (!RI1)
0184 7A00       932            mov     r2,#0x00
0186 7B00       933            mov     r3,#0x00
0188            934   L010003?:
0188 20C820     935            jb      _RI1,L010005?
018B            936   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:203: SFRPAGE = 0x00;
018B 75A700     937            mov     _SFRPAGE,#0x00
018E            938   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:204: Timer3us(20);
018E 758214     939            mov     dpl,#0x14
0191 C002       940            push    ar2
0193 C003       941            push    ar3
0195 120000     942            lcall   _Timer3us
0198 D003       943            pop     ar3
019A D002       944            pop     ar2
019C            945   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:205: SFRPAGE = 0x20;
019C 75A720     946            mov     _SFRPAGE,#0x20
019F            947   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:206: timeout++;
019F 0A         948            inc     r2
01A0 BA0060     949            cjne    r2,#0x00,L010012?
01A3 0B         950            inc     r3
01A4            951   L010012?:
01A4            952   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:207: if(timeout==25000)
01A4 BAA8E0     953            cjne    r2,#0xA8,L010003?
01A7 BB61E0     954            cjne    r3,#0x61,L010003?
01AA            955   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:209: SFRPAGE = 0x00;
01AA 75A700     956            mov     _SFRPAGE,#0x00
01AD            957   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:210: return ('\n'); // Timeout after half second
01AD 75820A     958            mov     dpl,#0x0A
01B0 22         959            ret
01B1            960   L010005?:
01B1            961   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:213: RI1=0;
01B1 C2C8       962            clr     _RI1
01B3            963   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:215: SCON1&=0b_0011_1111;
01B3 53C83F     964            anl     _SCON1,#0x3F
01B6            965   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:216: c = SBUF1;
01B6 859282     966            mov     dpl,_SBUF1
01B9            967   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:217: SFRPAGE = 0x00;
01B9 75A700     968            mov     _SFRPAGE,#0x00
01BC            969   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:218: return (c);
01BC 22         970            ret
01BD            971   ;------------------------------------------------------------
01BD            972   ;Allocation info for local variables in function 'getstr1'
01BD            973   ;------------------------------------------------------------
01BD            974   ;n                         Allocated with name '_getstr1_PARM_2'
01BD            975   ;s                         Allocated to registers r2 r3 r4 
01BD            976   ;c                         Allocated to registers r1 
01BD            977   ;cnt                       Allocated to registers r5 
01BD            978   ;------------------------------------------------------------
01BD            979   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:221: void getstr1 (char * s, unsigned char n)
01BD            980   ;        -----------------------------------------
01BD            981   ;         function getstr1
01BD            982   ;        -----------------------------------------
01BD            983   _getstr1:
01BD AA82       984            mov     r2,dpl
01BF AB83       985            mov     r3,dph
01C1 ACF0       986            mov     r4,b
01C3            987   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:227: while(1)
01C3 7D00       988            mov     r5,#0x00
01C5 8A06       989            mov     ar6,r2
01C7 8B07       990            mov     ar7,r3
01C9 8C00       991            mov     ar0,r4
01CB            992   L011007?:
01CB            993   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:229: c=getchar1_with_timeout();
01CB C002       994            push    ar2
01CD C003       995            push    ar3
01CF C004       996            push    ar4
01D1 C005       997            push    ar5
01D3 C006       998            push    ar6
01D5 C007       999            push    ar7
01D7 C000      1000            push    ar0
01D9 120000    1001            lcall   _getchar1_with_timeout
01DC A982      1002            mov     r1,dpl
01DE D000      1003            pop     ar0
01E0 D007      1004            pop     ar7
01E2 D006      1005            pop     ar6
01E4 D005      1006            pop     ar5
01E6 D004      1007            pop     ar4
01E8 D003      1008            pop     ar3
01EA D002      1009            pop     ar2
01EC           1010   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:230: if(c=='\n')
01EC B90AE0    1011            cjne    r1,#0x0A,L011002?
01EF           1012   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:232: *s=0;
01EF 8A82      1013            mov     dpl,r2
01F1 8B83      1014            mov     dph,r3
01F3 8CF0      1015            mov     b,r4
01F5 E4        1016            clr     a
01F6           1017   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:233: return;
01F6 020000    1018            ljmp    __gptrput
01F9           1019   L011002?:
01F9           1020   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:236: if (cnt<n)
01F9 C3        1021            clr     c
01FA ED        1022            mov     a,r5
01FB 9550      1023            subb    a,_getstr1_PARM_2
01FD 5000      1024            jnc     L011004?
01FF           1025   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:238: cnt++;
01FF 0D        1026            inc     r5
0200           1027   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:239: *s=c;
0200 8E82      1028            mov     dpl,r6
0202 8F83      1029            mov     dph,r7
0204 88F0      1030            mov     b,r0
0206 E9        1031            mov     a,r1
0207 120000    1032            lcall   __gptrput
020A A3        1033            inc     dptr
020B AE82      1034            mov     r6,dpl
020D AF83      1035            mov     r7,dph
020F           1036   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:240: s++;
020F 8E02      1037            mov     ar2,r6
0211 8F03      1038            mov     ar3,r7
0213 8804      1039            mov     ar4,r0
0215 8000      1040            sjmp    L011007?
0217           1041   L011004?:
0217           1042   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:244: *s=0;
0217 8A82      1043            mov     dpl,r2
0219 8B83      1044            mov     dph,r3
021B 8CF0      1045            mov     b,r4
021D E4        1046            clr     a
021E           1047   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:245: return;
021E 020000    1048            ljmp    __gptrput
0221           1049   ;------------------------------------------------------------
0221           1050   ;Allocation info for local variables in function 'RXU1'
0221           1051   ;------------------------------------------------------------
0221           1052   ;------------------------------------------------------------
0221           1053   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:251: bit RXU1 (void)
0221           1054   ;        -----------------------------------------
0221           1055   ;         function RXU1
0221           1056   ;        -----------------------------------------
0221           1057   _RXU1:
0221           1058   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:254: SFRPAGE = 0x20;
0221 75A720    1059            mov     _SFRPAGE,#0x20
0224           1060   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:255: mybit=RI1;
0224 A2C8      1061            mov     c,_RI1
0226           1062   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:256: SFRPAGE = 0x00;
0226 75A700    1063            mov     _SFRPAGE,#0x00
0229           1064   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:257: return mybit;
0229 22        1065            ret
022A           1066   ;------------------------------------------------------------
022A           1067   ;Allocation info for local variables in function 'waitms_or_RI1'
022A           1068   ;------------------------------------------------------------
022A           1069   ;ms                        Allocated to registers r2 r3 
022A           1070   ;j                         Allocated to registers r4 r5 
022A           1071   ;k                         Allocated to registers r6 
022A           1072   ;------------------------------------------------------------
022A           1073   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:260: void waitms_or_RI1 (unsigned int ms)
022A           1074   ;        -----------------------------------------
022A           1075   ;         function waitms_or_RI1
022A           1076   ;        -----------------------------------------
022A           1077   _waitms_or_RI1:
022A AA82      1078            mov     r2,dpl
022C AB83      1079            mov     r3,dph
022E           1080   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:264: for(j=0; j<ms; j++)
022E 7C00      1081            mov     r4,#0x00
0230 7D00      1082            mov     r5,#0x00
0232           1083   L013007?:
0232 C3        1084            clr     c
0233 EC        1085            mov     a,r4
0234 9A        1086            subb    a,r2
0235 ED        1087            mov     a,r5
0236 9B        1088            subb    a,r3
0237 5000      1089            jnc     L013011?
0239           1090   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:266: for (k=0; k<4; k++)
0239 7E00      1091            mov     r6,#0x00
023B           1092   L013003?:
023B BE0460    1093            cjne    r6,#0x04,L013019?
023E           1094   L013019?:
023E 5000      1095            jnc     L013009?
0240           1096   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:268: if(RXU1()) return;
0240 C002      1097            push    ar2
0242 C003      1098            push    ar3
0244 C004      1099            push    ar4
0246 C005      1100            push    ar5
0248 C006      1101            push    ar6
024A 120000    1102            lcall   _RXU1
024D E4        1103            clr     a
024E 33        1104            rlc     a
024F D006      1105            pop     ar6
0251 D005      1106            pop     ar5
0253 D004      1107            pop     ar4
0255 D003      1108            pop     ar3
0257 D002      1109            pop     ar2
0259 6000      1110            jz      L013002?
025B 22        1111            ret
025C           1112   L013002?:
025C           1113   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:269: Timer3us(250);
025C 7582FA    1114            mov     dpl,#0xFA
025F C002      1115            push    ar2
0261 C003      1116            push    ar3
0263 C004      1117            push    ar4
0265 C005      1118            push    ar5
0267 C006      1119            push    ar6
0269 120000    1120            lcall   _Timer3us
026C D006      1121            pop     ar6
026E D005      1122            pop     ar5
0270 D004      1123            pop     ar4
0272 D003      1124            pop     ar3
0274 D002      1125            pop     ar2
0276           1126   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:266: for (k=0; k<4; k++)
0276 0E        1127            inc     r6
0277 8000      1128            sjmp    L013003?
0279           1129   L013009?:
0279           1130   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:264: for(j=0; j<ms; j++)
0279 0C        1131            inc     r4
027A BC00A0    1132            cjne    r4,#0x00,L013007?
027D 0D        1133            inc     r5
027E 8000      1134            sjmp    L013007?
0280           1135   L013011?:
0280 22        1136            ret
0281           1137   ;------------------------------------------------------------
0281           1138   ;Allocation info for local variables in function 'SendATCommand'
0281           1139   ;------------------------------------------------------------
0281           1140   ;s                         Allocated to registers r2 r3 r4 
0281           1141   ;------------------------------------------------------------
0281           1142   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:274: void SendATCommand (char * s)
0281           1143   ;        -----------------------------------------
0281           1144   ;         function SendATCommand
0281           1145   ;        -----------------------------------------
0281           1146   _SendATCommand:
0281 AA82      1147            mov     r2,dpl
0283 AB83      1148            mov     r3,dph
0285 ACF0      1149            mov     r4,b
0287           1150   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:276: printf("Command: %s", s);
0287 C002      1151            push    ar2
0289 C003      1152            push    ar3
028B C004      1153            push    ar4
028D C002      1154            push    ar2
028F C003      1155            push    ar3
0291 C004      1156            push    ar4
0293 7420      1157            mov     a,#__str_0
0295 C0E0      1158            push    acc
0297 74BE      1159            mov     a,#(__str_0 >> 8)
0299 C0E0      1160            push    acc
029B 7480      1161            mov     a,#0x80
029D C0E0      1162            push    acc
029F 120000    1163            lcall   _printf
02A2 E581      1164            mov     a,sp
02A4 24FA      1165            add     a,#0xfa
02A6 F581      1166            mov     sp,a
02A8           1167   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:277: P2_0=0; // 'set' pin to 0 is 'AT' mode.
02A8 C2A0      1168            clr     _P2_0
02AA           1169   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:278: waitms(5);
02AA 900005    1170            mov     dptr,#0x0005
02AD 120000    1171            lcall   _waitms
02B0 D004      1172            pop     ar4
02B2 D003      1173            pop     ar3
02B4 D002      1174            pop     ar2
02B6           1175   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:279: sendstr1(s);
02B6 8A82      1176            mov     dpl,r2
02B8 8B83      1177            mov     dph,r3
02BA 8CF0      1178            mov     b,r4
02BC 120000    1179            lcall   _sendstr1
02BF           1180   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:280: getstr1(buff, sizeof(buff)-1);
02BF 755013    1181            mov     _getstr1_PARM_2,#0x13
02C2 904610    1182            mov     dptr,#_buff
02C5 75F040    1183            mov     b,#0x40
02C8 120000    1184            lcall   _getstr1
02CB           1185   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:281: waitms(10);
02CB 90000A    1186            mov     dptr,#0x000A
02CE 120000    1187            lcall   _waitms
02D1           1188   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:282: P2_0=1; // 'set' pin to 1 is normal operation mode.
02D1 D2A0      1189            setb    _P2_0
02D3           1190   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:283: printf("Response: %s\r\n", buff);
02D3 7410      1191            mov     a,#_buff
02D5 C0E0      1192            push    acc
02D7 7446      1193            mov     a,#(_buff >> 8)
02D9 C0E0      1194            push    acc
02DB 7440      1195            mov     a,#0x40
02DD C0E0      1196            push    acc
02DF 74E0      1197            mov     a,#__str_1
02E1 C0E0      1198            push    acc
02E3 74BE      1199            mov     a,#(__str_1 >> 8)
02E5 C0E0      1200            push    acc
02E7 7480      1201            mov     a,#0x80
02E9 C0E0      1202            push    acc
02EB 120000    1203            lcall   _printf
02EE E581      1204            mov     a,sp
02F0 24FA      1205            add     a,#0xfa
02F2 F581      1206            mov     sp,a
02F4 22        1207            ret
02F5           1208   ;------------------------------------------------------------
02F5           1209   ;Allocation info for local variables in function 'ReceptionOff'
02F5           1210   ;------------------------------------------------------------
02F5           1211   ;------------------------------------------------------------
02F5           1212   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:286: void ReceptionOff (void)
02F5           1213   ;        -----------------------------------------
02F5           1214   ;         function ReceptionOff
02F5           1215   ;        -----------------------------------------
02F5           1216   _ReceptionOff:
02F5           1217   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:288: P2_0=0; // 'set' pin to 0 is 'AT' mode.
02F5 C2A0      1218            clr     _P2_0
02F7           1219   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:289: waitms(10);
02F7 90000A    1220            mov     dptr,#0x000A
02FA 120000    1221            lcall   _waitms
02FD           1222   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:290: sendstr1("AT+DVID0000\r\n"); // Some unused id, so that we get nothing in RXD1.
02FD 90BF20    1223            mov     dptr,#__str_2
0300 75F080    1224            mov     b,#0x80
0303 120000    1225            lcall   _sendstr1
0306           1226   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:291: waitms(10);
0306 90000A    1227            mov     dptr,#0x000A
0309 120000    1228            lcall   _waitms
030C           1229   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:293: SCON1&=0b_0011_1111;
030C 53C83F    1230            anl     _SCON1,#0x3F
030F           1231   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:294: P2_0=1; // 'set' pin to 1 is normal operation mode.
030F D2A0      1232            setb    _P2_0
0311 22        1233            ret
0312           1234   ;------------------------------------------------------------
0312           1235   ;Allocation info for local variables in function 'InitPinADC'
0312           1236   ;------------------------------------------------------------
0312           1237   ;pin_num                   Allocated with name '_InitPinADC_PARM_2'
0312           1238   ;portno                    Allocated to registers r2 
0312           1239   ;mask                      Allocated to registers r3 
0312           1240   ;------------------------------------------------------------
0312           1241   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:299: void InitPinADC (unsigned char portno, unsigned char pin_num)
0312           1242   ;        -----------------------------------------
0312           1243   ;         function InitPinADC
0312           1244   ;        -----------------------------------------
0312           1245   _InitPinADC:
0312 AA82      1246            mov     r2,dpl
0314           1247   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:303: mask=1<<pin_num;
0314 85F0F0    1248            mov     b,_InitPinADC_PARM_2
0317 05F0      1249            inc     b
0319 7401      1250            mov     a,#0x01
031B 8000      1251            sjmp    L016013?
031D           1252   L016011?:
031D 25E0      1253            add     a,acc
031F           1254   L016013?:
031F D5F0A0    1255            djnz    b,L016011?
0322 FB        1256            mov     r3,a
0323           1257   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:305: SFRPAGE = 0x20;
0323 75A720    1258            mov     _SFRPAGE,#0x20
0326           1259   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:306: switch (portno)
0326 BA00E8    1260            cjne    r2,#0x00,L016014?
0329 8000      1261            sjmp    L016001?
032B           1262   L016014?:
032B BA0168    1263            cjne    r2,#0x01,L016015?
032E 8000      1264            sjmp    L016002?
0330           1265   L016015?:
0330           1266   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:308: case 0:
0330 BA02E8    1267            cjne    r2,#0x02,L016005?
0333 8000      1268            sjmp    L016003?
0335           1269   L016001?:
0335           1270   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:309: P0MDIN &= (~mask); // Set pin as analog input
0335 EB        1271            mov     a,r3
0336 F4        1272            cpl     a
0337 FA        1273            mov     r2,a
0338 52F1      1274            anl     _P0MDIN,a
033A           1275   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:310: P0SKIP |= mask; // Skip Crossbar decoding for this pin
033A EB        1276            mov     a,r3
033B 42D4      1277            orl     _P0SKIP,a
033D           1278   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:311: break;
033D           1279   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:312: case 1:
033D 8000      1280            sjmp    L016005?
033F           1281   L016002?:
033F           1282   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:313: P1MDIN &= (~mask); // Set pin as analog input
033F EB        1283            mov     a,r3
0340 F4        1284            cpl     a
0341 FA        1285            mov     r2,a
0342 52F2      1286            anl     _P1MDIN,a
0344           1287   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:314: P1SKIP |= mask; // Skip Crossbar decoding for this pin
0344 EB        1288            mov     a,r3
0345 42D5      1289            orl     _P1SKIP,a
0347           1290   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:315: break;
0347           1291   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:316: case 2:
0347 8000      1292            sjmp    L016005?
0349           1293   L016003?:
0349           1294   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:317: P2MDIN &= (~mask); // Set pin as analog input
0349 EB        1295            mov     a,r3
034A F4        1296            cpl     a
034B FA        1297            mov     r2,a
034C 52F3      1298            anl     _P2MDIN,a
034E           1299   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:318: P2SKIP |= mask; // Skip Crossbar decoding for this pin
034E EB        1300            mov     a,r3
034F 42CC      1301            orl     _P2SKIP,a
0351           1302   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:322: }
0351           1303   L016005?:
0351           1304   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:323: SFRPAGE = 0x00;
0351 75A700    1305            mov     _SFRPAGE,#0x00
0354 22        1306            ret
0355           1307   ;------------------------------------------------------------
0355           1308   ;Allocation info for local variables in function 'ADC_at_Pin'
0355           1309   ;------------------------------------------------------------
0355           1310   ;pin                       Allocated to registers 
0355           1311   ;------------------------------------------------------------
0355           1312   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:326: unsigned int ADC_at_Pin(unsigned char pin)
0355           1313   ;        -----------------------------------------
0355           1314   ;         function ADC_at_Pin
0355           1315   ;        -----------------------------------------
0355           1316   _ADC_at_Pin:
0355 8582BB    1317            mov     _ADC0MX,dpl
0358           1318   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:329: ADINT = 0;
0358 C2ED      1319            clr     _ADINT
035A           1320   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:330: ADBUSY = 1;     // Convert voltage at the pin
035A D2EC      1321            setb    _ADBUSY
035C           1322   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:331: while (!ADINT); // Wait for conversion to complete
035C           1323   L017001?:
035C 30ED68    1324            jnb     _ADINT,L017001?
035F           1325   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:332: return (ADC0);
035F 85BD82    1326            mov     dpl,_ADC0
0362 85BE83    1327            mov     dph,(_ADC0 >> 8)
0365 22        1328            ret
0366           1329   ;------------------------------------------------------------
0366           1330   ;Allocation info for local variables in function 'Volts_at_Pin'
0366           1331   ;------------------------------------------------------------
0366           1332   ;pin                       Allocated to registers r2 
0366           1333   ;------------------------------------------------------------
0366           1334   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:335: float Volts_at_Pin(unsigned char pin)
0366           1335   ;        -----------------------------------------
0366           1336   ;         function Volts_at_Pin
0366           1337   ;        -----------------------------------------
0366           1338   _Volts_at_Pin:
0366           1339   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:337: return ((ADC_at_Pin(pin)*VDD)/16383.0);
0366 120000    1340            lcall   _ADC_at_Pin
0369 120000    1341            lcall   ___uint2fs
036C AA82      1342            mov     r2,dpl
036E AB83      1343            mov     r3,dph
0370 ACF0      1344            mov     r4,b
0372 FD        1345            mov     r5,a
0373 C002      1346            push    ar2
0375 C003      1347            push    ar3
0377 C004      1348            push    ar4
0379 C005      1349            push    ar5
037B 903333    1350            mov     dptr,#0x3333
037E 75F053    1351            mov     b,#0x53
0381 7440      1352            mov     a,#0x40
0383 120000    1353            lcall   ___fsmul
0386 AA82      1354            mov     r2,dpl
0388 AB83      1355            mov     r3,dph
038A ACF0      1356            mov     r4,b
038C FD        1357            mov     r5,a
038D E581      1358            mov     a,sp
038F 24FC      1359            add     a,#0xfc
0391 F581      1360            mov     sp,a
0393 E4        1361            clr     a
0394 C0E0      1362            push    acc
0396 74FC      1363            mov     a,#0xFC
0398 C0E0      1364            push    acc
039A 747F      1365            mov     a,#0x7F
039C C0E0      1366            push    acc
039E 7446      1367            mov     a,#0x46
03A0 C0E0      1368            push    acc
03A2 8A82      1369            mov     dpl,r2
03A4 8B83      1370            mov     dph,r3
03A6 8CF0      1371            mov     b,r4
03A8 ED        1372            mov     a,r5
03A9 120000    1373            lcall   ___fsdiv
03AC AA82      1374            mov     r2,dpl
03AE AB83      1375            mov     r3,dph
03B0 ACF0      1376            mov     r4,b
03B2 FD        1377            mov     r5,a
03B3 E581      1378            mov     a,sp
03B5 24FC      1379            add     a,#0xfc
03B7 F581      1380            mov     sp,a
03B9 8A82      1381            mov     dpl,r2
03BB 8B83      1382            mov     dph,r3
03BD 8CF0      1383            mov     b,r4
03BF ED        1384            mov     a,r5
03C0 22        1385            ret
03C1           1386   ;------------------------------------------------------------
03C1           1387   ;Allocation info for local variables in function 'InitPushButton'
03C1           1388   ;------------------------------------------------------------
03C1           1389   ;------------------------------------------------------------
03C1           1390   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:340: void InitPushButton(void)
03C1           1391   ;        -----------------------------------------
03C1           1392   ;         function InitPushButton
03C1           1393   ;        -----------------------------------------
03C1           1394   _InitPushButton:
03C1           1395   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:342: SFRPAGE = 0x20;  // Switch to Port Configuration Page
03C1 75A720    1396            mov     _SFRPAGE,#0x20
03C4           1397   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:343: P3MDOUT &= ~(1 << 2); // Set P3.2 as open-drain (input mode)
03C4 539CFB    1398            anl     _P3MDOUT,#0xFB
03C7           1399   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:344: P3 |= (1 << 2);  // Enable internal pull-up resistor
03C7 43B004    1400            orl     _P3,#0x04
03CA           1401   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:345: P3 |= (1 << 0); // P3.0
03CA 43B001    1402            orl     _P3,#0x01
03CD           1403   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:346: P3 |= (1 << 1); // P3.1
03CD 43B002    1404            orl     _P3,#0x02
03D0           1405   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:347: SFRPAGE = 0x00;  // Restore SFRPAGE
03D0 75A700    1406            mov     _SFRPAGE,#0x00
03D3 22        1407            ret
03D4           1408   ;------------------------------------------------------------
03D4           1409   ;Allocation info for local variables in function 'main'
03D4           1410   ;------------------------------------------------------------
03D4           1411   ;timeout_cnt               Allocated to registers r2 r3 
03D4           1412   ;cont1                     Allocated to registers 
03D4           1413   ;cont2                     Allocated to registers 
03D4           1414   ;v                         Allocated with name '_main_v_1_131'
03D4           1415   ;norm_x                    Allocated with name '_main_norm_x_1_131'
03D4           1416   ;norm_y                    Allocated with name '_main_norm_y_1_131'
03D4           1417   ;mode                      Allocated to registers r6 r7 
03D4           1418   ;------------------------------------------------------------
03D4           1419   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:351: void main (void)
03D4           1420   ;        -----------------------------------------
03D4           1421   ;         function main
03D4           1422   ;        -----------------------------------------
03D4           1423   _main:
03D4           1424   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:365: waitms(500);
03D4 9001F4    1425            mov     dptr,#0x01F4
03D7 120000    1426            lcall   _waitms
03DA           1427   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:366: printf("\x1b[2J"); // Clear screen using ANSI escape sequence.
03DA 7468      1428            mov     a,#__str_3
03DC C0E0      1429            push    acc
03DE 74C2      1430            mov     a,#(__str_3 >> 8)
03E0 C0E0      1431            push    acc
03E2 7480      1432            mov     a,#0x80
03E4 C0E0      1433            push    acc
03E6 120000    1434            lcall   _printf
03E9 1581      1435            dec     sp
03EB 1581      1436            dec     sp
03ED 1581      1437            dec     sp
03EF           1438   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:368: UART1_Init(9600);
03EF 902580    1439            mov     dptr,#0x2580
03F2 E4        1440            clr     a
03F3 F5F0      1441            mov     b,a
03F5 120000    1442            lcall   _UART1_Init
03F8           1443   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:382: ReceptionOff();
03F8 120000    1444            lcall   _ReceptionOff
03FB           1445   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:385: SendATCommand("AT+VER\r\n");
03FB 90C2A8    1446            mov     dptr,#__str_4
03FE 75F080    1447            mov     b,#0x80
0401 120000    1448            lcall   _SendATCommand
0404           1449   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:386: SendATCommand("AT+BAUD\r\n");
0404 90C2E8    1450            mov     dptr,#__str_5
0407 75F080    1451            mov     b,#0x80
040A 120000    1452            lcall   _SendATCommand
040D           1453   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:387: SendATCommand("AT+RFID\r\n");
040D 90C328    1454            mov     dptr,#__str_6
0410 75F080    1455            mov     b,#0x80
0413 120000    1456            lcall   _SendATCommand
0416           1457   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:388: SendATCommand("AT+DVID\r\n");
0416 90C368    1458            mov     dptr,#__str_7
0419 75F080    1459            mov     b,#0x80
041C 120000    1460            lcall   _SendATCommand
041F           1461   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:389: SendATCommand("AT+RFC\r\n");
041F 90C3A8    1462            mov     dptr,#__str_8
0422 75F080    1463            mov     b,#0x80
0425 120000    1464            lcall   _SendATCommand
0428           1465   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:390: SendATCommand("AT+POWE\r\n");
0428 90C3E8    1466            mov     dptr,#__str_9
042B 75F080    1467            mov     b,#0x80
042E 120000    1468            lcall   _SendATCommand
0431           1469   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:391: SendATCommand("AT+CLSS\r\n");
0431 90C428    1470            mov     dptr,#__str_10
0434 75F080    1471            mov     b,#0x80
0437 120000    1472            lcall   _SendATCommand
043A           1473   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:395: SendATCommand("AT+DVIDFDFD\r\n");
043A 90C468    1474            mov     dptr,#__str_11
043D 75F080    1475            mov     b,#0x80
0440 120000    1476            lcall   _SendATCommand
0443           1477   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:396: SendATCommand("AT+RFC113\r\n");
0443 90C4A8    1478            mov     dptr,#__str_12
0446 75F080    1479            mov     b,#0x80
0449 120000    1480            lcall   _SendATCommand
044C           1481   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:398: InitPinADC(2, 2); // Configure P2.2 as analog input
044C 75F002    1482            mov     _InitPinADC_PARM_2,#0x02
044F 758202    1483            mov     dpl,#0x02
0452 120000    1484            lcall   _InitPinADC
0455           1485   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:399: InitPinADC(2, 3); // Configure P2.3 as analog input
0455 75F003    1486            mov     _InitPinADC_PARM_2,#0x03
0458 758202    1487            mov     dpl,#0x02
045B 120000    1488            lcall   _InitPinADC
045E           1489   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:400: InitPinADC(2, 4); // Configure P2.4 as analog input
045E 75F004    1490            mov     _InitPinADC_PARM_2,#0x04
0461 758202    1491            mov     dpl,#0x02
0464 120000    1492            lcall   _InitPinADC
0467           1493   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:401: InitPinADC(2, 5); // Configure P2.5 as analog input
0467 75F005    1494            mov     _InitPinADC_PARM_2,#0x05
046A 758202    1495            mov     dpl,#0x02
046D 120000    1496            lcall   _InitPinADC
0470           1497   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:402: InitADC();
0470 120000    1498            lcall   _InitADC
0473           1499   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:403: InitPushButton();
0473 120000    1500            lcall   _InitPushButton
0476           1501   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:405: while(1)
0476           1502   L020034?:
0476           1503   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:409: putchar1('!'); // Send a message to the slave. First send the 'attention' character which is '!'
0476 758221    1504            mov     dpl,#0x21
0479 120000    1505            lcall   _putchar1
047C           1506   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:411: waitms(5); // This may need adjustment depending on how busy is the slave
047C 900005    1507            mov     dptr,#0x0005
047F 120000    1508            lcall   _waitms
0482           1509   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:419: putchar1('@'); // Request a message from the slave
0482 758240    1510            mov     dpl,#0x40
0485 120000    1511            lcall   _putchar1
0488           1512   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:424: while(1)
0488 7A00      1513            mov     r2,#0x00
048A 7B00      1514            mov     r3,#0x00
048C           1515   L020006?:
048C           1516   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:426: if(RXU1()) break; // Something has arrived
048C C002      1517            push    ar2
048E C003      1518            push    ar3
0490 120000    1519            lcall   _RXU1
0493 D003      1520            pop     ar3
0495 D002      1521            pop     ar2
0497 4000      1522            jc      L020007?
0499           1523   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:427: if(++timeout_cnt>250) break; // Wait up to 25ms for the repply
0499 0A        1524            inc     r2
049A BA00A8    1525            cjne    r2,#0x00,L020055?
049D 0B        1526            inc     r3
049E           1527   L020055?:
049E C3        1528            clr     c
049F 74FA      1529            mov     a,#0xFA
04A1 9A        1530            subb    a,r2
04A2 E4        1531            clr     a
04A3 6480      1532            xrl     a,#0x80
04A5 8BF0      1533            mov     b,r3
04A7 63F080    1534            xrl     b,#0x80
04AA 95F0      1535            subb    a,b
04AC 4000      1536            jc      L020007?
04AE           1537   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:428: Timer3us(100); // 100us*250=25ms
04AE 758264    1538            mov     dpl,#0x64
04B1 C002      1539            push    ar2
04B3 C003      1540            push    ar3
04B5 120000    1541            lcall   _Timer3us
04B8 D003      1542            pop     ar3
04BA D002      1543            pop     ar2
04BC 8000      1544            sjmp    L020006?
04BE           1545   L020007?:
04BE           1546   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:432: if(RXU1()) // Something has arrived from the slave
04BE 120000    1547            lcall   _RXU1
04C1 4000      1548            jc      L020057?
04C3 020000    1549            ljmp    L020031?
04C6           1550   L020057?:
04C6           1551   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:436: v[0] = Volts_at_Pin(QFP32_MUX_P2_2);
04C6 75820F    1552            mov     dpl,#0x0F
04C9 120000    1553            lcall   _Volts_at_Pin
04CC AA82      1554            mov     r2,dpl
04CE AB83      1555            mov     r3,dph
04D0 ACF0      1556            mov     r4,b
04D2 FD        1557            mov     r5,a
04D3 8A50      1558            mov     _main_v_1_131,r2
04D5 8B51      1559            mov     (_main_v_1_131 + 1),r3
04D7 8C52      1560            mov     (_main_v_1_131 + 2),r4
04D9 8D53      1561            mov     (_main_v_1_131 + 3),r5
04DB           1562   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:437: v[1] = Volts_at_Pin(QFP32_MUX_P2_3);
04DB 758210    1563            mov     dpl,#0x10
04DE 120000    1564            lcall   _Volts_at_Pin
04E1 AA82      1565            mov     r2,dpl
04E3 AB83      1566            mov     r3,dph
04E5 ACF0      1567            mov     r4,b
04E7 FD        1568            mov     r5,a
04E8 8A54      1569            mov     (_main_v_1_131 + 0x0004),r2
04EA 8B55      1570            mov     ((_main_v_1_131 + 0x0004) + 1),r3
04EC 8C56      1571            mov     ((_main_v_1_131 + 0x0004) + 2),r4
04EE 8D57      1572            mov     ((_main_v_1_131 + 0x0004) + 3),r5
04F0           1573   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:438: v[2] = Volts_at_Pin(QFP32_MUX_P2_4);
04F0 758211    1574            mov     dpl,#0x11
04F3 120000    1575            lcall   _Volts_at_Pin
04F6 AA82      1576            mov     r2,dpl
04F8 AB83      1577            mov     r3,dph
04FA ACF0      1578            mov     r4,b
04FC FD        1579            mov     r5,a
04FD 8A58      1580            mov     (_main_v_1_131 + 0x0008),r2
04FF 8B59      1581            mov     ((_main_v_1_131 + 0x0008) + 1),r3
0501 8C5A      1582            mov     ((_main_v_1_131 + 0x0008) + 2),r4
0503 8D5B      1583            mov     ((_main_v_1_131 + 0x0008) + 3),r5
0505           1584   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:439: v[3] = Volts_at_Pin(QFP32_MUX_P2_5);
0505 758212    1585            mov     dpl,#0x12
0508 120000    1586            lcall   _Volts_at_Pin
050B AA82      1587            mov     r2,dpl
050D AB83      1588            mov     r3,dph
050F ACF0      1589            mov     r4,b
0511 FD        1590            mov     r5,a
0512 8A5C      1591            mov     (_main_v_1_131 + 0x000c),r2
0514 8B5D      1592            mov     ((_main_v_1_131 + 0x000c) + 1),r3
0516 8C5E      1593            mov     ((_main_v_1_131 + 0x000c) + 2),r4
0518 8D5F      1594            mov     ((_main_v_1_131 + 0x000c) + 3),r5
051A           1595   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:441: norm_x = (v[1] / 3.294) * 2.0 - 1.0;  // Horizontal (P2.3)
051A 74E5      1596            mov     a,#0xE5
051C C0E0      1597            push    acc
051E 74D0      1598            mov     a,#0xD0
0520 C0E0      1599            push    acc
0522 7452      1600            mov     a,#0x52
0524 C0E0      1601            push    acc
0526 7440      1602            mov     a,#0x40
0528 C0E0      1603            push    acc
052A 855482    1604            mov     dpl,(_main_v_1_131 + 0x0004)
052D 855583    1605            mov     dph,((_main_v_1_131 + 0x0004) + 1)
0530 8556F0    1606            mov     b,((_main_v_1_131 + 0x0004) + 2)
0533 E557      1607            mov     a,((_main_v_1_131 + 0x0004) + 3)
0535 120000    1608            lcall   ___fsdiv
0538 AA82      1609            mov     r2,dpl
053A AB83      1610            mov     r3,dph
053C ACF0      1611            mov     r4,b
053E FD        1612            mov     r5,a
053F E581      1613            mov     a,sp
0541 24FC      1614            add     a,#0xfc
0543 F581      1615            mov     sp,a
0545 C002      1616            push    ar2
0547 C003      1617            push    ar3
0549 C004      1618            push    ar4
054B C005      1619            push    ar5
054D 900000    1620            mov     dptr,#(0x00&0x00ff)
0550 E4        1621            clr     a
0551 F5F0      1622            mov     b,a
0553 7440      1623            mov     a,#0x40
0555 120000    1624            lcall   ___fsmul
0558 AA82      1625            mov     r2,dpl
055A AB83      1626            mov     r3,dph
055C ACF0      1627            mov     r4,b
055E FD        1628            mov     r5,a
055F E581      1629            mov     a,sp
0561 24FC      1630            add     a,#0xfc
0563 F581      1631            mov     sp,a
0565 E4        1632            clr     a
0566 C0E0      1633            push    acc
0568 C0E0      1634            push    acc
056A 7480      1635            mov     a,#0x80
056C C0E0      1636            push    acc
056E 743F      1637            mov     a,#0x3F
0570 C0E0      1638            push    acc
0572 8A82      1639            mov     dpl,r2
0574 8B83      1640            mov     dph,r3
0576 8CF0      1641            mov     b,r4
0578 ED        1642            mov     a,r5
0579 120000    1643            lcall   ___fssub
057C 8582A0    1644            mov     _main_norm_x_1_131,dpl
057F 8583A1    1645            mov     (_main_norm_x_1_131 + 1),dph
0582 85F0A2    1646            mov     (_main_norm_x_1_131 + 2),b
0585 F5A3      1647            mov     (_main_norm_x_1_131 + 3),a
0587 E581      1648            mov     a,sp
0589 24FC      1649            add     a,#0xfc
058B F581      1650            mov     sp,a
058D           1651   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:442: norm_y = (v[0] / 3.294) * 2.0 - 1.0;  // Vertical   (P2.2)
058D 74E5      1652            mov     a,#0xE5
058F C0E0      1653            push    acc
0591 74D0      1654            mov     a,#0xD0
0593 C0E0      1655            push    acc
0595 7452      1656            mov     a,#0x52
0597 C0E0      1657            push    acc
0599 7440      1658            mov     a,#0x40
059B C0E0      1659            push    acc
059D 855082    1660            mov     dpl,_main_v_1_131
05A0 855183    1661            mov     dph,(_main_v_1_131 + 1)
05A3 8552F0    1662            mov     b,(_main_v_1_131 + 2)
05A6 E553      1663            mov     a,(_main_v_1_131 + 3)
05A8 120000    1664            lcall   ___fsdiv
05AB AE82      1665            mov     r6,dpl
05AD AF83      1666            mov     r7,dph
05AF AAF0      1667            mov     r2,b
05B1 FB        1668            mov     r3,a
05B2 E581      1669            mov     a,sp
05B4 24FC      1670            add     a,#0xfc
05B6 F581      1671            mov     sp,a
05B8 C006      1672            push    ar6
05BA C007      1673            push    ar7
05BC C002      1674            push    ar2
05BE C003      1675            push    ar3
05C0 900000    1676            mov     dptr,#(0x00&0x00ff)
05C3 E4        1677            clr     a
05C4 F5F0      1678            mov     b,a
05C6 7440      1679            mov     a,#0x40
05C8 120000    1680            lcall   ___fsmul
05CB AA82      1681            mov     r2,dpl
05CD AB83      1682            mov     r3,dph
05CF ACF0      1683            mov     r4,b
05D1 FD        1684            mov     r5,a
05D2 E581      1685            mov     a,sp
05D4 24FC      1686            add     a,#0xfc
05D6 F581      1687            mov     sp,a
05D8 E4        1688            clr     a
05D9 C0E0      1689            push    acc
05DB C0E0      1690            push    acc
05DD 7480      1691            mov     a,#0x80
05DF C0E0      1692            push    acc
05E1 743F      1693            mov     a,#0x3F
05E3 C0E0      1694            push    acc
05E5 8A82      1695            mov     dpl,r2
05E7 8B83      1696            mov     dph,r3
05E9 8CF0      1697            mov     b,r4
05EB ED        1698            mov     a,r5
05EC 120000    1699            lcall   ___fssub
05EF 8582F0    1700            mov     _main_norm_y_1_131,dpl
05F2 8583F1    1701            mov     (_main_norm_y_1_131 + 1),dph
05F5 85F0F2    1702            mov     (_main_norm_y_1_131 + 2),b
05F8 F5F3      1703            mov     (_main_norm_y_1_131 + 3),a
05FA E581      1704            mov     a,sp
05FC 24FC      1705            add     a,#0xfc
05FE F581      1706            mov     sp,a
0600           1707   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:444: button_state = (P3 & (1 << 2)) ? 0 : 1;
0600 E5B0      1708            mov     a,_P3
0602           1709   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:445: button_1_state = (P3 & (1 << 0)) ? 0 : 1; // If HIGH, button not pressed; If LOW, button pressed
0602 E5B0      1710            mov     a,_P3
0604 5401      1711            anl     a,#0x01
0606 FE        1712            mov     r6,a
0607 B401A8    1713            cjne    a,#0x01,L020058?
060A           1714   L020058?:
060A 9240      1715            mov     _main_button_1_state_1_131,c
060C           1716   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:446: button_2_state = (P3 & (1 << 1)) ? 0 : 1; 
060C E5B0      1717            mov     a,_P3
060E 03        1718            rr      a
060F 5401      1719            anl     a,#0x01
0611 FE        1720            mov     r6,a
0612 B401E8    1721            cjne    a,#0x01,L020059?
0615           1722   L020059?:
0615 9290      1723            mov     _main_button_2_state_1_131,c
0617           1724   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:448: if (button_1_state == 1) {
0617 304028    1725            jnb     _main_button_1_state_1_131,L020028?
061A           1726   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:449: printf("button 1 pressed. switch to automatic mode");
061A 7468      1727            mov     a,#__str_13
061C C0E0      1728            push    acc
061E 74C7      1729            mov     a,#(__str_13 >> 8)
0620 C0E0      1730            push    acc
0622 7480      1731            mov     a,#0x80
0624 C0E0      1732            push    acc
0626 120000    1733            lcall   _printf
0629 1581      1734            dec     sp
062B 1581      1735            dec     sp
062D 1581      1736            dec     sp
062F           1737   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:450: mode = 5;
062F 7E05      1738            mov     r6,#0x05
0631 7F00      1739            mov     r7,#0x00
0633 020000    1740            ljmp    L020029?
0636           1741   L020028?:
0636           1742   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:453: else if (button_2_state == 1) {
0636 3090E8    1743            jnb     _main_button_2_state_1_131,L020025?
0639           1744   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:454: printf("button 2 pressed. switch to manual mode");
0639 7428      1745            mov     a,#__str_14
063B C0E0      1746            push    acc
063D 74C8      1747            mov     a,#(__str_14 >> 8)
063F C0E0      1748            push    acc
0641 7480      1749            mov     a,#0x80
0643 C0E0      1750            push    acc
0645 120000    1751            lcall   _printf
0648 1581      1752            dec     sp
064A 1581      1753            dec     sp
064C 1581      1754            dec     sp
064E           1755   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:455: mode = 6;
064E 7E06      1756            mov     r6,#0x06
0650 7F00      1757            mov     r7,#0x00
0652 020000    1758            ljmp    L020029?
0655           1759   L020025?:
0655           1760   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:468: else if (norm_x <= 1.5 && norm_x > 0.5) //right
0655 E4        1761            clr     a
0656 C0E0      1762            push    acc
0658 C0E0      1763            push    acc
065A 74C0      1764            mov     a,#0xC0
065C C0E0      1765            push    acc
065E 743F      1766            mov     a,#0x3F
0660 C0E0      1767            push    acc
0662 85A082    1768            mov     dpl,_main_norm_x_1_131
0665 85A183    1769            mov     dph,(_main_norm_x_1_131 + 1)
0668 85A2F0    1770            mov     b,(_main_norm_x_1_131 + 2)
066B E5A3      1771            mov     a,(_main_norm_x_1_131 + 3)
066D 120000    1772            lcall   ___fsgt
0670 AA82      1773            mov     r2,dpl
0672 E581      1774            mov     a,sp
0674 24FC      1775            add     a,#0xfc
0676 F581      1776            mov     sp,a
0678 EA        1777            mov     a,r2
0679 7000      1778            jnz     L020021?
067B C0E0      1779            push    acc
067D C0E0      1780            push    acc
067F C0E0      1781            push    acc
0681 743F      1782            mov     a,#0x3F
0683 C0E0      1783            push    acc
0685 85A082    1784            mov     dpl,_main_norm_x_1_131
0688 85A183    1785            mov     dph,(_main_norm_x_1_131 + 1)
068B 85A2F0    1786            mov     b,(_main_norm_x_1_131 + 2)
068E E5A3      1787            mov     a,(_main_norm_x_1_131 + 3)
0690 120000    1788            lcall   ___fsgt
0693 AA82      1789            mov     r2,dpl
0695 E581      1790            mov     a,sp
0697 24FC      1791            add     a,#0xfc
0699 F581      1792            mov     sp,a
069B EA        1793            mov     a,r2
069C 6000      1794            jz      L020021?
069E           1795   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:470: mode = 3;
069E 7E03      1796            mov     r6,#0x03
06A0 7F00      1797            mov     r7,#0x00
06A2 020000    1798            ljmp    L020029?
06A5           1799   L020021?:
06A5           1800   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:473: else if (norm_x <-0.5 && norm_x>= -1.5) //left
06A5 E4        1801            clr     a
06A6 C0E0      1802            push    acc
06A8 C0E0      1803            push    acc
06AA C0E0      1804            push    acc
06AC 74BF      1805            mov     a,#0xBF
06AE C0E0      1806            push    acc
06B0 85A082    1807            mov     dpl,_main_norm_x_1_131
06B3 85A183    1808            mov     dph,(_main_norm_x_1_131 + 1)
06B6 85A2F0    1809            mov     b,(_main_norm_x_1_131 + 2)
06B9 E5A3      1810            mov     a,(_main_norm_x_1_131 + 3)
06BB 120000    1811            lcall   ___fslt
06BE AA82      1812            mov     r2,dpl
06C0 E581      1813            mov     a,sp
06C2 24FC      1814            add     a,#0xfc
06C4 F581      1815            mov     sp,a
06C6 EA        1816            mov     a,r2
06C7 6000      1817            jz      L020017?
06C9 E4        1818            clr     a
06CA C0E0      1819            push    acc
06CC C0E0      1820            push    acc
06CE 74C0      1821            mov     a,#0xC0
06D0 C0E0      1822            push    acc
06D2 74BF      1823            mov     a,#0xBF
06D4 C0E0      1824            push    acc
06D6 85A082    1825            mov     dpl,_main_norm_x_1_131
06D9 85A183    1826            mov     dph,(_main_norm_x_1_131 + 1)
06DC 85A2F0    1827            mov     b,(_main_norm_x_1_131 + 2)
06DF E5A3      1828            mov     a,(_main_norm_x_1_131 + 3)
06E1 120000    1829            lcall   ___fslt
06E4 AA82      1830            mov     r2,dpl
06E6 E581      1831            mov     a,sp
06E8 24FC      1832            add     a,#0xfc
06EA F581      1833            mov     sp,a
06EC EA        1834            mov     a,r2
06ED           1835   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:475: mode = 4;
06ED 7000      1836            jnz     L020017?
06EF 7E04      1837            mov     r6,#0x04
06F1 FF        1838            mov     r7,a
06F2 020000    1839            ljmp    L020029?
06F5           1840   L020017?:
06F5           1841   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:478: else if (norm_y <= 1.5 && norm_y > 0.5) // forward
06F5 E4        1842            clr     a
06F6 C0E0      1843            push    acc
06F8 C0E0      1844            push    acc
06FA 74C0      1845            mov     a,#0xC0
06FC C0E0      1846            push    acc
06FE 743F      1847            mov     a,#0x3F
0700 C0E0      1848            push    acc
0702 85F082    1849            mov     dpl,_main_norm_y_1_131
0705 85F183    1850            mov     dph,(_main_norm_y_1_131 + 1)
0708 85F2F0    1851            mov     b,(_main_norm_y_1_131 + 2)
070B E5F3      1852            mov     a,(_main_norm_y_1_131 + 3)
070D 120000    1853            lcall   ___fsgt
0710 AA82      1854            mov     r2,dpl
0712 E581      1855            mov     a,sp
0714 24FC      1856            add     a,#0xfc
0716 F581      1857            mov     sp,a
0718 EA        1858            mov     a,r2
0719 7000      1859            jnz     L020013?
071B C0E0      1860            push    acc
071D C0E0      1861            push    acc
071F C0E0      1862            push    acc
0721 743F      1863            mov     a,#0x3F
0723 C0E0      1864            push    acc
0725 85F082    1865            mov     dpl,_main_norm_y_1_131
0728 85F183    1866            mov     dph,(_main_norm_y_1_131 + 1)
072B 85F2F0    1867            mov     b,(_main_norm_y_1_131 + 2)
072E E5F3      1868            mov     a,(_main_norm_y_1_131 + 3)
0730 120000    1869            lcall   ___fsgt
0733 AA82      1870            mov     r2,dpl
0735 E581      1871            mov     a,sp
0737 24FC      1872            add     a,#0xfc
0739 F581      1873            mov     sp,a
073B EA        1874            mov     a,r2
073C 6000      1875            jz      L020013?
073E           1876   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:480: mode = 1;
073E 7E01      1877            mov     r6,#0x01
0740 7F00      1878            mov     r7,#0x00
0742 8000      1879            sjmp    L020029?
0744           1880   L020013?:
0744           1881   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:483: else if (norm_y <-0.5 && norm_y>= -1.5) //backwards
0744 E4        1882            clr     a
0745 C0E0      1883            push    acc
0747 C0E0      1884            push    acc
0749 C0E0      1885            push    acc
074B 74BF      1886            mov     a,#0xBF
074D C0E0      1887            push    acc
074F 85F082    1888            mov     dpl,_main_norm_y_1_131
0752 85F183    1889            mov     dph,(_main_norm_y_1_131 + 1)
0755 85F2F0    1890            mov     b,(_main_norm_y_1_131 + 2)
0758 E5F3      1891            mov     a,(_main_norm_y_1_131 + 3)
075A 120000    1892            lcall   ___fslt
075D AA82      1893            mov     r2,dpl
075F E581      1894            mov     a,sp
0761 24FC      1895            add     a,#0xfc
0763 F581      1896            mov     sp,a
0765 EA        1897            mov     a,r2
0766 6000      1898            jz      L020009?
0768 E4        1899            clr     a
0769 C0E0      1900            push    acc
076B C0E0      1901            push    acc
076D 74C0      1902            mov     a,#0xC0
076F C0E0      1903            push    acc
0771 74BF      1904            mov     a,#0xBF
0773 C0E0      1905            push    acc
0775 85F082    1906            mov     dpl,_main_norm_y_1_131
0778 85F183    1907            mov     dph,(_main_norm_y_1_131 + 1)
077B 85F2F0    1908            mov     b,(_main_norm_y_1_131 + 2)
077E E5F3      1909            mov     a,(_main_norm_y_1_131 + 3)
0780 120000    1910            lcall   ___fslt
0783 AA82      1911            mov     r2,dpl
0785 E581      1912            mov     a,sp
0787 24FC      1913            add     a,#0xfc
0789 F581      1914            mov     sp,a
078B EA        1915            mov     a,r2
078C           1916   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:485: mode = 2;
078C 7000      1917            jnz     L020009?
078E 7E02      1918            mov     r6,#0x02
0790 FF        1919            mov     r7,a
0791 8000      1920            sjmp    L020029?
0793           1921   L020009?:
0793           1922   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:489: mode = 0;
0793 7E00      1923            mov     r6,#0x00
0795 7F00      1924            mov     r7,#0x00
0797           1925   L020029?:
0797           1926   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:492: sprintf(buff, "test %d\n", mode);
0797 C006      1927            push    ar6
0799 C007      1928            push    ar7
079B 74E8      1929            mov     a,#__str_15
079D C0E0      1930            push    acc
079F 74C9      1931            mov     a,#(__str_15 >> 8)
07A1 C0E0      1932            push    acc
07A3 7480      1933            mov     a,#0x80
07A5 C0E0      1934            push    acc
07A7 7410      1935            mov     a,#_buff
07A9 C0E0      1936            push    acc
07AB 7446      1937            mov     a,#(_buff >> 8)
07AD C0E0      1938            push    acc
07AF 7440      1939            mov     a,#0x40
07B1 C0E0      1940            push    acc
07B3 120000    1941            lcall   _sprintf
07B6 E581      1942            mov     a,sp
07B8 24F8      1943            add     a,#0xf8
07BA F581      1944            mov     sp,a
07BC           1945   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:495: sendstr1(buff);
07BC 904610    1946            mov     dptr,#_buff
07BF 75F040    1947            mov     b,#0x40
07C2 120000    1948            lcall   _sendstr1
07C5           1949   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:498: waitms(100);
07C5 900064    1950            mov     dptr,#0x0064
07C8 120000    1951            lcall   _waitms
07CB 8000      1952            sjmp    L020032?
07CD           1953   L020031?:
07CD           1954   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:516: printf("NO RESPONSE\r\n", buff);
07CD 7410      1955            mov     a,#_buff
07CF C0E0      1956            push    acc
07D1 7446      1957            mov     a,#(_buff >> 8)
07D3 C0E0      1958            push    acc
07D5 7440      1959            mov     a,#0x40
07D7 C0E0      1960            push    acc
07D9 74A8      1961            mov     a,#__str_16
07DB C0E0      1962            push    acc
07DD 74CA      1963            mov     a,#(__str_16 >> 8)
07DF C0E0      1964            push    acc
07E1 7480      1965            mov     a,#0x80
07E3 C0E0      1966            push    acc
07E5 120000    1967            lcall   _printf
07E8 E581      1968            mov     a,sp
07EA 24FA      1969            add     a,#0xfa
07EC F581      1970            mov     sp,a
07EE           1971   L020032?:
07EE           1972   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:519: waitms(50);  // Set the information interchange pace: communicate about every 50ms
07EE 900032    1973            mov     dptr,#0x0032
07F1 120000    1974            lcall   _waitms
07F4 020000    1975            ljmp    L020034?
07F7           1976            rseg R_CSEG
07F7           1977   
0000           1978            rseg R_XINIT
0000           1979   
0000           1980            rseg R_CONST
0000           1981   __str_0:
0000 436F6D6D  1982            db 'Command: %s'
     616E643A
     202573
000B 00        1983            db 0x00
000C           1984   __str_1:
000C 52657370  1985            db 'Response: %s'
     6F6E7365
     3A202573
0018 0D        1986            db 0x0D
0019 0A        1987            db 0x0A
001A 00        1988            db 0x00
001B           1989   __str_2:
001B 41542B44  1990            db 'AT+DVID0000'
     56494430
     303030
0026 0D        1991            db 0x0D
0027 0A        1992            db 0x0A
0028 00        1993            db 0x00
0029           1994   __str_3:
0029 1B        1995            db 0x1B
002A 5B324A    1996            db '[2J'
002D 00        1997            db 0x00
002E           1998   __str_4:
002E 41542B56  1999            db 'AT+VER'
     4552
0034 0D        2000            db 0x0D
0035 0A        2001            db 0x0A
0036 00        2002            db 0x00
0037           2003   __str_5:
0037 41542B42  2004            db 'AT+BAUD'
     415544
003E 0D        2005            db 0x0D
003F 0A        2006            db 0x0A
0040 00        2007            db 0x00
0041           2008   __str_6:
0041 41542B52  2009            db 'AT+RFID'
     464944
0048 0D        2010            db 0x0D
0049 0A        2011            db 0x0A
004A 00        2012            db 0x00
004B           2013   __str_7:
004B 41542B44  2014            db 'AT+DVID'
     564944
0052 0D        2015            db 0x0D
0053 0A        2016            db 0x0A
0054 00        2017            db 0x00
0055           2018   __str_8:
0055 41542B52  2019            db 'AT+RFC'
     4643
005B 0D        2020            db 0x0D
005C 0A        2021            db 0x0A
005D 00        2022            db 0x00
005E           2023   __str_9:
005E 41542B50  2024            db 'AT+POWE'
     4F5745
0065 0D        2025            db 0x0D
0066 0A        2026            db 0x0A
0067 00        2027            db 0x00
0068           2028   __str_10:
0068 41542B43  2029            db 'AT+CLSS'
     4C5353
006F 0D        2030            db 0x0D
0070 0A        2031            db 0x0A
0071 00        2032            db 0x00
0072           2033   __str_11:
0072 41542B44  2034            db 'AT+DVIDFDFD'
     56494446
     444644
007D 0D        2035            db 0x0D
007E 0A        2036            db 0x0A
007F 00        2037            db 0x00
0080           2038   __str_12:
0080 41542B52  2039            db 'AT+RFC113'
     46433131
     33
0089 0D        2040            db 0x0D
008A 0A        2041            db 0x0A
008B 00        2042            db 0x00
008C           2043   __str_13:
008C 62757474  2044            db 'button 1 pressed. switch to automatic mode'
     6F6E2031
     20707265
     73736564
     2E207377
     69746368
     20746F20
     6175746F
     6D617469
     63206D6F
     6465
00B6 00        2045            db 0x00
00B7           2046   __str_14:
00B7 62757474  2047            db 'button 2 pressed. switch to manual mode'
     6F6E2032
     20707265
     73736564
     2E207377
     69746368
     20746F20
     6D616E75
     616C206D
     6F6465
00DE 00        2048            db 0x00
00DF           2049   __str_15:
00DF 74657374  2050            db 'test %d'
     202564
00E6 0A        2051            db 0x0A
00E7 00        2052            db 0x00
00E8           2053   __str_16:
00E8 4E4F2052  2054            db 'NO RESPONSE'
     4553504F
     4E5345
00F3 0D        2055            db 0x0D
00F4 0A        2056            db 0x0A
00F5 00        2057            db 0x00
00F6           2058   
0003           2059            CSEG
0003           2060   
0003           2061   end
