0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1170 (Feb 16 2022) (MSVC)
0000              4   ; This file was generated Thu Mar 27 16:38:18 2025
0000              5   ;--------------------------------------------------------
                  5   $name EFM8_JDY40_test
                  6   $optc51 --model-small
0000              8            R_DSEG    segment data
0000              9            R_CSEG    segment code
0000             10            R_BSEG    segment bit
0000             11            R_XSEG    segment xdata
0000             12            R_PSEG    segment xdata
0000             13            R_ISEG    segment idata
0000             14            R_OSEG    segment data overlay
0000             15            BIT_BANK  segment data overlay
0000             16            R_HOME    segment code
0000             17            R_GSINIT  segment code
0000             18            R_IXSEG   segment xdata
0000             19            R_CONST   segment code
0000             20            R_XINIT   segment code
0000             21            R_DINIT   segment code
0000             22   
0000             23   ;--------------------------------------------------------
0000             24   ; Public variables in this module
0000             25   ;--------------------------------------------------------
0000             26            public _InitPinADC_PARM_2
0000             27            public _main
0000             28            public _InitPushButton
0000             29            public _Volts_at_Pin
0000             30            public _ADC_at_Pin
0000             31            public _InitPinADC
0000             32            public _ReceptionOff
0000             33            public _SendATCommand
0000             34            public _waitms_or_RI1
0000             35            public _RXU1
0000             36            public _getstr1
0000             37            public _getchar1_with_timeout
0000             38            public _getchar1
0000             39            public _sendstr1
0000             40            public _putchar1
0000             41            public _UART1_Init
0000             42            public _waitms
0000             43            public _Timer3us
0000             44            public _InitADC
0000             45            public __c51_external_startup
0000             46            public _buff
0000             47            public _getstr1_PARM_2
0000             48   ;--------------------------------------------------------
0000             49   ; Special Function Registers
0000             50   ;--------------------------------------------------------
0000             51   _ACC            DATA 0xe0
0000             52   _ADC0ASAH       DATA 0xb6
0000             53   _ADC0ASAL       DATA 0xb5
0000             54   _ADC0ASCF       DATA 0xa1
0000             55   _ADC0ASCT       DATA 0xc7
0000             56   _ADC0CF0        DATA 0xbc
0000             57   _ADC0CF1        DATA 0xb9
0000             58   _ADC0CF2        DATA 0xdf
0000             59   _ADC0CN0        DATA 0xe8
0000             60   _ADC0CN1        DATA 0xb2
0000             61   _ADC0CN2        DATA 0xb3
0000             62   _ADC0GTH        DATA 0xc4
0000             63   _ADC0GTL        DATA 0xc3
0000             64   _ADC0H          DATA 0xbe
0000             65   _ADC0L          DATA 0xbd
0000             66   _ADC0LTH        DATA 0xc6
0000             67   _ADC0LTL        DATA 0xc5
0000             68   _ADC0MX         DATA 0xbb
0000             69   _B              DATA 0xf0
0000             70   _CKCON0         DATA 0x8e
0000             71   _CKCON1         DATA 0xa6
0000             72   _CLEN0          DATA 0xc6
0000             73   _CLIE0          DATA 0xc7
0000             74   _CLIF0          DATA 0xe8
0000             75   _CLKSEL         DATA 0xa9
0000             76   _CLOUT0         DATA 0xd1
0000             77   _CLU0CF         DATA 0xb1
0000             78   _CLU0FN         DATA 0xaf
0000             79   _CLU0MX         DATA 0x84
0000             80   _CLU1CF         DATA 0xb3
0000             81   _CLU1FN         DATA 0xb2
0000             82   _CLU1MX         DATA 0x85
0000             83   _CLU2CF         DATA 0xb6
0000             84   _CLU2FN         DATA 0xb5
0000             85   _CLU2MX         DATA 0x91
0000             86   _CLU3CF         DATA 0xbf
0000             87   _CLU3FN         DATA 0xbe
0000             88   _CLU3MX         DATA 0xae
0000             89   _CMP0CN0        DATA 0x9b
0000             90   _CMP0CN1        DATA 0x99
0000             91   _CMP0MD         DATA 0x9d
0000             92   _CMP0MX         DATA 0x9f
0000             93   _CMP1CN0        DATA 0xbf
0000             94   _CMP1CN1        DATA 0xac
0000             95   _CMP1MD         DATA 0xab
0000             96   _CMP1MX         DATA 0xaa
0000             97   _CRC0CN0        DATA 0xce
0000             98   _CRC0CN1        DATA 0x86
0000             99   _CRC0CNT        DATA 0xd3
0000            100   _CRC0DAT        DATA 0xcb
0000            101   _CRC0FLIP       DATA 0xcf
0000            102   _CRC0IN         DATA 0xca
0000            103   _CRC0ST         DATA 0xd2
0000            104   _DAC0CF0        DATA 0x91
0000            105   _DAC0CF1        DATA 0x92
0000            106   _DAC0H          DATA 0x85
0000            107   _DAC0L          DATA 0x84
0000            108   _DAC1CF0        DATA 0x93
0000            109   _DAC1CF1        DATA 0x94
0000            110   _DAC1H          DATA 0x8a
0000            111   _DAC1L          DATA 0x89
0000            112   _DAC2CF0        DATA 0x95
0000            113   _DAC2CF1        DATA 0x96
0000            114   _DAC2H          DATA 0x8c
0000            115   _DAC2L          DATA 0x8b
0000            116   _DAC3CF0        DATA 0x9a
0000            117   _DAC3CF1        DATA 0x9c
0000            118   _DAC3H          DATA 0x8e
0000            119   _DAC3L          DATA 0x8d
0000            120   _DACGCF0        DATA 0x88
0000            121   _DACGCF1        DATA 0x98
0000            122   _DACGCF2        DATA 0xa2
0000            123   _DERIVID        DATA 0xad
0000            124   _DEVICEID       DATA 0xb5
0000            125   _DPH            DATA 0x83
0000            126   _DPL            DATA 0x82
0000            127   _EIE1           DATA 0xe6
0000            128   _EIE2           DATA 0xf3
0000            129   _EIP1           DATA 0xbb
0000            130   _EIP1H          DATA 0xee
0000            131   _EIP2           DATA 0xed
0000            132   _EIP2H          DATA 0xf6
0000            133   _EMI0CN         DATA 0xe7
0000            134   _FLKEY          DATA 0xb7
0000            135   _HFO0CAL        DATA 0xc7
0000            136   _HFO1CAL        DATA 0xd6
0000            137   _HFOCN          DATA 0xef
0000            138   _I2C0ADM        DATA 0xff
0000            139   _I2C0CN0        DATA 0xba
0000            140   _I2C0DIN        DATA 0xbc
0000            141   _I2C0DOUT       DATA 0xbb
0000            142   _I2C0FCN0       DATA 0xad
0000            143   _I2C0FCN1       DATA 0xab
0000            144   _I2C0FCT        DATA 0xf5
0000            145   _I2C0SLAD       DATA 0xbd
0000            146   _I2C0STAT       DATA 0xb9
0000            147   _IE             DATA 0xa8
0000            148   _IP             DATA 0xb8
0000            149   _IPH            DATA 0xf2
0000            150   _IT01CF         DATA 0xe4
0000            151   _LFO0CN         DATA 0xb1
0000            152   _P0             DATA 0x80
0000            153   _P0MASK         DATA 0xfe
0000            154   _P0MAT          DATA 0xfd
0000            155   _P0MDIN         DATA 0xf1
0000            156   _P0MDOUT        DATA 0xa4
0000            157   _P0SKIP         DATA 0xd4
0000            158   _P1             DATA 0x90
0000            159   _P1MASK         DATA 0xee
0000            160   _P1MAT          DATA 0xed
0000            161   _P1MDIN         DATA 0xf2
0000            162   _P1MDOUT        DATA 0xa5
0000            163   _P1SKIP         DATA 0xd5
0000            164   _P2             DATA 0xa0
0000            165   _P2MASK         DATA 0xfc
0000            166   _P2MAT          DATA 0xfb
0000            167   _P2MDIN         DATA 0xf3
0000            168   _P2MDOUT        DATA 0xa6
0000            169   _P2SKIP         DATA 0xcc
0000            170   _P3             DATA 0xb0
0000            171   _P3MDIN         DATA 0xf4
0000            172   _P3MDOUT        DATA 0x9c
0000            173   _PCA0CENT       DATA 0x9e
0000            174   _PCA0CLR        DATA 0x9c
0000            175   _PCA0CN0        DATA 0xd8
0000            176   _PCA0CPH0       DATA 0xfc
0000            177   _PCA0CPH1       DATA 0xea
0000            178   _PCA0CPH2       DATA 0xec
0000            179   _PCA0CPH3       DATA 0xf5
0000            180   _PCA0CPH4       DATA 0x85
0000            181   _PCA0CPH5       DATA 0xde
0000            182   _PCA0CPL0       DATA 0xfb
0000            183   _PCA0CPL1       DATA 0xe9
0000            184   _PCA0CPL2       DATA 0xeb
0000            185   _PCA0CPL3       DATA 0xf4
0000            186   _PCA0CPL4       DATA 0x84
0000            187   _PCA0CPL5       DATA 0xdd
0000            188   _PCA0CPM0       DATA 0xda
0000            189   _PCA0CPM1       DATA 0xdb
0000            190   _PCA0CPM2       DATA 0xdc
0000            191   _PCA0CPM3       DATA 0xae
0000            192   _PCA0CPM4       DATA 0xaf
0000            193   _PCA0CPM5       DATA 0xcc
0000            194   _PCA0H          DATA 0xfa
0000            195   _PCA0L          DATA 0xf9
0000            196   _PCA0MD         DATA 0xd9
0000            197   _PCA0POL        DATA 0x96
0000            198   _PCA0PWM        DATA 0xf7
0000            199   _PCON0          DATA 0x87
0000            200   _PCON1          DATA 0xcd
0000            201   _PFE0CN         DATA 0xc1
0000            202   _PRTDRV         DATA 0xf6
0000            203   _PSCTL          DATA 0x8f
0000            204   _PSTAT0         DATA 0xaa
0000            205   _PSW            DATA 0xd0
0000            206   _REF0CN         DATA 0xd1
0000            207   _REG0CN         DATA 0xc9
0000            208   _REVID          DATA 0xb6
0000            209   _RSTSRC         DATA 0xef
0000            210   _SBCON1         DATA 0x94
0000            211   _SBRLH1         DATA 0x96
0000            212   _SBRLL1         DATA 0x95
0000            213   _SBUF           DATA 0x99
0000            214   _SBUF0          DATA 0x99
0000            215   _SBUF1          DATA 0x92
0000            216   _SCON           DATA 0x98
0000            217   _SCON0          DATA 0x98
0000            218   _SCON1          DATA 0xc8
0000            219   _SFRPAGE        DATA 0xa7
0000            220   _SFRPGCN        DATA 0xbc
0000            221   _SFRSTACK       DATA 0xd7
0000            222   _SMB0ADM        DATA 0xd6
0000            223   _SMB0ADR        DATA 0xd7
0000            224   _SMB0CF         DATA 0xc1
0000            225   _SMB0CN0        DATA 0xc0
0000            226   _SMB0DAT        DATA 0xc2
0000            227   _SMB0FCN0       DATA 0xc3
0000            228   _SMB0FCN1       DATA 0xc4
0000            229   _SMB0FCT        DATA 0xef
0000            230   _SMB0RXLN       DATA 0xc5
0000            231   _SMB0TC         DATA 0xac
0000            232   _SMOD1          DATA 0x93
0000            233   _SP             DATA 0x81
0000            234   _SPI0CFG        DATA 0xa1
0000            235   _SPI0CKR        DATA 0xa2
0000            236   _SPI0CN0        DATA 0xf8
0000            237   _SPI0DAT        DATA 0xa3
0000            238   _SPI0FCN0       DATA 0x9a
0000            239   _SPI0FCN1       DATA 0x9b
0000            240   _SPI0FCT        DATA 0xf7
0000            241   _SPI0PCF        DATA 0xdf
0000            242   _TCON           DATA 0x88
0000            243   _TH0            DATA 0x8c
0000            244   _TH1            DATA 0x8d
0000            245   _TL0            DATA 0x8a
0000            246   _TL1            DATA 0x8b
0000            247   _TMOD           DATA 0x89
0000            248   _TMR2CN0        DATA 0xc8
0000            249   _TMR2CN1        DATA 0xfd
0000            250   _TMR2H          DATA 0xcf
0000            251   _TMR2L          DATA 0xce
0000            252   _TMR2RLH        DATA 0xcb
0000            253   _TMR2RLL        DATA 0xca
0000            254   _TMR3CN0        DATA 0x91
0000            255   _TMR3CN1        DATA 0xfe
0000            256   _TMR3H          DATA 0x95
0000            257   _TMR3L          DATA 0x94
0000            258   _TMR3RLH        DATA 0x93
0000            259   _TMR3RLL        DATA 0x92
0000            260   _TMR4CN0        DATA 0x98
0000            261   _TMR4CN1        DATA 0xff
0000            262   _TMR4H          DATA 0xa5
0000            263   _TMR4L          DATA 0xa4
0000            264   _TMR4RLH        DATA 0xa3
0000            265   _TMR4RLL        DATA 0xa2
0000            266   _TMR5CN0        DATA 0xc0
0000            267   _TMR5CN1        DATA 0xf1
0000            268   _TMR5H          DATA 0xd5
0000            269   _TMR5L          DATA 0xd4
0000            270   _TMR5RLH        DATA 0xd3
0000            271   _TMR5RLL        DATA 0xd2
0000            272   _UART0PCF       DATA 0xd9
0000            273   _UART1FCN0      DATA 0x9d
0000            274   _UART1FCN1      DATA 0xd8
0000            275   _UART1FCT       DATA 0xfa
0000            276   _UART1LIN       DATA 0x9e
0000            277   _UART1PCF       DATA 0xda
0000            278   _VDM0CN         DATA 0xff
0000            279   _WDTCN          DATA 0x97
0000            280   _XBR0           DATA 0xe1
0000            281   _XBR1           DATA 0xe2
0000            282   _XBR2           DATA 0xe3
0000            283   _XOSC0CN        DATA 0x86
0000            284   _DPTR           DATA 0x8382
0000            285   _TMR2RL         DATA 0xcbca
0000            286   _TMR3RL         DATA 0x9392
0000            287   _TMR4RL         DATA 0xa3a2
0000            288   _TMR5RL         DATA 0xd3d2
0000            289   _TMR0           DATA 0x8c8a
0000            290   _TMR1           DATA 0x8d8b
0000            291   _TMR2           DATA 0xcfce
0000            292   _TMR3           DATA 0x9594
0000            293   _TMR4           DATA 0xa5a4
0000            294   _TMR5           DATA 0xd5d4
0000            295   _SBRL1          DATA 0x9695
0000            296   _PCA0           DATA 0xfaf9
0000            297   _PCA0CP0        DATA 0xfcfb
0000            298   _PCA0CP1        DATA 0xeae9
0000            299   _PCA0CP2        DATA 0xeceb
0000            300   _PCA0CP3        DATA 0xf5f4
0000            301   _PCA0CP4        DATA 0x8584
0000            302   _PCA0CP5        DATA 0xdedd
0000            303   _ADC0ASA        DATA 0xb6b5
0000            304   _ADC0GT         DATA 0xc4c3
0000            305   _ADC0           DATA 0xbebd
0000            306   _ADC0LT         DATA 0xc6c5
0000            307   _DAC0           DATA 0x8584
0000            308   _DAC1           DATA 0x8a89
0000            309   _DAC2           DATA 0x8c8b
0000            310   _DAC3           DATA 0x8e8d
0000            311   ;--------------------------------------------------------
0000            312   ; special function bits
0000            313   ;--------------------------------------------------------
0000            314   _ACC_0          BIT 0xe0
0000            315   _ACC_1          BIT 0xe1
0000            316   _ACC_2          BIT 0xe2
0000            317   _ACC_3          BIT 0xe3
0000            318   _ACC_4          BIT 0xe4
0000            319   _ACC_5          BIT 0xe5
0000            320   _ACC_6          BIT 0xe6
0000            321   _ACC_7          BIT 0xe7
0000            322   _TEMPE          BIT 0xe8
0000            323   _ADGN0          BIT 0xe9
0000            324   _ADGN1          BIT 0xea
0000            325   _ADWINT         BIT 0xeb
0000            326   _ADBUSY         BIT 0xec
0000            327   _ADINT          BIT 0xed
0000            328   _IPOEN          BIT 0xee
0000            329   _ADEN           BIT 0xef
0000            330   _B_0            BIT 0xf0
0000            331   _B_1            BIT 0xf1
0000            332   _B_2            BIT 0xf2
0000            333   _B_3            BIT 0xf3
0000            334   _B_4            BIT 0xf4
0000            335   _B_5            BIT 0xf5
0000            336   _B_6            BIT 0xf6
0000            337   _B_7            BIT 0xf7
0000            338   _C0FIF          BIT 0xe8
0000            339   _C0RIF          BIT 0xe9
0000            340   _C1FIF          BIT 0xea
0000            341   _C1RIF          BIT 0xeb
0000            342   _C2FIF          BIT 0xec
0000            343   _C2RIF          BIT 0xed
0000            344   _C3FIF          BIT 0xee
0000            345   _C3RIF          BIT 0xef
0000            346   _D1SRC0         BIT 0x88
0000            347   _D1SRC1         BIT 0x89
0000            348   _D1AMEN         BIT 0x8a
0000            349   _D01REFSL       BIT 0x8b
0000            350   _D3SRC0         BIT 0x8c
0000            351   _D3SRC1         BIT 0x8d
0000            352   _D3AMEN         BIT 0x8e
0000            353   _D23REFSL       BIT 0x8f
0000            354   _D0UDIS         BIT 0x98
0000            355   _D1UDIS         BIT 0x99
0000            356   _D2UDIS         BIT 0x9a
0000            357   _D3UDIS         BIT 0x9b
0000            358   _EX0            BIT 0xa8
0000            359   _ET0            BIT 0xa9
0000            360   _EX1            BIT 0xaa
0000            361   _ET1            BIT 0xab
0000            362   _ES0            BIT 0xac
0000            363   _ET2            BIT 0xad
0000            364   _ESPI0          BIT 0xae
0000            365   _EA             BIT 0xaf
0000            366   _PX0            BIT 0xb8
0000            367   _PT0            BIT 0xb9
0000            368   _PX1            BIT 0xba
0000            369   _PT1            BIT 0xbb
0000            370   _PS0            BIT 0xbc
0000            371   _PT2            BIT 0xbd
0000            372   _PSPI0          BIT 0xbe
0000            373   _P0_0           BIT 0x80
0000            374   _P0_1           BIT 0x81
0000            375   _P0_2           BIT 0x82
0000            376   _P0_3           BIT 0x83
0000            377   _P0_4           BIT 0x84
0000            378   _P0_5           BIT 0x85
0000            379   _P0_6           BIT 0x86
0000            380   _P0_7           BIT 0x87
0000            381   _P1_0           BIT 0x90
0000            382   _P1_1           BIT 0x91
0000            383   _P1_2           BIT 0x92
0000            384   _P1_3           BIT 0x93
0000            385   _P1_4           BIT 0x94
0000            386   _P1_5           BIT 0x95
0000            387   _P1_6           BIT 0x96
0000            388   _P1_7           BIT 0x97
0000            389   _P2_0           BIT 0xa0
0000            390   _P2_1           BIT 0xa1
0000            391   _P2_2           BIT 0xa2
0000            392   _P2_3           BIT 0xa3
0000            393   _P2_4           BIT 0xa4
0000            394   _P2_5           BIT 0xa5
0000            395   _P2_6           BIT 0xa6
0000            396   _P3_0           BIT 0xb0
0000            397   _P3_1           BIT 0xb1
0000            398   _P3_2           BIT 0xb2
0000            399   _P3_3           BIT 0xb3
0000            400   _P3_4           BIT 0xb4
0000            401   _P3_7           BIT 0xb7
0000            402   _CCF0           BIT 0xd8
0000            403   _CCF1           BIT 0xd9
0000            404   _CCF2           BIT 0xda
0000            405   _CCF3           BIT 0xdb
0000            406   _CCF4           BIT 0xdc
0000            407   _CCF5           BIT 0xdd
0000            408   _CR             BIT 0xde
0000            409   _CF             BIT 0xdf
0000            410   _PARITY         BIT 0xd0
0000            411   _F1             BIT 0xd1
0000            412   _OV             BIT 0xd2
0000            413   _RS0            BIT 0xd3
0000            414   _RS1            BIT 0xd4
0000            415   _F0             BIT 0xd5
0000            416   _AC             BIT 0xd6
0000            417   _CY             BIT 0xd7
0000            418   _RI             BIT 0x98
0000            419   _TI             BIT 0x99
0000            420   _RB8            BIT 0x9a
0000            421   _TB8            BIT 0x9b
0000            422   _REN            BIT 0x9c
0000            423   _CE             BIT 0x9d
0000            424   _SMODE          BIT 0x9e
0000            425   _RI1            BIT 0xc8
0000            426   _TI1            BIT 0xc9
0000            427   _RBX1           BIT 0xca
0000            428   _TBX1           BIT 0xcb
0000            429   _REN1           BIT 0xcc
0000            430   _PERR1          BIT 0xcd
0000            431   _OVR1           BIT 0xce
0000            432   _SI             BIT 0xc0
0000            433   _ACK            BIT 0xc1
0000            434   _ARBLOST        BIT 0xc2
0000            435   _ACKRQ          BIT 0xc3
0000            436   _STO            BIT 0xc4
0000            437   _STA            BIT 0xc5
0000            438   _TXMODE         BIT 0xc6
0000            439   _MASTER         BIT 0xc7
0000            440   _SPIEN          BIT 0xf8
0000            441   _TXNF           BIT 0xf9
0000            442   _NSSMD0         BIT 0xfa
0000            443   _NSSMD1         BIT 0xfb
0000            444   _RXOVRN         BIT 0xfc
0000            445   _MODF           BIT 0xfd
0000            446   _WCOL           BIT 0xfe
0000            447   _SPIF           BIT 0xff
0000            448   _IT0            BIT 0x88
0000            449   _IE0            BIT 0x89
0000            450   _IT1            BIT 0x8a
0000            451   _IE1            BIT 0x8b
0000            452   _TR0            BIT 0x8c
0000            453   _TF0            BIT 0x8d
0000            454   _TR1            BIT 0x8e
0000            455   _TF1            BIT 0x8f
0000            456   _T2XCLK0        BIT 0xc8
0000            457   _T2XCLK1        BIT 0xc9
0000            458   _TR2            BIT 0xca
0000            459   _T2SPLIT        BIT 0xcb
0000            460   _TF2CEN         BIT 0xcc
0000            461   _TF2LEN         BIT 0xcd
0000            462   _TF2L           BIT 0xce
0000            463   _TF2H           BIT 0xcf
0000            464   _T4XCLK0        BIT 0x98
0000            465   _T4XCLK1        BIT 0x99
0000            466   _TR4            BIT 0x9a
0000            467   _T4SPLIT        BIT 0x9b
0000            468   _TF4CEN         BIT 0x9c
0000            469   _TF4LEN         BIT 0x9d
0000            470   _TF4L           BIT 0x9e
0000            471   _TF4H           BIT 0x9f
0000            472   _T5XCLK0        BIT 0xc0
0000            473   _T5XCLK1        BIT 0xc1
0000            474   _TR5            BIT 0xc2
0000            475   _T5SPLIT        BIT 0xc3
0000            476   _TF5CEN         BIT 0xc4
0000            477   _TF5LEN         BIT 0xc5
0000            478   _TF5L           BIT 0xc6
0000            479   _TF5H           BIT 0xc7
0000            480   _RIE            BIT 0xd8
0000            481   _RXTO0          BIT 0xd9
0000            482   _RXTO1          BIT 0xda
0000            483   _RFRQ           BIT 0xdb
0000            484   _TIE            BIT 0xdc
0000            485   _TXHOLD         BIT 0xdd
0000            486   _TXNF1          BIT 0xde
0000            487   _TFRQ           BIT 0xdf
0000            488   ;--------------------------------------------------------
0000            489   ; overlayable register banks
0000            490   ;--------------------------------------------------------
0000            491            rbank0 segment data overlay
0000            492   ;--------------------------------------------------------
0000            493   ; internal ram data
0000            494   ;--------------------------------------------------------
0000            495            rseg R_DSEG
0000            496   _getstr1_PARM_2:
0000            497            ds 1
0001            498   _main_v_1_109:
0001            499            ds 16
0011            500   _main_norm_x_1_109:
0011            501            ds 4
0015            502   _main_norm_y_1_109:
0015            503            ds 4
0019            504   ;--------------------------------------------------------
0019            505   ; overlayable items in internal ram 
0019            506   ;--------------------------------------------------------
0000            507            rseg    R_OSEG
0000            508            rseg    R_OSEG
0000            509            rseg    R_OSEG
0000            510            rseg    R_OSEG
0000            511   _InitPinADC_PARM_2:
0000            512            ds 1
0001            513            rseg    R_OSEG
0001            514   ;--------------------------------------------------------
0001            515   ; indirectly addressable internal ram data
0001            516   ;--------------------------------------------------------
0000            517            rseg R_ISEG
0000            518   _buff:
0000            519            ds 20
0014            520   ;--------------------------------------------------------
0014            521   ; absolute internal ram data
0014            522   ;--------------------------------------------------------
0000            523            DSEG
0000            524   ;--------------------------------------------------------
0000            525   ; bit data
0000            526   ;--------------------------------------------------------
0000            527            rseg R_BSEG
0000            528   _main_button_state_1_109:
0000            529            DBIT    1
0001            530   ;--------------------------------------------------------
0001            531   ; paged external ram data
0001            532   ;--------------------------------------------------------
0000            533            rseg R_PSEG
0000            534   ;--------------------------------------------------------
0000            535   ; external ram data
0000            536   ;--------------------------------------------------------
0000            537            rseg R_XSEG
0000            538   ;--------------------------------------------------------
0000            539   ; absolute external ram data
0000            540   ;--------------------------------------------------------
0000            541            XSEG
0000            542   ;--------------------------------------------------------
0000            543   ; external initialized ram data
0000            544   ;--------------------------------------------------------
0000            545            rseg R_IXSEG
0000            546            rseg R_HOME
0000            547            rseg R_GSINIT
0000            548            rseg R_CSEG
0000            549   ;--------------------------------------------------------
0000            550   ; Reset entry point and interrupt vectors
0000            551   ;--------------------------------------------------------
0000            552            CSEG at 0x0000
0000 020000     553            ljmp    _crt0
0003            554   ;--------------------------------------------------------
0003            555   ; global & static initialisations
0003            556   ;--------------------------------------------------------
0000            557            rseg R_HOME
0000            558            rseg R_GSINIT
0000            559            rseg R_GSINIT
0000            560   ;--------------------------------------------------------
0000            561   ; data variables initialization
0000            562   ;--------------------------------------------------------
0000            563            rseg R_DINIT
0000            564            ; The linker places a 'ret' at the end of segment R_DINIT.
0000            565   ;--------------------------------------------------------
0000            566   ; code
0000            567   ;--------------------------------------------------------
0000            568            rseg R_CSEG
0000            569   ;------------------------------------------------------------
0000            570   ;Allocation info for local variables in function '_c51_external_startup'
0000            571   ;------------------------------------------------------------
0000            572   ;------------------------------------------------------------
0000            573   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:14: char _c51_external_startup (void)
0000            574   ;        -----------------------------------------
0000            575   ;         function _c51_external_startup
0000            576   ;        -----------------------------------------
0000            577   __c51_external_startup:
0000            578            using   0
0000            579   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:17: SFRPAGE = 0x00;
0000 75A700     580            mov     _SFRPAGE,#0x00
0003            581   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:18: WDTCN = 0xDE; //First key
0003 7597DE     582            mov     _WDTCN,#0xDE
0006            583   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:19: WDTCN = 0xAD; //Second key
0006 7597AD     584            mov     _WDTCN,#0xAD
0009            585   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:21: VDM0CN=0x80;       // enable VDD monitor
0009 75FF80     586            mov     _VDM0CN,#0x80
000C            587   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:22: RSTSRC=0x02|0x04;  // Enable reset on missing clock detector and VDD
000C 75EF06     588            mov     _RSTSRC,#0x06
000F            589   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:29: SFRPAGE = 0x10;
000F 75A710     590            mov     _SFRPAGE,#0x10
0012            591   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:30: PFE0CN  = 0x20; // SYSCLK < 75 MHz.
0012 75C120     592            mov     _PFE0CN,#0x20
0015            593   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:31: SFRPAGE = 0x00;
0015 75A700     594            mov     _SFRPAGE,#0x00
0018            595   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:52: CLKSEL = 0x00;
0018 75A900     596            mov     _CLKSEL,#0x00
001B            597   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:53: CLKSEL = 0x00;
001B 75A900     598            mov     _CLKSEL,#0x00
001E            599   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:54: while ((CLKSEL & 0x80) == 0);
001E            600   L002001?:
001E E5A9       601            mov     a,_CLKSEL
0020 30E7C0     602            jnb     acc.7,L002001?
0023            603   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:55: CLKSEL = 0x03;
0023 75A903     604            mov     _CLKSEL,#0x03
0026            605   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:56: CLKSEL = 0x03;
0026 75A903     606            mov     _CLKSEL,#0x03
0029            607   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:57: while ((CLKSEL & 0x80) == 0);
0029            608   L002004?:
0029 E5A9       609            mov     a,_CLKSEL
002B 30E740     610            jnb     acc.7,L002004?
002E            611   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:62: P0MDOUT |= 0x11; // Enable UART0 TX (P0.4) and UART1 TX (P0.0) as push-pull outputs
002E 43A411     612            orl     _P0MDOUT,#0x11
0031            613   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:63: P2MDOUT |= 0x01; // P2.0 in push-pull mode
0031 43A601     614            orl     _P2MDOUT,#0x01
0034            615   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:64: XBR0     = 0x01; // Enable UART0 on P0.4(TX) and P0.5(RX)                     
0034 75E101     616            mov     _XBR0,#0x01
0037            617   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:65: XBR1     = 0X00;
0037 75E200     618            mov     _XBR1,#0x00
003A            619   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:66: XBR2     = 0x41; // Enable crossbar and uart 1
003A 75E341     620            mov     _XBR2,#0x41
003D            621   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:72: SCON0 = 0x10;
003D 759810     622            mov     _SCON0,#0x10
0040            623   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:73: TH1 = 0x100-((SYSCLK/BAUDRATE)/(2L*12L));
0040 758DE6     624            mov     _TH1,#0xE6
0043            625   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:74: TL1 = TH1;      // Init Timer1
0043 858D8B     626            mov     _TL1,_TH1
0046            627   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:75: TMOD &= ~0xf0;  // TMOD: timer 1 in 8-bit auto-reload
0046 53890F     628            anl     _TMOD,#0x0F
0049            629   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:76: TMOD |=  0x20;                       
0049 438920     630            orl     _TMOD,#0x20
004C            631   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:77: TR1 = 1; // START Timer1
004C D28E       632            setb    _TR1
004E            633   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:78: TI = 1;  // Indicate TX0 ready
004E D299       634            setb    _TI
0050            635   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:80: return 0;
0050 758200     636            mov     dpl,#0x00
0053 22         637            ret
0054            638   ;------------------------------------------------------------
0054            639   ;Allocation info for local variables in function 'InitADC'
0054            640   ;------------------------------------------------------------
0054            641   ;------------------------------------------------------------
0054            642   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:83: void InitADC (void)
0054            643   ;        -----------------------------------------
0054            644   ;         function InitADC
0054            645   ;        -----------------------------------------
0054            646   _InitADC:
0054            647   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:85: SFRPAGE = 0x00;
0054 75A700     648            mov     _SFRPAGE,#0x00
0057            649   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:86: ADEN=0; // Disable ADC
0057 C2EF       650            clr     _ADEN
0059            651   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:91: (0x0 << 0) ; // Accumulate n conversions: 0x0: 1, 0x1:4, 0x2:8, 0x3:16, 0x4:32
0059 75B280     652            mov     _ADC0CN1,#0x80
005C            653   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:95: (0x0 << 2); // 0:SYSCLK ADCCLK = SYSCLK. 1:HFOSC0 ADCCLK = HFOSC0.
005C 75BC20     654            mov     _ADC0CF0,#0x20
005F            655   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:99: (0x1E << 0); // Conversion Tracking Time. Tadtk = ADTK / (Fsarclk)
005F 75B91E     656            mov     _ADC0CF1,#0x1E
0062            657   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:108: (0x0 << 0) ; // TEMPE. 0: Disable the Temperature Sensor. 1: Enable the Temperature Sensor.
0062 75E800     658            mov     _ADC0CN0,#0x00
0065            659   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:113: (0x1F << 0); // ADPWR. Power Up Delay Time. Tpwrtime = ((4 * (ADPWR + 1)) + 2) / (Fadcclk)
0065 75DF3F     660            mov     _ADC0CF2,#0x3F
0068            661   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:117: (0x0 << 0) ; // ADCM. 0x0: ADBUSY, 0x1: TIMER0, 0x2: TIMER2, 0x3: TIMER3, 0x4: CNVSTR, 0x5: CEX5, 0x6: TIMER4, 0x7: TIMER5, 0x8: CLU0, 0x9: CLU1, 0xA: CLU2, 0xB: CLU3
0068 75B300     662            mov     _ADC0CN2,#0x00
006B            663   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:119: ADEN=1; // Enable ADC
006B D2EF       664            setb    _ADEN
006D 22         665            ret
006E            666   ;------------------------------------------------------------
006E            667   ;Allocation info for local variables in function 'Timer3us'
006E            668   ;------------------------------------------------------------
006E            669   ;us                        Allocated to registers r2 
006E            670   ;i                         Allocated to registers r3 
006E            671   ;------------------------------------------------------------
006E            672   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:123: void Timer3us(unsigned char us)
006E            673   ;        -----------------------------------------
006E            674   ;         function Timer3us
006E            675   ;        -----------------------------------------
006E            676   _Timer3us:
006E AA82       677            mov     r2,dpl
0070            678   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:128: CKCON0|=0b_0100_0000;
0070 438E40     679            orl     _CKCON0,#0x40
0073            680   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:130: TMR3RL = (-(SYSCLK)/1000000L); // Set Timer3 to overflow in 1us.
0073 7592B8     681            mov     _TMR3RL,#0xB8
0076 7593FF     682            mov     (_TMR3RL >> 8),#0xFF
0079            683   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:131: TMR3 = TMR3RL;                 // Initialize Timer3 for first overflow
0079 859294     684            mov     _TMR3,_TMR3RL
007C 859395     685            mov     (_TMR3 >> 8),(_TMR3RL >> 8)
007F            686   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:133: TMR3CN0 = 0x04;                 // Sart Timer3 and clear overflow flag
007F 759104     687            mov     _TMR3CN0,#0x04
0082            688   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:134: for (i = 0; i < us; i++)       // Count <us> overflows
0082 7B00       689            mov     r3,#0x00
0084            690   L004004?:
0084 C3         691            clr     c
0085 EB         692            mov     a,r3
0086 9A         693            subb    a,r2
0087 5000       694            jnc     L004007?
0089            695   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:136: while (!(TMR3CN0 & 0x80));  // Wait for overflow
0089            696   L004001?:
0089 E591       697            mov     a,_TMR3CN0
008B 30E740     698            jnb     acc.7,L004001?
008E            699   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:137: TMR3CN0 &= ~(0x80);         // Clear overflow indicator
008E 53917F     700            anl     _TMR3CN0,#0x7F
0091            701   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:134: for (i = 0; i < us; i++)       // Count <us> overflows
0091 0B         702            inc     r3
0092 8000       703            sjmp    L004004?
0094            704   L004007?:
0094            705   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:139: TMR3CN0 = 0 ;                   // Stop Timer3 and clear overflow flag
0094 759100     706            mov     _TMR3CN0,#0x00
0097 22         707            ret
0098            708   ;------------------------------------------------------------
0098            709   ;Allocation info for local variables in function 'waitms'
0098            710   ;------------------------------------------------------------
0098            711   ;ms                        Allocated to registers r2 r3 
0098            712   ;j                         Allocated to registers r4 r5 
0098            713   ;k                         Allocated to registers r6 
0098            714   ;------------------------------------------------------------
0098            715   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:142: void waitms (unsigned int ms)
0098            716   ;        -----------------------------------------
0098            717   ;         function waitms
0098            718   ;        -----------------------------------------
0098            719   _waitms:
0098 AA82       720            mov     r2,dpl
009A AB83       721            mov     r3,dph
009C            722   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:146: for(j=0; j<ms; j++)
009C 7C00       723            mov     r4,#0x00
009E 7D00       724            mov     r5,#0x00
00A0            725   L005005?:
00A0 C3         726            clr     c
00A1 EC         727            mov     a,r4
00A2 9A         728            subb    a,r2
00A3 ED         729            mov     a,r5
00A4 9B         730            subb    a,r3
00A5 5000       731            jnc     L005009?
00A7            732   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:147: for (k=0; k<4; k++) Timer3us(250);
00A7 7E00       733            mov     r6,#0x00
00A9            734   L005001?:
00A9 BE0480     735            cjne    r6,#0x04,L005018?
00AC            736   L005018?:
00AC 5000       737            jnc     L005007?
00AE 7582FA     738            mov     dpl,#0xFA
00B1 C002       739            push    ar2
00B3 C003       740            push    ar3
00B5 C004       741            push    ar4
00B7 C005       742            push    ar5
00B9 C006       743            push    ar6
00BB 120000     744            lcall   _Timer3us
00BE D006       745            pop     ar6
00C0 D005       746            pop     ar5
00C2 D004       747            pop     ar4
00C4 D003       748            pop     ar3
00C6 D002       749            pop     ar2
00C8 0E         750            inc     r6
00C9 8000       751            sjmp    L005001?
00CB            752   L005007?:
00CB            753   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:146: for(j=0; j<ms; j++)
00CB 0C         754            inc     r4
00CC BC00C0     755            cjne    r4,#0x00,L005005?
00CF 0D         756            inc     r5
00D0 8000       757            sjmp    L005005?
00D2            758   L005009?:
00D2 22         759            ret
00D3            760   ;------------------------------------------------------------
00D3            761   ;Allocation info for local variables in function 'UART1_Init'
00D3            762   ;------------------------------------------------------------
00D3            763   ;baudrate                  Allocated to registers r2 r3 r4 r5 
00D3            764   ;------------------------------------------------------------
00D3            765   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:151: void UART1_Init (unsigned long baudrate)
00D3            766   ;        -----------------------------------------
00D3            767   ;         function UART1_Init
00D3            768   ;        -----------------------------------------
00D3            769   _UART1_Init:
00D3 AA82       770            mov     r2,dpl
00D5 AB83       771            mov     r3,dph
00D7 ACF0       772            mov     r4,b
00D9 FD         773            mov     r5,a
00DA            774   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:153: SFRPAGE = 0x20;
00DA 75A720     775            mov     _SFRPAGE,#0x20
00DD            776   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:154: SMOD1 = 0x0C; // no parity, 8 data bits, 1 stop bit
00DD 75930C     777            mov     _SMOD1,#0x0C
00E0            778   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:155: SCON1 = 0x10;
00E0 75C810     779            mov     _SCON1,#0x10
00E3            780   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:156: SBCON1 =0x00;   // disable baud rate generator
00E3 759400     781            mov     _SBCON1,#0x00
00E6            782   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:157: SBRL1 = 0x10000L-((SYSCLK/baudrate)/(12L*2L));
00E6 8A00       783            mov     __divulong_PARM_2,r2
00E8 8B01       784            mov     (__divulong_PARM_2 + 1),r3
00EA 8C02       785            mov     (__divulong_PARM_2 + 2),r4
00EC 8D03       786            mov     (__divulong_PARM_2 + 3),r5
00EE 90A200     787            mov     dptr,#0xA200
00F1 75F04A     788            mov     b,#0x4A
00F4 7404       789            mov     a,#0x04
00F6 120000     790            lcall   __divulong
00F9 AA82       791            mov     r2,dpl
00FB AB83       792            mov     r3,dph
00FD ACF0       793            mov     r4,b
00FF FD         794            mov     r5,a
0100 750018     795            mov     __divulong_PARM_2,#0x18
0103 E4         796            clr     a
0104 F501       797            mov     (__divulong_PARM_2 + 1),a
0106 F502       798            mov     (__divulong_PARM_2 + 2),a
0108 F503       799            mov     (__divulong_PARM_2 + 3),a
010A 8A82       800            mov     dpl,r2
010C 8B83       801            mov     dph,r3
010E 8CF0       802            mov     b,r4
0110 ED         803            mov     a,r5
0111 120000     804            lcall   __divulong
0114 AA82       805            mov     r2,dpl
0116 AB83       806            mov     r3,dph
0118 ACF0       807            mov     r4,b
011A FD         808            mov     r5,a
011B E4         809            clr     a
011C C3         810            clr     c
011D 9A         811            subb    a,r2
011E FA         812            mov     r2,a
011F E4         813            clr     a
0120 9B         814            subb    a,r3
0121 FB         815            mov     r3,a
0122 7401       816            mov     a,#0x01
0124 9C         817            subb    a,r4
0125 E4         818            clr     a
0126 9D         819            subb    a,r5
0127 8A95       820            mov     _SBRL1,r2
0129 8B96       821            mov     (_SBRL1 >> 8),r3
012B            822   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:158: TI1 = 1; // indicate ready for TX
012B D2C9       823            setb    _TI1
012D            824   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:159: SBCON1 |= 0x40;   // enable baud rate generator
012D 439440     825            orl     _SBCON1,#0x40
0130            826   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:160: SFRPAGE = 0x00;
0130 75A700     827            mov     _SFRPAGE,#0x00
0133 22         828            ret
0134            829   ;------------------------------------------------------------
0134            830   ;Allocation info for local variables in function 'putchar1'
0134            831   ;------------------------------------------------------------
0134            832   ;c                         Allocated to registers r2 
0134            833   ;------------------------------------------------------------
0134            834   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:163: void putchar1 (char c) 
0134            835   ;        -----------------------------------------
0134            836   ;         function putchar1
0134            837   ;        -----------------------------------------
0134            838   _putchar1:
0134 AA82       839            mov     r2,dpl
0136            840   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:165: SFRPAGE = 0x20;
0136 75A720     841            mov     _SFRPAGE,#0x20
0139            842   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:166: while (!TI1);
0139            843   L007001?:
0139            844   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:167: TI1=0;
0139 10C910     845            jbc     _TI1,L007008?
013C 8000       846            sjmp    L007001?
013E            847   L007008?:
013E            848   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:168: SBUF1 = c;
013E 8A92       849            mov     _SBUF1,r2
0140            850   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:169: SFRPAGE = 0x00;
0140 75A700     851            mov     _SFRPAGE,#0x00
0143 22         852            ret
0144            853   ;------------------------------------------------------------
0144            854   ;Allocation info for local variables in function 'sendstr1'
0144            855   ;------------------------------------------------------------
0144            856   ;s                         Allocated to registers r2 r3 r4 
0144            857   ;------------------------------------------------------------
0144            858   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:172: void sendstr1 (char * s)
0144            859   ;        -----------------------------------------
0144            860   ;         function sendstr1
0144            861   ;        -----------------------------------------
0144            862   _sendstr1:
0144 AA82       863            mov     r2,dpl
0146 AB83       864            mov     r3,dph
0148 ACF0       865            mov     r4,b
014A            866   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:174: while(*s)
014A            867   L008001?:
014A 8A82       868            mov     dpl,r2
014C 8B83       869            mov     dph,r3
014E 8CF0       870            mov     b,r4
0150 120000     871            lcall   __gptrget
0153 FD         872            mov     r5,a
0154 6000       873            jz      L008004?
0156            874   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:176: putchar1(*s);
0156 8D82       875            mov     dpl,r5
0158 C002       876            push    ar2
015A C003       877            push    ar3
015C C004       878            push    ar4
015E 120000     879            lcall   _putchar1
0161 D004       880            pop     ar4
0163 D003       881            pop     ar3
0165 D002       882            pop     ar2
0167            883   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:177: s++;       
0167 0A         884            inc     r2
0168 BA0050     885            cjne    r2,#0x00,L008001?
016B 0B         886            inc     r3
016C 8000       887            sjmp    L008001?
016E            888   L008004?:
016E 22         889            ret
016F            890   ;------------------------------------------------------------
016F            891   ;Allocation info for local variables in function 'getchar1'
016F            892   ;------------------------------------------------------------
016F            893   ;c                         Allocated to registers 
016F            894   ;------------------------------------------------------------
016F            895   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:181: char getchar1 (void)
016F            896   ;        -----------------------------------------
016F            897   ;         function getchar1
016F            898   ;        -----------------------------------------
016F            899   _getchar1:
016F            900   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:184: SFRPAGE = 0x20;
016F 75A720     901            mov     _SFRPAGE,#0x20
0172            902   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:185: while (!RI1);
0172            903   L009001?:
0172            904   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:186: RI1=0;
0172 10C850     905            jbc     _RI1,L009008?
0175 8000       906            sjmp    L009001?
0177            907   L009008?:
0177            908   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:188: SCON1&=0b_0011_1111;
0177 53C83F     909            anl     _SCON1,#0x3F
017A            910   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:189: c = SBUF1;
017A 859282     911            mov     dpl,_SBUF1
017D            912   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:190: SFRPAGE = 0x00;
017D 75A700     913            mov     _SFRPAGE,#0x00
0180            914   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:191: return (c);
0180 22         915            ret
0181            916   ;------------------------------------------------------------
0181            917   ;Allocation info for local variables in function 'getchar1_with_timeout'
0181            918   ;------------------------------------------------------------
0181            919   ;c                         Allocated to registers 
0181            920   ;timeout                   Allocated to registers r2 r3 
0181            921   ;------------------------------------------------------------
0181            922   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:194: char getchar1_with_timeout (void)
0181            923   ;        -----------------------------------------
0181            924   ;         function getchar1_with_timeout
0181            925   ;        -----------------------------------------
0181            926   _getchar1_with_timeout:
0181            927   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:198: SFRPAGE = 0x20;
0181 75A720     928            mov     _SFRPAGE,#0x20
0184            929   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:200: while (!RI1)
0184 7A00       930            mov     r2,#0x00
0186 7B00       931            mov     r3,#0x00
0188            932   L010003?:
0188 20C8D0     933            jb      _RI1,L010005?
018B            934   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:202: SFRPAGE = 0x00;
018B 75A700     935            mov     _SFRPAGE,#0x00
018E            936   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:203: Timer3us(20);
018E 758214     937            mov     dpl,#0x14
0191 C002       938            push    ar2
0193 C003       939            push    ar3
0195 120000     940            lcall   _Timer3us
0198 D003       941            pop     ar3
019A D002       942            pop     ar2
019C            943   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:204: SFRPAGE = 0x20;
019C 75A720     944            mov     _SFRPAGE,#0x20
019F            945   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:205: timeout++;
019F 0A         946            inc     r2
01A0 BA0010     947            cjne    r2,#0x00,L010012?
01A3 0B         948            inc     r3
01A4            949   L010012?:
01A4            950   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:206: if(timeout==25000)
01A4 BAA890     951            cjne    r2,#0xA8,L010003?
01A7 BB6190     952            cjne    r3,#0x61,L010003?
01AA            953   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:208: SFRPAGE = 0x00;
01AA 75A700     954            mov     _SFRPAGE,#0x00
01AD            955   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:209: return ('\n'); // Timeout after half second
01AD 75820A     956            mov     dpl,#0x0A
01B0 22         957            ret
01B1            958   L010005?:
01B1            959   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:212: RI1=0;
01B1 C2C8       960            clr     _RI1
01B3            961   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:214: SCON1&=0b_0011_1111;
01B3 53C83F     962            anl     _SCON1,#0x3F
01B6            963   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:215: c = SBUF1;
01B6 859282     964            mov     dpl,_SBUF1
01B9            965   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:216: SFRPAGE = 0x00;
01B9 75A700     966            mov     _SFRPAGE,#0x00
01BC            967   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:217: return (c);
01BC 22         968            ret
01BD            969   ;------------------------------------------------------------
01BD            970   ;Allocation info for local variables in function 'getstr1'
01BD            971   ;------------------------------------------------------------
01BD            972   ;n                         Allocated with name '_getstr1_PARM_2'
01BD            973   ;s                         Allocated to registers r2 r3 r4 
01BD            974   ;c                         Allocated to registers r1 
01BD            975   ;cnt                       Allocated to registers r5 
01BD            976   ;------------------------------------------------------------
01BD            977   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:220: void getstr1 (char * s, unsigned char n)
01BD            978   ;        -----------------------------------------
01BD            979   ;         function getstr1
01BD            980   ;        -----------------------------------------
01BD            981   _getstr1:
01BD AA82       982            mov     r2,dpl
01BF AB83       983            mov     r3,dph
01C1 ACF0       984            mov     r4,b
01C3            985   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:226: while(1)
01C3 7D00       986            mov     r5,#0x00
01C5 8A06       987            mov     ar6,r2
01C7 8B07       988            mov     ar7,r3
01C9 8C00       989            mov     ar0,r4
01CB            990   L011007?:
01CB            991   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:228: c=getchar1_with_timeout();
01CB C002       992            push    ar2
01CD C003       993            push    ar3
01CF C004       994            push    ar4
01D1 C005       995            push    ar5
01D3 C006       996            push    ar6
01D5 C007       997            push    ar7
01D7 C000       998            push    ar0
01D9 120000     999            lcall   _getchar1_with_timeout
01DC A982      1000            mov     r1,dpl
01DE D000      1001            pop     ar0
01E0 D007      1002            pop     ar7
01E2 D006      1003            pop     ar6
01E4 D005      1004            pop     ar5
01E6 D004      1005            pop     ar4
01E8 D003      1006            pop     ar3
01EA D002      1007            pop     ar2
01EC           1008   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:229: if(c=='\n')
01EC B90A90    1009            cjne    r1,#0x0A,L011002?
01EF           1010   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:231: *s=0;
01EF 8A82      1011            mov     dpl,r2
01F1 8B83      1012            mov     dph,r3
01F3 8CF0      1013            mov     b,r4
01F5 E4        1014            clr     a
01F6           1015   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:232: return;
01F6 020000    1016            ljmp    __gptrput
01F9           1017   L011002?:
01F9           1018   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:235: if (cnt<n)
01F9 C3        1019            clr     c
01FA ED        1020            mov     a,r5
01FB 9550      1021            subb    a,_getstr1_PARM_2
01FD 5000      1022            jnc     L011004?
01FF           1023   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:237: cnt++;
01FF 0D        1024            inc     r5
0200           1025   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:238: *s=c;
0200 8E82      1026            mov     dpl,r6
0202 8F83      1027            mov     dph,r7
0204 88F0      1028            mov     b,r0
0206 E9        1029            mov     a,r1
0207 120000    1030            lcall   __gptrput
020A A3        1031            inc     dptr
020B AE82      1032            mov     r6,dpl
020D AF83      1033            mov     r7,dph
020F           1034   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:239: s++;
020F 8E02      1035            mov     ar2,r6
0211 8F03      1036            mov     ar3,r7
0213 8804      1037            mov     ar4,r0
0215 8000      1038            sjmp    L011007?
0217           1039   L011004?:
0217           1040   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:243: *s=0;
0217 8A82      1041            mov     dpl,r2
0219 8B83      1042            mov     dph,r3
021B 8CF0      1043            mov     b,r4
021D E4        1044            clr     a
021E           1045   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:244: return;
021E 020000    1046            ljmp    __gptrput
0221           1047   ;------------------------------------------------------------
0221           1048   ;Allocation info for local variables in function 'RXU1'
0221           1049   ;------------------------------------------------------------
0221           1050   ;------------------------------------------------------------
0221           1051   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:250: bit RXU1 (void)
0221           1052   ;        -----------------------------------------
0221           1053   ;         function RXU1
0221           1054   ;        -----------------------------------------
0221           1055   _RXU1:
0221           1056   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:253: SFRPAGE = 0x20;
0221 75A720    1057            mov     _SFRPAGE,#0x20
0224           1058   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:254: mybit=RI1;
0224 A2C8      1059            mov     c,_RI1
0226           1060   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:255: SFRPAGE = 0x00;
0226 75A700    1061            mov     _SFRPAGE,#0x00
0229           1062   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:256: return mybit;
0229 22        1063            ret
022A           1064   ;------------------------------------------------------------
022A           1065   ;Allocation info for local variables in function 'waitms_or_RI1'
022A           1066   ;------------------------------------------------------------
022A           1067   ;ms                        Allocated to registers r2 r3 
022A           1068   ;j                         Allocated to registers r4 r5 
022A           1069   ;k                         Allocated to registers r6 
022A           1070   ;------------------------------------------------------------
022A           1071   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:259: void waitms_or_RI1 (unsigned int ms)
022A           1072   ;        -----------------------------------------
022A           1073   ;         function waitms_or_RI1
022A           1074   ;        -----------------------------------------
022A           1075   _waitms_or_RI1:
022A AA82      1076            mov     r2,dpl
022C AB83      1077            mov     r3,dph
022E           1078   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:263: for(j=0; j<ms; j++)
022E 7C00      1079            mov     r4,#0x00
0230 7D00      1080            mov     r5,#0x00
0232           1081   L013007?:
0232 C3        1082            clr     c
0233 EC        1083            mov     a,r4
0234 9A        1084            subb    a,r2
0235 ED        1085            mov     a,r5
0236 9B        1086            subb    a,r3
0237 5000      1087            jnc     L013011?
0239           1088   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:265: for (k=0; k<4; k++)
0239 7E00      1089            mov     r6,#0x00
023B           1090   L013003?:
023B BE0410    1091            cjne    r6,#0x04,L013019?
023E           1092   L013019?:
023E 5000      1093            jnc     L013009?
0240           1094   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:267: if(RXU1()) return;
0240 C002      1095            push    ar2
0242 C003      1096            push    ar3
0244 C004      1097            push    ar4
0246 C005      1098            push    ar5
0248 C006      1099            push    ar6
024A 120000    1100            lcall   _RXU1
024D E4        1101            clr     a
024E 33        1102            rlc     a
024F D006      1103            pop     ar6
0251 D005      1104            pop     ar5
0253 D004      1105            pop     ar4
0255 D003      1106            pop     ar3
0257 D002      1107            pop     ar2
0259 6000      1108            jz      L013002?
025B 22        1109            ret
025C           1110   L013002?:
025C           1111   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:268: Timer3us(250);
025C 7582FA    1112            mov     dpl,#0xFA
025F C002      1113            push    ar2
0261 C003      1114            push    ar3
0263 C004      1115            push    ar4
0265 C005      1116            push    ar5
0267 C006      1117            push    ar6
0269 120000    1118            lcall   _Timer3us
026C D006      1119            pop     ar6
026E D005      1120            pop     ar5
0270 D004      1121            pop     ar4
0272 D003      1122            pop     ar3
0274 D002      1123            pop     ar2
0276           1124   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:265: for (k=0; k<4; k++)
0276 0E        1125            inc     r6
0277 8000      1126            sjmp    L013003?
0279           1127   L013009?:
0279           1128   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:263: for(j=0; j<ms; j++)
0279 0C        1129            inc     r4
027A BC0050    1130            cjne    r4,#0x00,L013007?
027D 0D        1131            inc     r5
027E 8000      1132            sjmp    L013007?
0280           1133   L013011?:
0280 22        1134            ret
0281           1135   ;------------------------------------------------------------
0281           1136   ;Allocation info for local variables in function 'SendATCommand'
0281           1137   ;------------------------------------------------------------
0281           1138   ;s                         Allocated to registers r2 r3 r4 
0281           1139   ;------------------------------------------------------------
0281           1140   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:273: void SendATCommand (char * s)
0281           1141   ;        -----------------------------------------
0281           1142   ;         function SendATCommand
0281           1143   ;        -----------------------------------------
0281           1144   _SendATCommand:
0281 AA82      1145            mov     r2,dpl
0283 AB83      1146            mov     r3,dph
0285 ACF0      1147            mov     r4,b
0287           1148   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:275: printf("Command: %s", s);
0287 C002      1149            push    ar2
0289 C003      1150            push    ar3
028B C004      1151            push    ar4
028D C002      1152            push    ar2
028F C003      1153            push    ar3
0291 C004      1154            push    ar4
0293 74D0      1155            mov     a,#__str_0
0295 C0E0      1156            push    acc
0297 74BD      1157            mov     a,#(__str_0 >> 8)
0299 C0E0      1158            push    acc
029B 7480      1159            mov     a,#0x80
029D C0E0      1160            push    acc
029F 120000    1161            lcall   _printf
02A2 E581      1162            mov     a,sp
02A4 24FA      1163            add     a,#0xfa
02A6 F581      1164            mov     sp,a
02A8           1165   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:276: P2_0=0; // 'set' pin to 0 is 'AT' mode.
02A8 C2A0      1166            clr     _P2_0
02AA           1167   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:277: waitms(5);
02AA 900005    1168            mov     dptr,#0x0005
02AD 120000    1169            lcall   _waitms
02B0 D004      1170            pop     ar4
02B2 D003      1171            pop     ar3
02B4 D002      1172            pop     ar2
02B6           1173   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:278: sendstr1(s);
02B6 8A82      1174            mov     dpl,r2
02B8 8B83      1175            mov     dph,r3
02BA 8CF0      1176            mov     b,r4
02BC 120000    1177            lcall   _sendstr1
02BF           1178   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:279: getstr1(buff, sizeof(buff)-1);
02BF 755013    1179            mov     _getstr1_PARM_2,#0x13
02C2 904610    1180            mov     dptr,#_buff
02C5 75F040    1181            mov     b,#0x40
02C8 120000    1182            lcall   _getstr1
02CB           1183   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:280: waitms(10);
02CB 90000A    1184            mov     dptr,#0x000A
02CE 120000    1185            lcall   _waitms
02D1           1186   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:281: P2_0=1; // 'set' pin to 1 is normal operation mode.
02D1 D2A0      1187            setb    _P2_0
02D3           1188   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:282: printf("Response: %s\r\n", buff);
02D3 7410      1189            mov     a,#_buff
02D5 C0E0      1190            push    acc
02D7 7446      1191            mov     a,#(_buff >> 8)
02D9 C0E0      1192            push    acc
02DB 7440      1193            mov     a,#0x40
02DD C0E0      1194            push    acc
02DF 7490      1195            mov     a,#__str_1
02E1 C0E0      1196            push    acc
02E3 74BE      1197            mov     a,#(__str_1 >> 8)
02E5 C0E0      1198            push    acc
02E7 7480      1199            mov     a,#0x80
02E9 C0E0      1200            push    acc
02EB 120000    1201            lcall   _printf
02EE E581      1202            mov     a,sp
02F0 24FA      1203            add     a,#0xfa
02F2 F581      1204            mov     sp,a
02F4 22        1205            ret
02F5           1206   ;------------------------------------------------------------
02F5           1207   ;Allocation info for local variables in function 'ReceptionOff'
02F5           1208   ;------------------------------------------------------------
02F5           1209   ;------------------------------------------------------------
02F5           1210   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:285: void ReceptionOff (void)
02F5           1211   ;        -----------------------------------------
02F5           1212   ;         function ReceptionOff
02F5           1213   ;        -----------------------------------------
02F5           1214   _ReceptionOff:
02F5           1215   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:287: P2_0=0; // 'set' pin to 0 is 'AT' mode.
02F5 C2A0      1216            clr     _P2_0
02F7           1217   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:288: waitms(10);
02F7 90000A    1218            mov     dptr,#0x000A
02FA 120000    1219            lcall   _waitms
02FD           1220   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:289: sendstr1("AT+DVID0000\r\n"); // Some unused id, so that we get nothing in RXD1.
02FD 90BED0    1221            mov     dptr,#__str_2
0300 75F080    1222            mov     b,#0x80
0303 120000    1223            lcall   _sendstr1
0306           1224   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:290: waitms(10);
0306 90000A    1225            mov     dptr,#0x000A
0309 120000    1226            lcall   _waitms
030C           1227   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:292: SCON1&=0b_0011_1111;
030C 53C83F    1228            anl     _SCON1,#0x3F
030F           1229   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:293: P2_0=1; // 'set' pin to 1 is normal operation mode.
030F D2A0      1230            setb    _P2_0
0311 22        1231            ret
0312           1232   ;------------------------------------------------------------
0312           1233   ;Allocation info for local variables in function 'InitPinADC'
0312           1234   ;------------------------------------------------------------
0312           1235   ;pin_num                   Allocated with name '_InitPinADC_PARM_2'
0312           1236   ;portno                    Allocated to registers r2 
0312           1237   ;mask                      Allocated to registers r3 
0312           1238   ;------------------------------------------------------------
0312           1239   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:298: void InitPinADC (unsigned char portno, unsigned char pin_num)
0312           1240   ;        -----------------------------------------
0312           1241   ;         function InitPinADC
0312           1242   ;        -----------------------------------------
0312           1243   _InitPinADC:
0312 AA82      1244            mov     r2,dpl
0314           1245   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:302: mask=1<<pin_num;
0314 85F0F0    1246            mov     b,_InitPinADC_PARM_2
0317 05F0      1247            inc     b
0319 7401      1248            mov     a,#0x01
031B 8000      1249            sjmp    L016013?
031D           1250   L016011?:
031D 25E0      1251            add     a,acc
031F           1252   L016013?:
031F D5F050    1253            djnz    b,L016011?
0322 FB        1254            mov     r3,a
0323           1255   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:304: SFRPAGE = 0x20;
0323 75A720    1256            mov     _SFRPAGE,#0x20
0326           1257   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:305: switch (portno)
0326 BA0090    1258            cjne    r2,#0x00,L016014?
0329 8000      1259            sjmp    L016001?
032B           1260   L016014?:
032B BA0110    1261            cjne    r2,#0x01,L016015?
032E 8000      1262            sjmp    L016002?
0330           1263   L016015?:
0330           1264   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:307: case 0:
0330 BA0290    1265            cjne    r2,#0x02,L016005?
0333 8000      1266            sjmp    L016003?
0335           1267   L016001?:
0335           1268   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:308: P0MDIN &= (~mask); // Set pin as analog input
0335 EB        1269            mov     a,r3
0336 F4        1270            cpl     a
0337 FA        1271            mov     r2,a
0338 52F1      1272            anl     _P0MDIN,a
033A           1273   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:309: P0SKIP |= mask; // Skip Crossbar decoding for this pin
033A EB        1274            mov     a,r3
033B 42D4      1275            orl     _P0SKIP,a
033D           1276   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:310: break;
033D           1277   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:311: case 1:
033D 8000      1278            sjmp    L016005?
033F           1279   L016002?:
033F           1280   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:312: P1MDIN &= (~mask); // Set pin as analog input
033F EB        1281            mov     a,r3
0340 F4        1282            cpl     a
0341 FA        1283            mov     r2,a
0342 52F2      1284            anl     _P1MDIN,a
0344           1285   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:313: P1SKIP |= mask; // Skip Crossbar decoding for this pin
0344 EB        1286            mov     a,r3
0345 42D5      1287            orl     _P1SKIP,a
0347           1288   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:314: break;
0347           1289   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:315: case 2:
0347 8000      1290            sjmp    L016005?
0349           1291   L016003?:
0349           1292   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:316: P2MDIN &= (~mask); // Set pin as analog input
0349 EB        1293            mov     a,r3
034A F4        1294            cpl     a
034B FA        1295            mov     r2,a
034C 52F3      1296            anl     _P2MDIN,a
034E           1297   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:317: P2SKIP |= mask; // Skip Crossbar decoding for this pin
034E EB        1298            mov     a,r3
034F 42CC      1299            orl     _P2SKIP,a
0351           1300   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:321: }
0351           1301   L016005?:
0351           1302   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:322: SFRPAGE = 0x00;
0351 75A700    1303            mov     _SFRPAGE,#0x00
0354 22        1304            ret
0355           1305   ;------------------------------------------------------------
0355           1306   ;Allocation info for local variables in function 'ADC_at_Pin'
0355           1307   ;------------------------------------------------------------
0355           1308   ;pin                       Allocated to registers 
0355           1309   ;------------------------------------------------------------
0355           1310   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:325: unsigned int ADC_at_Pin(unsigned char pin)
0355           1311   ;        -----------------------------------------
0355           1312   ;         function ADC_at_Pin
0355           1313   ;        -----------------------------------------
0355           1314   _ADC_at_Pin:
0355 8582BB    1315            mov     _ADC0MX,dpl
0358           1316   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:328: ADINT = 0;
0358 C2ED      1317            clr     _ADINT
035A           1318   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:329: ADBUSY = 1;     // Convert voltage at the pin
035A D2EC      1319            setb    _ADBUSY
035C           1320   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:330: while (!ADINT); // Wait for conversion to complete
035C           1321   L017001?:
035C 30ED10    1322            jnb     _ADINT,L017001?
035F           1323   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:331: return (ADC0);
035F 85BD82    1324            mov     dpl,_ADC0
0362 85BE83    1325            mov     dph,(_ADC0 >> 8)
0365 22        1326            ret
0366           1327   ;------------------------------------------------------------
0366           1328   ;Allocation info for local variables in function 'Volts_at_Pin'
0366           1329   ;------------------------------------------------------------
0366           1330   ;pin                       Allocated to registers r2 
0366           1331   ;------------------------------------------------------------
0366           1332   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:334: float Volts_at_Pin(unsigned char pin)
0366           1333   ;        -----------------------------------------
0366           1334   ;         function Volts_at_Pin
0366           1335   ;        -----------------------------------------
0366           1336   _Volts_at_Pin:
0366           1337   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:336: return ((ADC_at_Pin(pin)*VDD)/16383.0);
0366 120000    1338            lcall   _ADC_at_Pin
0369 120000    1339            lcall   ___uint2fs
036C AA82      1340            mov     r2,dpl
036E AB83      1341            mov     r3,dph
0370 ACF0      1342            mov     r4,b
0372 FD        1343            mov     r5,a
0373 C002      1344            push    ar2
0375 C003      1345            push    ar3
0377 C004      1346            push    ar4
0379 C005      1347            push    ar5
037B 903333    1348            mov     dptr,#0x3333
037E 75F053    1349            mov     b,#0x53
0381 7440      1350            mov     a,#0x40
0383 120000    1351            lcall   ___fsmul
0386 AA82      1352            mov     r2,dpl
0388 AB83      1353            mov     r3,dph
038A ACF0      1354            mov     r4,b
038C FD        1355            mov     r5,a
038D E581      1356            mov     a,sp
038F 24FC      1357            add     a,#0xfc
0391 F581      1358            mov     sp,a
0393 E4        1359            clr     a
0394 C0E0      1360            push    acc
0396 74FC      1361            mov     a,#0xFC
0398 C0E0      1362            push    acc
039A 747F      1363            mov     a,#0x7F
039C C0E0      1364            push    acc
039E 7446      1365            mov     a,#0x46
03A0 C0E0      1366            push    acc
03A2 8A82      1367            mov     dpl,r2
03A4 8B83      1368            mov     dph,r3
03A6 8CF0      1369            mov     b,r4
03A8 ED        1370            mov     a,r5
03A9 120000    1371            lcall   ___fsdiv
03AC AA82      1372            mov     r2,dpl
03AE AB83      1373            mov     r3,dph
03B0 ACF0      1374            mov     r4,b
03B2 FD        1375            mov     r5,a
03B3 E581      1376            mov     a,sp
03B5 24FC      1377            add     a,#0xfc
03B7 F581      1378            mov     sp,a
03B9 8A82      1379            mov     dpl,r2
03BB 8B83      1380            mov     dph,r3
03BD 8CF0      1381            mov     b,r4
03BF ED        1382            mov     a,r5
03C0 22        1383            ret
03C1           1384   ;------------------------------------------------------------
03C1           1385   ;Allocation info for local variables in function 'InitPushButton'
03C1           1386   ;------------------------------------------------------------
03C1           1387   ;------------------------------------------------------------
03C1           1388   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:339: void InitPushButton(void)
03C1           1389   ;        -----------------------------------------
03C1           1390   ;         function InitPushButton
03C1           1391   ;        -----------------------------------------
03C1           1392   _InitPushButton:
03C1           1393   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:341: SFRPAGE = 0x20;  // Switch to Port Configuration Page
03C1 75A720    1394            mov     _SFRPAGE,#0x20
03C4           1395   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:342: P3MDOUT &= ~(1 << 2); // Set P3.2 as open-drain (input mode)
03C4 539CFB    1396            anl     _P3MDOUT,#0xFB
03C7           1397   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:343: P3 |= (1 << 2);  // Enable internal pull-up resistor
03C7 43B004    1398            orl     _P3,#0x04
03CA           1399   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:344: SFRPAGE = 0x00;  // Restore SFRPAGE
03CA 75A700    1400            mov     _SFRPAGE,#0x00
03CD 22        1401            ret
03CE           1402   ;------------------------------------------------------------
03CE           1403   ;Allocation info for local variables in function 'main'
03CE           1404   ;------------------------------------------------------------
03CE           1405   ;timeout_cnt               Allocated to registers r2 r3 
03CE           1406   ;cont1                     Allocated to registers 
03CE           1407   ;cont2                     Allocated to registers 
03CE           1408   ;v                         Allocated with name '_main_v_1_109'
03CE           1409   ;norm_x                    Allocated with name '_main_norm_x_1_109'
03CE           1410   ;norm_y                    Allocated with name '_main_norm_y_1_109'
03CE           1411   ;mode                      Allocated to registers r6 r7 
03CE           1412   ;------------------------------------------------------------
03CE           1413   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:348: void main (void)
03CE           1414   ;        -----------------------------------------
03CE           1415   ;         function main
03CE           1416   ;        -----------------------------------------
03CE           1417   _main:
03CE           1418   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:360: waitms(500);
03CE 9001F4    1419            mov     dptr,#0x01F4
03D1 120000    1420            lcall   _waitms
03D4           1421   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:361: printf("\x1b[2J"); // Clear screen using ANSI escape sequence.
03D4 7410      1422            mov     a,#__str_3
03D6 C0E0      1423            push    acc
03D8 74C2      1424            mov     a,#(__str_3 >> 8)
03DA C0E0      1425            push    acc
03DC 7480      1426            mov     a,#0x80
03DE C0E0      1427            push    acc
03E0 120000    1428            lcall   _printf
03E3 1581      1429            dec     sp
03E5 1581      1430            dec     sp
03E7 1581      1431            dec     sp
03E9           1432   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:363: UART1_Init(9600);
03E9 902580    1433            mov     dptr,#0x2580
03EC E4        1434            clr     a
03ED F5F0      1435            mov     b,a
03EF 120000    1436            lcall   _UART1_Init
03F2           1437   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:377: ReceptionOff();
03F2 120000    1438            lcall   _ReceptionOff
03F5           1439   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:380: SendATCommand("AT+VER\r\n");
03F5 90C250    1440            mov     dptr,#__str_4
03F8 75F080    1441            mov     b,#0x80
03FB 120000    1442            lcall   _SendATCommand
03FE           1443   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:381: SendATCommand("AT+BAUD\r\n");
03FE 90C290    1444            mov     dptr,#__str_5
0401 75F080    1445            mov     b,#0x80
0404 120000    1446            lcall   _SendATCommand
0407           1447   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:382: SendATCommand("AT+RFID\r\n");
0407 90C2D0    1448            mov     dptr,#__str_6
040A 75F080    1449            mov     b,#0x80
040D 120000    1450            lcall   _SendATCommand
0410           1451   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:383: SendATCommand("AT+DVID\r\n");
0410 90C310    1452            mov     dptr,#__str_7
0413 75F080    1453            mov     b,#0x80
0416 120000    1454            lcall   _SendATCommand
0419           1455   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:384: SendATCommand("AT+RFC\r\n");
0419 90C350    1456            mov     dptr,#__str_8
041C 75F080    1457            mov     b,#0x80
041F 120000    1458            lcall   _SendATCommand
0422           1459   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:385: SendATCommand("AT+POWE\r\n");
0422 90C390    1460            mov     dptr,#__str_9
0425 75F080    1461            mov     b,#0x80
0428 120000    1462            lcall   _SendATCommand
042B           1463   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:386: SendATCommand("AT+CLSS\r\n");
042B 90C3D0    1464            mov     dptr,#__str_10
042E 75F080    1465            mov     b,#0x80
0431 120000    1466            lcall   _SendATCommand
0434           1467   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:390: SendATCommand("AT+DVIDFDFD\r\n");
0434 90C410    1468            mov     dptr,#__str_11
0437 75F080    1469            mov     b,#0x80
043A 120000    1470            lcall   _SendATCommand
043D           1471   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:391: SendATCommand("AT+RFC113\r\n");
043D 90C450    1472            mov     dptr,#__str_12
0440 75F080    1473            mov     b,#0x80
0443 120000    1474            lcall   _SendATCommand
0446           1475   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:393: InitPinADC(2, 2); // Configure P2.2 as analog input
0446 75F002    1476            mov     _InitPinADC_PARM_2,#0x02
0449 758202    1477            mov     dpl,#0x02
044C 120000    1478            lcall   _InitPinADC
044F           1479   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:394: InitPinADC(2, 3); // Configure P2.3 as analog input
044F 75F003    1480            mov     _InitPinADC_PARM_2,#0x03
0452 758202    1481            mov     dpl,#0x02
0455 120000    1482            lcall   _InitPinADC
0458           1483   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:395: InitPinADC(2, 4); // Configure P2.4 as analog input
0458 75F004    1484            mov     _InitPinADC_PARM_2,#0x04
045B 758202    1485            mov     dpl,#0x02
045E 120000    1486            lcall   _InitPinADC
0461           1487   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:396: InitPinADC(2, 5); // Configure P2.5 as analog input
0461 75F005    1488            mov     _InitPinADC_PARM_2,#0x05
0464 758202    1489            mov     dpl,#0x02
0467 120000    1490            lcall   _InitPinADC
046A           1491   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:397: InitADC();
046A 120000    1492            lcall   _InitADC
046D           1493   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:398: InitPushButton();
046D 120000    1494            lcall   _InitPushButton
0470           1495   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:400: while(1)
0470           1496   L020031?:
0470           1497   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:404: putchar1('!'); // Send a message to the slave. First send the 'attention' character which is '!'
0470 758221    1498            mov     dpl,#0x21
0473 120000    1499            lcall   _putchar1
0476           1500   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:406: waitms(5); // This may need adjustment depending on how busy is the slave
0476 900005    1501            mov     dptr,#0x0005
0479 120000    1502            lcall   _waitms
047C           1503   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:414: putchar1('@'); // Request a message from the slave
047C 758240    1504            mov     dpl,#0x40
047F 120000    1505            lcall   _putchar1
0482           1506   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:419: while(1)
0482 7A00      1507            mov     r2,#0x00
0484 7B00      1508            mov     r3,#0x00
0486           1509   L020006?:
0486           1510   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:421: if(RXU1()) break; // Something has arrived
0486 C002      1511            push    ar2
0488 C003      1512            push    ar3
048A 120000    1513            lcall   _RXU1
048D D003      1514            pop     ar3
048F D002      1515            pop     ar2
0491 4000      1516            jc      L020007?
0493           1517   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:422: if(++timeout_cnt>250) break; // Wait up to 25ms for the repply
0493 0A        1518            inc     r2
0494 BA0050    1519            cjne    r2,#0x00,L020051?
0497 0B        1520            inc     r3
0498           1521   L020051?:
0498 C3        1522            clr     c
0499 74FA      1523            mov     a,#0xFA
049B 9A        1524            subb    a,r2
049C E4        1525            clr     a
049D 6480      1526            xrl     a,#0x80
049F 8BF0      1527            mov     b,r3
04A1 63F080    1528            xrl     b,#0x80
04A4 95F0      1529            subb    a,b
04A6 4000      1530            jc      L020007?
04A8           1531   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:423: Timer3us(100); // 100us*250=25ms
04A8 758264    1532            mov     dpl,#0x64
04AB C002      1533            push    ar2
04AD C003      1534            push    ar3
04AF 120000    1535            lcall   _Timer3us
04B2 D003      1536            pop     ar3
04B4 D002      1537            pop     ar2
04B6 8000      1538            sjmp    L020006?
04B8           1539   L020007?:
04B8           1540   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:427: if(RXU1()) // Something has arrived from the slave
04B8 120000    1541            lcall   _RXU1
04BB 4000      1542            jc      L020053?
04BD 020000    1543            ljmp    L020028?
04C0           1544   L020053?:
04C0           1545   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:431: v[0] = Volts_at_Pin(QFP32_MUX_P2_2);
04C0 75820F    1546            mov     dpl,#0x0F
04C3 120000    1547            lcall   _Volts_at_Pin
04C6 AA82      1548            mov     r2,dpl
04C8 AB83      1549            mov     r3,dph
04CA ACF0      1550            mov     r4,b
04CC FD        1551            mov     r5,a
04CD 8A50      1552            mov     _main_v_1_109,r2
04CF 8B51      1553            mov     (_main_v_1_109 + 1),r3
04D1 8C52      1554            mov     (_main_v_1_109 + 2),r4
04D3 8D53      1555            mov     (_main_v_1_109 + 3),r5
04D5           1556   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:432: v[1] = Volts_at_Pin(QFP32_MUX_P2_3);
04D5 758210    1557            mov     dpl,#0x10
04D8 120000    1558            lcall   _Volts_at_Pin
04DB AA82      1559            mov     r2,dpl
04DD AB83      1560            mov     r3,dph
04DF ACF0      1561            mov     r4,b
04E1 FD        1562            mov     r5,a
04E2 8A54      1563            mov     (_main_v_1_109 + 0x0004),r2
04E4 8B55      1564            mov     ((_main_v_1_109 + 0x0004) + 1),r3
04E6 8C56      1565            mov     ((_main_v_1_109 + 0x0004) + 2),r4
04E8 8D57      1566            mov     ((_main_v_1_109 + 0x0004) + 3),r5
04EA           1567   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:433: v[2] = Volts_at_Pin(QFP32_MUX_P2_4);
04EA 758211    1568            mov     dpl,#0x11
04ED 120000    1569            lcall   _Volts_at_Pin
04F0 AA82      1570            mov     r2,dpl
04F2 AB83      1571            mov     r3,dph
04F4 ACF0      1572            mov     r4,b
04F6 FD        1573            mov     r5,a
04F7 8A58      1574            mov     (_main_v_1_109 + 0x0008),r2
04F9 8B59      1575            mov     ((_main_v_1_109 + 0x0008) + 1),r3
04FB 8C5A      1576            mov     ((_main_v_1_109 + 0x0008) + 2),r4
04FD 8D5B      1577            mov     ((_main_v_1_109 + 0x0008) + 3),r5
04FF           1578   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:434: v[3] = Volts_at_Pin(QFP32_MUX_P2_5);
04FF 758212    1579            mov     dpl,#0x12
0502 120000    1580            lcall   _Volts_at_Pin
0505 AA82      1581            mov     r2,dpl
0507 AB83      1582            mov     r3,dph
0509 ACF0      1583            mov     r4,b
050B FD        1584            mov     r5,a
050C 8A5C      1585            mov     (_main_v_1_109 + 0x000c),r2
050E 8B5D      1586            mov     ((_main_v_1_109 + 0x000c) + 1),r3
0510 8C5E      1587            mov     ((_main_v_1_109 + 0x000c) + 2),r4
0512 8D5F      1588            mov     ((_main_v_1_109 + 0x000c) + 3),r5
0514           1589   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:436: norm_x = (v[1] / 3.29) * 2.0 - 1.0;  // Horizontal (P2.3)
0514 745C      1590            mov     a,#0x5C
0516 C0E0      1591            push    acc
0518 748F      1592            mov     a,#0x8F
051A C0E0      1593            push    acc
051C 7452      1594            mov     a,#0x52
051E C0E0      1595            push    acc
0520 7440      1596            mov     a,#0x40
0522 C0E0      1597            push    acc
0524 855482    1598            mov     dpl,(_main_v_1_109 + 0x0004)
0527 855583    1599            mov     dph,((_main_v_1_109 + 0x0004) + 1)
052A 8556F0    1600            mov     b,((_main_v_1_109 + 0x0004) + 2)
052D E557      1601            mov     a,((_main_v_1_109 + 0x0004) + 3)
052F 120000    1602            lcall   ___fsdiv
0532 AA82      1603            mov     r2,dpl
0534 AB83      1604            mov     r3,dph
0536 ACF0      1605            mov     r4,b
0538 FD        1606            mov     r5,a
0539 E581      1607            mov     a,sp
053B 24FC      1608            add     a,#0xfc
053D F581      1609            mov     sp,a
053F C002      1610            push    ar2
0541 C003      1611            push    ar3
0543 C004      1612            push    ar4
0545 C005      1613            push    ar5
0547 900000    1614            mov     dptr,#(0x00&0x00ff)
054A E4        1615            clr     a
054B F5F0      1616            mov     b,a
054D 7440      1617            mov     a,#0x40
054F 120000    1618            lcall   ___fsmul
0552 AA82      1619            mov     r2,dpl
0554 AB83      1620            mov     r3,dph
0556 ACF0      1621            mov     r4,b
0558 FD        1622            mov     r5,a
0559 E581      1623            mov     a,sp
055B 24FC      1624            add     a,#0xfc
055D F581      1625            mov     sp,a
055F E4        1626            clr     a
0560 C0E0      1627            push    acc
0562 C0E0      1628            push    acc
0564 7480      1629            mov     a,#0x80
0566 C0E0      1630            push    acc
0568 743F      1631            mov     a,#0x3F
056A C0E0      1632            push    acc
056C 8A82      1633            mov     dpl,r2
056E 8B83      1634            mov     dph,r3
0570 8CF0      1635            mov     b,r4
0572 ED        1636            mov     a,r5
0573 120000    1637            lcall   ___fssub
0576 8582A0    1638            mov     _main_norm_x_1_109,dpl
0579 8583A1    1639            mov     (_main_norm_x_1_109 + 1),dph
057C 85F0A2    1640            mov     (_main_norm_x_1_109 + 2),b
057F F5A3      1641            mov     (_main_norm_x_1_109 + 3),a
0581 E581      1642            mov     a,sp
0583 24FC      1643            add     a,#0xfc
0585 F581      1644            mov     sp,a
0587           1645   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:437: norm_y = (v[0] / 3.29) * 2.0 - 1.0;  // Vertical   (P2.2)
0587 745C      1646            mov     a,#0x5C
0589 C0E0      1647            push    acc
058B 748F      1648            mov     a,#0x8F
058D C0E0      1649            push    acc
058F 7452      1650            mov     a,#0x52
0591 C0E0      1651            push    acc
0593 7440      1652            mov     a,#0x40
0595 C0E0      1653            push    acc
0597 855082    1654            mov     dpl,_main_v_1_109
059A 855183    1655            mov     dph,(_main_v_1_109 + 1)
059D 8552F0    1656            mov     b,(_main_v_1_109 + 2)
05A0 E553      1657            mov     a,(_main_v_1_109 + 3)
05A2 120000    1658            lcall   ___fsdiv
05A5 AE82      1659            mov     r6,dpl
05A7 AF83      1660            mov     r7,dph
05A9 AAF0      1661            mov     r2,b
05AB FB        1662            mov     r3,a
05AC E581      1663            mov     a,sp
05AE 24FC      1664            add     a,#0xfc
05B0 F581      1665            mov     sp,a
05B2 C006      1666            push    ar6
05B4 C007      1667            push    ar7
05B6 C002      1668            push    ar2
05B8 C003      1669            push    ar3
05BA 900000    1670            mov     dptr,#(0x00&0x00ff)
05BD E4        1671            clr     a
05BE F5F0      1672            mov     b,a
05C0 7440      1673            mov     a,#0x40
05C2 120000    1674            lcall   ___fsmul
05C5 AA82      1675            mov     r2,dpl
05C7 AB83      1676            mov     r3,dph
05C9 ACF0      1677            mov     r4,b
05CB FD        1678            mov     r5,a
05CC E581      1679            mov     a,sp
05CE 24FC      1680            add     a,#0xfc
05D0 F581      1681            mov     sp,a
05D2 E4        1682            clr     a
05D3 C0E0      1683            push    acc
05D5 C0E0      1684            push    acc
05D7 7480      1685            mov     a,#0x80
05D9 C0E0      1686            push    acc
05DB 743F      1687            mov     a,#0x3F
05DD C0E0      1688            push    acc
05DF 8A82      1689            mov     dpl,r2
05E1 8B83      1690            mov     dph,r3
05E3 8CF0      1691            mov     b,r4
05E5 ED        1692            mov     a,r5
05E6 120000    1693            lcall   ___fssub
05E9 8582F0    1694            mov     _main_norm_y_1_109,dpl
05EC 8583F1    1695            mov     (_main_norm_y_1_109 + 1),dph
05EF 85F0F2    1696            mov     (_main_norm_y_1_109 + 2),b
05F2 F5F3      1697            mov     (_main_norm_y_1_109 + 3),a
05F4 E581      1698            mov     a,sp
05F6 24FC      1699            add     a,#0xfc
05F8 F581      1700            mov     sp,a
05FA           1701   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:439: button_state = (P3 & (1 << 0)) ? 0 : 1; // If HIGH, button not pressed; If LOW, button pressed
05FA E5B0      1702            mov     a,_P3
05FC 5401      1703            anl     a,#0x01
05FE FE        1704            mov     r6,a
05FF B40150    1705            cjne    a,#0x01,L020054?
0602           1706   L020054?:
0602           1707   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:441: if (button_state == 1) {
0602 9240      1708            mov     _main_button_state_1_109,c
0604 5000      1709            jnc     L020025?
0606           1710   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:442: mode = 5;
0606 7E05      1711            mov     r6,#0x05
0608 7F00      1712            mov     r7,#0x00
060A 020000    1713            ljmp    L020026?
060D           1714   L020025?:
060D           1715   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:445: else if (norm_x <= 1.5 && norm_x > 0.5)
060D E4        1716            clr     a
060E C0E0      1717            push    acc
0610 C0E0      1718            push    acc
0612 74C0      1719            mov     a,#0xC0
0614 C0E0      1720            push    acc
0616 743F      1721            mov     a,#0x3F
0618 C0E0      1722            push    acc
061A 85A082    1723            mov     dpl,_main_norm_x_1_109
061D 85A183    1724            mov     dph,(_main_norm_x_1_109 + 1)
0620 85A2F0    1725            mov     b,(_main_norm_x_1_109 + 2)
0623 E5A3      1726            mov     a,(_main_norm_x_1_109 + 3)
0625 120000    1727            lcall   ___fsgt
0628 AA82      1728            mov     r2,dpl
062A E581      1729            mov     a,sp
062C 24FC      1730            add     a,#0xfc
062E F581      1731            mov     sp,a
0630 EA        1732            mov     a,r2
0631 7000      1733            jnz     L020021?
0633 C0E0      1734            push    acc
0635 C0E0      1735            push    acc
0637 C0E0      1736            push    acc
0639 743F      1737            mov     a,#0x3F
063B C0E0      1738            push    acc
063D 85A082    1739            mov     dpl,_main_norm_x_1_109
0640 85A183    1740            mov     dph,(_main_norm_x_1_109 + 1)
0643 85A2F0    1741            mov     b,(_main_norm_x_1_109 + 2)
0646 E5A3      1742            mov     a,(_main_norm_x_1_109 + 3)
0648 120000    1743            lcall   ___fsgt
064B AA82      1744            mov     r2,dpl
064D E581      1745            mov     a,sp
064F 24FC      1746            add     a,#0xfc
0651 F581      1747            mov     sp,a
0653 EA        1748            mov     a,r2
0654 6000      1749            jz      L020021?
0656           1750   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:447: mode = 1;
0656 7E01      1751            mov     r6,#0x01
0658 7F00      1752            mov     r7,#0x00
065A 020000    1753            ljmp    L020026?
065D           1754   L020021?:
065D           1755   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:450: else if (norm_x <-0.5 && norm_x>= -1.5)
065D E4        1756            clr     a
065E C0E0      1757            push    acc
0660 C0E0      1758            push    acc
0662 C0E0      1759            push    acc
0664 74BF      1760            mov     a,#0xBF
0666 C0E0      1761            push    acc
0668 85A082    1762            mov     dpl,_main_norm_x_1_109
066B 85A183    1763            mov     dph,(_main_norm_x_1_109 + 1)
066E 85A2F0    1764            mov     b,(_main_norm_x_1_109 + 2)
0671 E5A3      1765            mov     a,(_main_norm_x_1_109 + 3)
0673 120000    1766            lcall   ___fslt
0676 AA82      1767            mov     r2,dpl
0678 E581      1768            mov     a,sp
067A 24FC      1769            add     a,#0xfc
067C F581      1770            mov     sp,a
067E EA        1771            mov     a,r2
067F 6000      1772            jz      L020017?
0681 E4        1773            clr     a
0682 C0E0      1774            push    acc
0684 C0E0      1775            push    acc
0686 74C0      1776            mov     a,#0xC0
0688 C0E0      1777            push    acc
068A 74BF      1778            mov     a,#0xBF
068C C0E0      1779            push    acc
068E 85A082    1780            mov     dpl,_main_norm_x_1_109
0691 85A183    1781            mov     dph,(_main_norm_x_1_109 + 1)
0694 85A2F0    1782            mov     b,(_main_norm_x_1_109 + 2)
0697 E5A3      1783            mov     a,(_main_norm_x_1_109 + 3)
0699 120000    1784            lcall   ___fslt
069C AA82      1785            mov     r2,dpl
069E E581      1786            mov     a,sp
06A0 24FC      1787            add     a,#0xfc
06A2 F581      1788            mov     sp,a
06A4 EA        1789            mov     a,r2
06A5           1790   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:452: mode = 3;
06A5 7000      1791            jnz     L020017?
06A7 7E03      1792            mov     r6,#0x03
06A9 FF        1793            mov     r7,a
06AA 020000    1794            ljmp    L020026?
06AD           1795   L020017?:
06AD           1796   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:455: else if (norm_y <= 1.5 && norm_y > 0.5)
06AD E4        1797            clr     a
06AE C0E0      1798            push    acc
06B0 C0E0      1799            push    acc
06B2 74C0      1800            mov     a,#0xC0
06B4 C0E0      1801            push    acc
06B6 743F      1802            mov     a,#0x3F
06B8 C0E0      1803            push    acc
06BA 85F082    1804            mov     dpl,_main_norm_y_1_109
06BD 85F183    1805            mov     dph,(_main_norm_y_1_109 + 1)
06C0 85F2F0    1806            mov     b,(_main_norm_y_1_109 + 2)
06C3 E5F3      1807            mov     a,(_main_norm_y_1_109 + 3)
06C5 120000    1808            lcall   ___fsgt
06C8 AA82      1809            mov     r2,dpl
06CA E581      1810            mov     a,sp
06CC 24FC      1811            add     a,#0xfc
06CE F581      1812            mov     sp,a
06D0 EA        1813            mov     a,r2
06D1 7000      1814            jnz     L020013?
06D3 C0E0      1815            push    acc
06D5 C0E0      1816            push    acc
06D7 C0E0      1817            push    acc
06D9 743F      1818            mov     a,#0x3F
06DB C0E0      1819            push    acc
06DD 85F082    1820            mov     dpl,_main_norm_y_1_109
06E0 85F183    1821            mov     dph,(_main_norm_y_1_109 + 1)
06E3 85F2F0    1822            mov     b,(_main_norm_y_1_109 + 2)
06E6 E5F3      1823            mov     a,(_main_norm_y_1_109 + 3)
06E8 120000    1824            lcall   ___fsgt
06EB AA82      1825            mov     r2,dpl
06ED E581      1826            mov     a,sp
06EF 24FC      1827            add     a,#0xfc
06F1 F581      1828            mov     sp,a
06F3 EA        1829            mov     a,r2
06F4 6000      1830            jz      L020013?
06F6           1831   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:457: mode = 2;
06F6 7E02      1832            mov     r6,#0x02
06F8 7F00      1833            mov     r7,#0x00
06FA 8000      1834            sjmp    L020026?
06FC           1835   L020013?:
06FC           1836   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:460: else if (norm_y <-0.5 && norm_y>= -1.5)
06FC E4        1837            clr     a
06FD C0E0      1838            push    acc
06FF C0E0      1839            push    acc
0701 C0E0      1840            push    acc
0703 74BF      1841            mov     a,#0xBF
0705 C0E0      1842            push    acc
0707 85F082    1843            mov     dpl,_main_norm_y_1_109
070A 85F183    1844            mov     dph,(_main_norm_y_1_109 + 1)
070D 85F2F0    1845            mov     b,(_main_norm_y_1_109 + 2)
0710 E5F3      1846            mov     a,(_main_norm_y_1_109 + 3)
0712 120000    1847            lcall   ___fslt
0715 AA82      1848            mov     r2,dpl
0717 E581      1849            mov     a,sp
0719 24FC      1850            add     a,#0xfc
071B F581      1851            mov     sp,a
071D EA        1852            mov     a,r2
071E 6000      1853            jz      L020009?
0720 E4        1854            clr     a
0721 C0E0      1855            push    acc
0723 C0E0      1856            push    acc
0725 74C0      1857            mov     a,#0xC0
0727 C0E0      1858            push    acc
0729 74BF      1859            mov     a,#0xBF
072B C0E0      1860            push    acc
072D 85F082    1861            mov     dpl,_main_norm_y_1_109
0730 85F183    1862            mov     dph,(_main_norm_y_1_109 + 1)
0733 85F2F0    1863            mov     b,(_main_norm_y_1_109 + 2)
0736 E5F3      1864            mov     a,(_main_norm_y_1_109 + 3)
0738 120000    1865            lcall   ___fslt
073B AA82      1866            mov     r2,dpl
073D E581      1867            mov     a,sp
073F 24FC      1868            add     a,#0xfc
0741 F581      1869            mov     sp,a
0743 EA        1870            mov     a,r2
0744           1871   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:462: mode = 4;
0744 7000      1872            jnz     L020009?
0746 7E04      1873            mov     r6,#0x04
0748 FF        1874            mov     r7,a
0749 8000      1875            sjmp    L020026?
074B           1876   L020009?:
074B           1877   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:466: mode = 0;
074B 7E00      1878            mov     r6,#0x00
074D 7F00      1879            mov     r7,#0x00
074F           1880   L020026?:
074F           1881   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:469: sprintf(buff, "test %d\n", mode);
074F C006      1882            push    ar6
0751 C007      1883            push    ar7
0753 7490      1884            mov     a,#__str_13
0755 C0E0      1885            push    acc
0757 74C8      1886            mov     a,#(__str_13 >> 8)
0759 C0E0      1887            push    acc
075B 7480      1888            mov     a,#0x80
075D C0E0      1889            push    acc
075F 7410      1890            mov     a,#_buff
0761 C0E0      1891            push    acc
0763 7446      1892            mov     a,#(_buff >> 8)
0765 C0E0      1893            push    acc
0767 7440      1894            mov     a,#0x40
0769 C0E0      1895            push    acc
076B 120000    1896            lcall   _sprintf
076E E581      1897            mov     a,sp
0770 24F8      1898            add     a,#0xf8
0772 F581      1899            mov     sp,a
0774           1900   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:472: sendstr1(buff);
0774 904610    1901            mov     dptr,#_buff
0777 75F040    1902            mov     b,#0x40
077A 120000    1903            lcall   _sendstr1
077D           1904   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:475: waitms(50);
077D 900032    1905            mov     dptr,#0x0032
0780 120000    1906            lcall   _waitms
0783 8000      1907            sjmp    L020029?
0785           1908   L020028?:
0785           1909   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:493: printf("NO RESPONSE\r\n", buff);
0785 7410      1910            mov     a,#_buff
0787 C0E0      1911            push    acc
0789 7446      1912            mov     a,#(_buff >> 8)
078B C0E0      1913            push    acc
078D 7440      1914            mov     a,#0x40
078F C0E0      1915            push    acc
0791 7450      1916            mov     a,#__str_14
0793 C0E0      1917            push    acc
0795 74C9      1918            mov     a,#(__str_14 >> 8)
0797 C0E0      1919            push    acc
0799 7480      1920            mov     a,#0x80
079B C0E0      1921            push    acc
079D 120000    1922            lcall   _printf
07A0 E581      1923            mov     a,sp
07A2 24FA      1924            add     a,#0xfa
07A4 F581      1925            mov     sp,a
07A6           1926   L020029?:
07A6           1927   ;        C:\Users\leigh\Elec291Project2\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:496: waitms(50);  // Set the information interchange pace: communicate about every 50ms
07A6 900032    1928            mov     dptr,#0x0032
07A9 120000    1929            lcall   _waitms
07AC 020000    1930            ljmp    L020031?
07AF           1931            rseg R_CSEG
07AF           1932   
0000           1933            rseg R_XINIT
0000           1934   
0000           1935            rseg R_CONST
0000           1936   __str_0:
0000 436F6D6D  1937            db 'Command: %s'
     616E643A
     202573
000B 00        1938            db 0x00
000C           1939   __str_1:
000C 52657370  1940            db 'Response: %s'
     6F6E7365
     3A202573
0018 0D        1941            db 0x0D
0019 0A        1942            db 0x0A
001A 00        1943            db 0x00
001B           1944   __str_2:
001B 41542B44  1945            db 'AT+DVID0000'
     56494430
     303030
0026 0D        1946            db 0x0D
0027 0A        1947            db 0x0A
0028 00        1948            db 0x00
0029           1949   __str_3:
0029 1B        1950            db 0x1B
002A 5B324A    1951            db '[2J'
002D 00        1952            db 0x00
002E           1953   __str_4:
002E 41542B56  1954            db 'AT+VER'
     4552
0034 0D        1955            db 0x0D
0035 0A        1956            db 0x0A
0036 00        1957            db 0x00
0037           1958   __str_5:
0037 41542B42  1959            db 'AT+BAUD'
     415544
003E 0D        1960            db 0x0D
003F 0A        1961            db 0x0A
0040 00        1962            db 0x00
0041           1963   __str_6:
0041 41542B52  1964            db 'AT+RFID'
     464944
0048 0D        1965            db 0x0D
0049 0A        1966            db 0x0A
004A 00        1967            db 0x00
004B           1968   __str_7:
004B 41542B44  1969            db 'AT+DVID'
     564944
0052 0D        1970            db 0x0D
0053 0A        1971            db 0x0A
0054 00        1972            db 0x00
0055           1973   __str_8:
0055 41542B52  1974            db 'AT+RFC'
     4643
005B 0D        1975            db 0x0D
005C 0A        1976            db 0x0A
005D 00        1977            db 0x00
005E           1978   __str_9:
005E 41542B50  1979            db 'AT+POWE'
     4F5745
0065 0D        1980            db 0x0D
0066 0A        1981            db 0x0A
0067 00        1982            db 0x00
0068           1983   __str_10:
0068 41542B43  1984            db 'AT+CLSS'
     4C5353
006F 0D        1985            db 0x0D
0070 0A        1986            db 0x0A
0071 00        1987            db 0x00
0072           1988   __str_11:
0072 41542B44  1989            db 'AT+DVIDFDFD'
     56494446
     444644
007D 0D        1990            db 0x0D
007E 0A        1991            db 0x0A
007F 00        1992            db 0x00
0080           1993   __str_12:
0080 41542B52  1994            db 'AT+RFC113'
     46433131
     33
0089 0D        1995            db 0x0D
008A 0A        1996            db 0x0A
008B 00        1997            db 0x00
008C           1998   __str_13:
008C 74657374  1999            db 'test %d'
     202564
0093 0A        2000            db 0x0A
0094 00        2001            db 0x00
0095           2002   __str_14:
0095 4E4F2052  2003            db 'NO RESPONSE'
     4553504F
     4E5345
00A0 0D        2004            db 0x0D
00A1 0A        2005            db 0x0A
00A2 00        2006            db 0x00
00A3           2007   
0003           2008            CSEG
0003           2009   
0003           2010   end
