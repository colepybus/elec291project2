0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1170 (Feb 16 2022) (MSVC)
0000              4   ; This file was generated Thu Mar 13 16:45:58 2025
0000              5   ;--------------------------------------------------------
                  5   $name EFM8_JDY40_test
                  6   $optc51 --model-small
0000              8            R_DSEG    segment data
0000              9            R_CSEG    segment code
0000             10            R_BSEG    segment bit
0000             11            R_XSEG    segment xdata
0000             12            R_PSEG    segment xdata
0000             13            R_ISEG    segment idata
0000             14            R_OSEG    segment data overlay
0000             15            BIT_BANK  segment data overlay
0000             16            R_HOME    segment code
0000             17            R_GSINIT  segment code
0000             18            R_IXSEG   segment xdata
0000             19            R_CONST   segment code
0000             20            R_XINIT   segment code
0000             21            R_DINIT   segment code
0000             22   
0000             23   ;--------------------------------------------------------
0000             24   ; Public variables in this module
0000             25   ;--------------------------------------------------------
0000             26            public _main
0000             27            public _ReceptionOff
0000             28            public _SendATCommand
0000             29            public _waitms_or_RI1
0000             30            public _RXU1
0000             31            public _getstr1
0000             32            public _getchar1_with_timeout
0000             33            public _getchar1
0000             34            public _sendstr1
0000             35            public _putchar1
0000             36            public _UART1_Init
0000             37            public _waitms
0000             38            public _Timer3us
0000             39            public __c51_external_startup
0000             40            public _buff
0000             41            public _getstr1_PARM_2
0000             42   ;--------------------------------------------------------
0000             43   ; Special Function Registers
0000             44   ;--------------------------------------------------------
0000             45   _ACC            DATA 0xe0
0000             46   _ADC0ASAH       DATA 0xb6
0000             47   _ADC0ASAL       DATA 0xb5
0000             48   _ADC0ASCF       DATA 0xa1
0000             49   _ADC0ASCT       DATA 0xc7
0000             50   _ADC0CF0        DATA 0xbc
0000             51   _ADC0CF1        DATA 0xb9
0000             52   _ADC0CF2        DATA 0xdf
0000             53   _ADC0CN0        DATA 0xe8
0000             54   _ADC0CN1        DATA 0xb2
0000             55   _ADC0CN2        DATA 0xb3
0000             56   _ADC0GTH        DATA 0xc4
0000             57   _ADC0GTL        DATA 0xc3
0000             58   _ADC0H          DATA 0xbe
0000             59   _ADC0L          DATA 0xbd
0000             60   _ADC0LTH        DATA 0xc6
0000             61   _ADC0LTL        DATA 0xc5
0000             62   _ADC0MX         DATA 0xbb
0000             63   _B              DATA 0xf0
0000             64   _CKCON0         DATA 0x8e
0000             65   _CKCON1         DATA 0xa6
0000             66   _CLEN0          DATA 0xc6
0000             67   _CLIE0          DATA 0xc7
0000             68   _CLIF0          DATA 0xe8
0000             69   _CLKSEL         DATA 0xa9
0000             70   _CLOUT0         DATA 0xd1
0000             71   _CLU0CF         DATA 0xb1
0000             72   _CLU0FN         DATA 0xaf
0000             73   _CLU0MX         DATA 0x84
0000             74   _CLU1CF         DATA 0xb3
0000             75   _CLU1FN         DATA 0xb2
0000             76   _CLU1MX         DATA 0x85
0000             77   _CLU2CF         DATA 0xb6
0000             78   _CLU2FN         DATA 0xb5
0000             79   _CLU2MX         DATA 0x91
0000             80   _CLU3CF         DATA 0xbf
0000             81   _CLU3FN         DATA 0xbe
0000             82   _CLU3MX         DATA 0xae
0000             83   _CMP0CN0        DATA 0x9b
0000             84   _CMP0CN1        DATA 0x99
0000             85   _CMP0MD         DATA 0x9d
0000             86   _CMP0MX         DATA 0x9f
0000             87   _CMP1CN0        DATA 0xbf
0000             88   _CMP1CN1        DATA 0xac
0000             89   _CMP1MD         DATA 0xab
0000             90   _CMP1MX         DATA 0xaa
0000             91   _CRC0CN0        DATA 0xce
0000             92   _CRC0CN1        DATA 0x86
0000             93   _CRC0CNT        DATA 0xd3
0000             94   _CRC0DAT        DATA 0xcb
0000             95   _CRC0FLIP       DATA 0xcf
0000             96   _CRC0IN         DATA 0xca
0000             97   _CRC0ST         DATA 0xd2
0000             98   _DAC0CF0        DATA 0x91
0000             99   _DAC0CF1        DATA 0x92
0000            100   _DAC0H          DATA 0x85
0000            101   _DAC0L          DATA 0x84
0000            102   _DAC1CF0        DATA 0x93
0000            103   _DAC1CF1        DATA 0x94
0000            104   _DAC1H          DATA 0x8a
0000            105   _DAC1L          DATA 0x89
0000            106   _DAC2CF0        DATA 0x95
0000            107   _DAC2CF1        DATA 0x96
0000            108   _DAC2H          DATA 0x8c
0000            109   _DAC2L          DATA 0x8b
0000            110   _DAC3CF0        DATA 0x9a
0000            111   _DAC3CF1        DATA 0x9c
0000            112   _DAC3H          DATA 0x8e
0000            113   _DAC3L          DATA 0x8d
0000            114   _DACGCF0        DATA 0x88
0000            115   _DACGCF1        DATA 0x98
0000            116   _DACGCF2        DATA 0xa2
0000            117   _DERIVID        DATA 0xad
0000            118   _DEVICEID       DATA 0xb5
0000            119   _DPH            DATA 0x83
0000            120   _DPL            DATA 0x82
0000            121   _EIE1           DATA 0xe6
0000            122   _EIE2           DATA 0xf3
0000            123   _EIP1           DATA 0xbb
0000            124   _EIP1H          DATA 0xee
0000            125   _EIP2           DATA 0xed
0000            126   _EIP2H          DATA 0xf6
0000            127   _EMI0CN         DATA 0xe7
0000            128   _FLKEY          DATA 0xb7
0000            129   _HFO0CAL        DATA 0xc7
0000            130   _HFO1CAL        DATA 0xd6
0000            131   _HFOCN          DATA 0xef
0000            132   _I2C0ADM        DATA 0xff
0000            133   _I2C0CN0        DATA 0xba
0000            134   _I2C0DIN        DATA 0xbc
0000            135   _I2C0DOUT       DATA 0xbb
0000            136   _I2C0FCN0       DATA 0xad
0000            137   _I2C0FCN1       DATA 0xab
0000            138   _I2C0FCT        DATA 0xf5
0000            139   _I2C0SLAD       DATA 0xbd
0000            140   _I2C0STAT       DATA 0xb9
0000            141   _IE             DATA 0xa8
0000            142   _IP             DATA 0xb8
0000            143   _IPH            DATA 0xf2
0000            144   _IT01CF         DATA 0xe4
0000            145   _LFO0CN         DATA 0xb1
0000            146   _P0             DATA 0x80
0000            147   _P0MASK         DATA 0xfe
0000            148   _P0MAT          DATA 0xfd
0000            149   _P0MDIN         DATA 0xf1
0000            150   _P0MDOUT        DATA 0xa4
0000            151   _P0SKIP         DATA 0xd4
0000            152   _P1             DATA 0x90
0000            153   _P1MASK         DATA 0xee
0000            154   _P1MAT          DATA 0xed
0000            155   _P1MDIN         DATA 0xf2
0000            156   _P1MDOUT        DATA 0xa5
0000            157   _P1SKIP         DATA 0xd5
0000            158   _P2             DATA 0xa0
0000            159   _P2MASK         DATA 0xfc
0000            160   _P2MAT          DATA 0xfb
0000            161   _P2MDIN         DATA 0xf3
0000            162   _P2MDOUT        DATA 0xa6
0000            163   _P2SKIP         DATA 0xcc
0000            164   _P3             DATA 0xb0
0000            165   _P3MDIN         DATA 0xf4
0000            166   _P3MDOUT        DATA 0x9c
0000            167   _PCA0CENT       DATA 0x9e
0000            168   _PCA0CLR        DATA 0x9c
0000            169   _PCA0CN0        DATA 0xd8
0000            170   _PCA0CPH0       DATA 0xfc
0000            171   _PCA0CPH1       DATA 0xea
0000            172   _PCA0CPH2       DATA 0xec
0000            173   _PCA0CPH3       DATA 0xf5
0000            174   _PCA0CPH4       DATA 0x85
0000            175   _PCA0CPH5       DATA 0xde
0000            176   _PCA0CPL0       DATA 0xfb
0000            177   _PCA0CPL1       DATA 0xe9
0000            178   _PCA0CPL2       DATA 0xeb
0000            179   _PCA0CPL3       DATA 0xf4
0000            180   _PCA0CPL4       DATA 0x84
0000            181   _PCA0CPL5       DATA 0xdd
0000            182   _PCA0CPM0       DATA 0xda
0000            183   _PCA0CPM1       DATA 0xdb
0000            184   _PCA0CPM2       DATA 0xdc
0000            185   _PCA0CPM3       DATA 0xae
0000            186   _PCA0CPM4       DATA 0xaf
0000            187   _PCA0CPM5       DATA 0xcc
0000            188   _PCA0H          DATA 0xfa
0000            189   _PCA0L          DATA 0xf9
0000            190   _PCA0MD         DATA 0xd9
0000            191   _PCA0POL        DATA 0x96
0000            192   _PCA0PWM        DATA 0xf7
0000            193   _PCON0          DATA 0x87
0000            194   _PCON1          DATA 0xcd
0000            195   _PFE0CN         DATA 0xc1
0000            196   _PRTDRV         DATA 0xf6
0000            197   _PSCTL          DATA 0x8f
0000            198   _PSTAT0         DATA 0xaa
0000            199   _PSW            DATA 0xd0
0000            200   _REF0CN         DATA 0xd1
0000            201   _REG0CN         DATA 0xc9
0000            202   _REVID          DATA 0xb6
0000            203   _RSTSRC         DATA 0xef
0000            204   _SBCON1         DATA 0x94
0000            205   _SBRLH1         DATA 0x96
0000            206   _SBRLL1         DATA 0x95
0000            207   _SBUF           DATA 0x99
0000            208   _SBUF0          DATA 0x99
0000            209   _SBUF1          DATA 0x92
0000            210   _SCON           DATA 0x98
0000            211   _SCON0          DATA 0x98
0000            212   _SCON1          DATA 0xc8
0000            213   _SFRPAGE        DATA 0xa7
0000            214   _SFRPGCN        DATA 0xbc
0000            215   _SFRSTACK       DATA 0xd7
0000            216   _SMB0ADM        DATA 0xd6
0000            217   _SMB0ADR        DATA 0xd7
0000            218   _SMB0CF         DATA 0xc1
0000            219   _SMB0CN0        DATA 0xc0
0000            220   _SMB0DAT        DATA 0xc2
0000            221   _SMB0FCN0       DATA 0xc3
0000            222   _SMB0FCN1       DATA 0xc4
0000            223   _SMB0FCT        DATA 0xef
0000            224   _SMB0RXLN       DATA 0xc5
0000            225   _SMB0TC         DATA 0xac
0000            226   _SMOD1          DATA 0x93
0000            227   _SP             DATA 0x81
0000            228   _SPI0CFG        DATA 0xa1
0000            229   _SPI0CKR        DATA 0xa2
0000            230   _SPI0CN0        DATA 0xf8
0000            231   _SPI0DAT        DATA 0xa3
0000            232   _SPI0FCN0       DATA 0x9a
0000            233   _SPI0FCN1       DATA 0x9b
0000            234   _SPI0FCT        DATA 0xf7
0000            235   _SPI0PCF        DATA 0xdf
0000            236   _TCON           DATA 0x88
0000            237   _TH0            DATA 0x8c
0000            238   _TH1            DATA 0x8d
0000            239   _TL0            DATA 0x8a
0000            240   _TL1            DATA 0x8b
0000            241   _TMOD           DATA 0x89
0000            242   _TMR2CN0        DATA 0xc8
0000            243   _TMR2CN1        DATA 0xfd
0000            244   _TMR2H          DATA 0xcf
0000            245   _TMR2L          DATA 0xce
0000            246   _TMR2RLH        DATA 0xcb
0000            247   _TMR2RLL        DATA 0xca
0000            248   _TMR3CN0        DATA 0x91
0000            249   _TMR3CN1        DATA 0xfe
0000            250   _TMR3H          DATA 0x95
0000            251   _TMR3L          DATA 0x94
0000            252   _TMR3RLH        DATA 0x93
0000            253   _TMR3RLL        DATA 0x92
0000            254   _TMR4CN0        DATA 0x98
0000            255   _TMR4CN1        DATA 0xff
0000            256   _TMR4H          DATA 0xa5
0000            257   _TMR4L          DATA 0xa4
0000            258   _TMR4RLH        DATA 0xa3
0000            259   _TMR4RLL        DATA 0xa2
0000            260   _TMR5CN0        DATA 0xc0
0000            261   _TMR5CN1        DATA 0xf1
0000            262   _TMR5H          DATA 0xd5
0000            263   _TMR5L          DATA 0xd4
0000            264   _TMR5RLH        DATA 0xd3
0000            265   _TMR5RLL        DATA 0xd2
0000            266   _UART0PCF       DATA 0xd9
0000            267   _UART1FCN0      DATA 0x9d
0000            268   _UART1FCN1      DATA 0xd8
0000            269   _UART1FCT       DATA 0xfa
0000            270   _UART1LIN       DATA 0x9e
0000            271   _UART1PCF       DATA 0xda
0000            272   _VDM0CN         DATA 0xff
0000            273   _WDTCN          DATA 0x97
0000            274   _XBR0           DATA 0xe1
0000            275   _XBR1           DATA 0xe2
0000            276   _XBR2           DATA 0xe3
0000            277   _XOSC0CN        DATA 0x86
0000            278   _DPTR           DATA 0x8382
0000            279   _TMR2RL         DATA 0xcbca
0000            280   _TMR3RL         DATA 0x9392
0000            281   _TMR4RL         DATA 0xa3a2
0000            282   _TMR5RL         DATA 0xd3d2
0000            283   _TMR0           DATA 0x8c8a
0000            284   _TMR1           DATA 0x8d8b
0000            285   _TMR2           DATA 0xcfce
0000            286   _TMR3           DATA 0x9594
0000            287   _TMR4           DATA 0xa5a4
0000            288   _TMR5           DATA 0xd5d4
0000            289   _SBRL1          DATA 0x9695
0000            290   _PCA0           DATA 0xfaf9
0000            291   _PCA0CP0        DATA 0xfcfb
0000            292   _PCA0CP1        DATA 0xeae9
0000            293   _PCA0CP2        DATA 0xeceb
0000            294   _PCA0CP3        DATA 0xf5f4
0000            295   _PCA0CP4        DATA 0x8584
0000            296   _PCA0CP5        DATA 0xdedd
0000            297   _ADC0ASA        DATA 0xb6b5
0000            298   _ADC0GT         DATA 0xc4c3
0000            299   _ADC0           DATA 0xbebd
0000            300   _ADC0LT         DATA 0xc6c5
0000            301   _DAC0           DATA 0x8584
0000            302   _DAC1           DATA 0x8a89
0000            303   _DAC2           DATA 0x8c8b
0000            304   _DAC3           DATA 0x8e8d
0000            305   ;--------------------------------------------------------
0000            306   ; special function bits
0000            307   ;--------------------------------------------------------
0000            308   _ACC_0          BIT 0xe0
0000            309   _ACC_1          BIT 0xe1
0000            310   _ACC_2          BIT 0xe2
0000            311   _ACC_3          BIT 0xe3
0000            312   _ACC_4          BIT 0xe4
0000            313   _ACC_5          BIT 0xe5
0000            314   _ACC_6          BIT 0xe6
0000            315   _ACC_7          BIT 0xe7
0000            316   _TEMPE          BIT 0xe8
0000            317   _ADGN0          BIT 0xe9
0000            318   _ADGN1          BIT 0xea
0000            319   _ADWINT         BIT 0xeb
0000            320   _ADBUSY         BIT 0xec
0000            321   _ADINT          BIT 0xed
0000            322   _IPOEN          BIT 0xee
0000            323   _ADEN           BIT 0xef
0000            324   _B_0            BIT 0xf0
0000            325   _B_1            BIT 0xf1
0000            326   _B_2            BIT 0xf2
0000            327   _B_3            BIT 0xf3
0000            328   _B_4            BIT 0xf4
0000            329   _B_5            BIT 0xf5
0000            330   _B_6            BIT 0xf6
0000            331   _B_7            BIT 0xf7
0000            332   _C0FIF          BIT 0xe8
0000            333   _C0RIF          BIT 0xe9
0000            334   _C1FIF          BIT 0xea
0000            335   _C1RIF          BIT 0xeb
0000            336   _C2FIF          BIT 0xec
0000            337   _C2RIF          BIT 0xed
0000            338   _C3FIF          BIT 0xee
0000            339   _C3RIF          BIT 0xef
0000            340   _D1SRC0         BIT 0x88
0000            341   _D1SRC1         BIT 0x89
0000            342   _D1AMEN         BIT 0x8a
0000            343   _D01REFSL       BIT 0x8b
0000            344   _D3SRC0         BIT 0x8c
0000            345   _D3SRC1         BIT 0x8d
0000            346   _D3AMEN         BIT 0x8e
0000            347   _D23REFSL       BIT 0x8f
0000            348   _D0UDIS         BIT 0x98
0000            349   _D1UDIS         BIT 0x99
0000            350   _D2UDIS         BIT 0x9a
0000            351   _D3UDIS         BIT 0x9b
0000            352   _EX0            BIT 0xa8
0000            353   _ET0            BIT 0xa9
0000            354   _EX1            BIT 0xaa
0000            355   _ET1            BIT 0xab
0000            356   _ES0            BIT 0xac
0000            357   _ET2            BIT 0xad
0000            358   _ESPI0          BIT 0xae
0000            359   _EA             BIT 0xaf
0000            360   _PX0            BIT 0xb8
0000            361   _PT0            BIT 0xb9
0000            362   _PX1            BIT 0xba
0000            363   _PT1            BIT 0xbb
0000            364   _PS0            BIT 0xbc
0000            365   _PT2            BIT 0xbd
0000            366   _PSPI0          BIT 0xbe
0000            367   _P0_0           BIT 0x80
0000            368   _P0_1           BIT 0x81
0000            369   _P0_2           BIT 0x82
0000            370   _P0_3           BIT 0x83
0000            371   _P0_4           BIT 0x84
0000            372   _P0_5           BIT 0x85
0000            373   _P0_6           BIT 0x86
0000            374   _P0_7           BIT 0x87
0000            375   _P1_0           BIT 0x90
0000            376   _P1_1           BIT 0x91
0000            377   _P1_2           BIT 0x92
0000            378   _P1_3           BIT 0x93
0000            379   _P1_4           BIT 0x94
0000            380   _P1_5           BIT 0x95
0000            381   _P1_6           BIT 0x96
0000            382   _P1_7           BIT 0x97
0000            383   _P2_0           BIT 0xa0
0000            384   _P2_1           BIT 0xa1
0000            385   _P2_2           BIT 0xa2
0000            386   _P2_3           BIT 0xa3
0000            387   _P2_4           BIT 0xa4
0000            388   _P2_5           BIT 0xa5
0000            389   _P2_6           BIT 0xa6
0000            390   _P3_0           BIT 0xb0
0000            391   _P3_1           BIT 0xb1
0000            392   _P3_2           BIT 0xb2
0000            393   _P3_3           BIT 0xb3
0000            394   _P3_4           BIT 0xb4
0000            395   _P3_7           BIT 0xb7
0000            396   _CCF0           BIT 0xd8
0000            397   _CCF1           BIT 0xd9
0000            398   _CCF2           BIT 0xda
0000            399   _CCF3           BIT 0xdb
0000            400   _CCF4           BIT 0xdc
0000            401   _CCF5           BIT 0xdd
0000            402   _CR             BIT 0xde
0000            403   _CF             BIT 0xdf
0000            404   _PARITY         BIT 0xd0
0000            405   _F1             BIT 0xd1
0000            406   _OV             BIT 0xd2
0000            407   _RS0            BIT 0xd3
0000            408   _RS1            BIT 0xd4
0000            409   _F0             BIT 0xd5
0000            410   _AC             BIT 0xd6
0000            411   _CY             BIT 0xd7
0000            412   _RI             BIT 0x98
0000            413   _TI             BIT 0x99
0000            414   _RB8            BIT 0x9a
0000            415   _TB8            BIT 0x9b
0000            416   _REN            BIT 0x9c
0000            417   _CE             BIT 0x9d
0000            418   _SMODE          BIT 0x9e
0000            419   _RI1            BIT 0xc8
0000            420   _TI1            BIT 0xc9
0000            421   _RBX1           BIT 0xca
0000            422   _TBX1           BIT 0xcb
0000            423   _REN1           BIT 0xcc
0000            424   _PERR1          BIT 0xcd
0000            425   _OVR1           BIT 0xce
0000            426   _SI             BIT 0xc0
0000            427   _ACK            BIT 0xc1
0000            428   _ARBLOST        BIT 0xc2
0000            429   _ACKRQ          BIT 0xc3
0000            430   _STO            BIT 0xc4
0000            431   _STA            BIT 0xc5
0000            432   _TXMODE         BIT 0xc6
0000            433   _MASTER         BIT 0xc7
0000            434   _SPIEN          BIT 0xf8
0000            435   _TXNF           BIT 0xf9
0000            436   _NSSMD0         BIT 0xfa
0000            437   _NSSMD1         BIT 0xfb
0000            438   _RXOVRN         BIT 0xfc
0000            439   _MODF           BIT 0xfd
0000            440   _WCOL           BIT 0xfe
0000            441   _SPIF           BIT 0xff
0000            442   _IT0            BIT 0x88
0000            443   _IE0            BIT 0x89
0000            444   _IT1            BIT 0x8a
0000            445   _IE1            BIT 0x8b
0000            446   _TR0            BIT 0x8c
0000            447   _TF0            BIT 0x8d
0000            448   _TR1            BIT 0x8e
0000            449   _TF1            BIT 0x8f
0000            450   _T2XCLK0        BIT 0xc8
0000            451   _T2XCLK1        BIT 0xc9
0000            452   _TR2            BIT 0xca
0000            453   _T2SPLIT        BIT 0xcb
0000            454   _TF2CEN         BIT 0xcc
0000            455   _TF2LEN         BIT 0xcd
0000            456   _TF2L           BIT 0xce
0000            457   _TF2H           BIT 0xcf
0000            458   _T4XCLK0        BIT 0x98
0000            459   _T4XCLK1        BIT 0x99
0000            460   _TR4            BIT 0x9a
0000            461   _T4SPLIT        BIT 0x9b
0000            462   _TF4CEN         BIT 0x9c
0000            463   _TF4LEN         BIT 0x9d
0000            464   _TF4L           BIT 0x9e
0000            465   _TF4H           BIT 0x9f
0000            466   _T5XCLK0        BIT 0xc0
0000            467   _T5XCLK1        BIT 0xc1
0000            468   _TR5            BIT 0xc2
0000            469   _T5SPLIT        BIT 0xc3
0000            470   _TF5CEN         BIT 0xc4
0000            471   _TF5LEN         BIT 0xc5
0000            472   _TF5L           BIT 0xc6
0000            473   _TF5H           BIT 0xc7
0000            474   _RIE            BIT 0xd8
0000            475   _RXTO0          BIT 0xd9
0000            476   _RXTO1          BIT 0xda
0000            477   _RFRQ           BIT 0xdb
0000            478   _TIE            BIT 0xdc
0000            479   _TXHOLD         BIT 0xdd
0000            480   _TXNF1          BIT 0xde
0000            481   _TFRQ           BIT 0xdf
0000            482   ;--------------------------------------------------------
0000            483   ; overlayable register banks
0000            484   ;--------------------------------------------------------
0000            485            rbank0 segment data overlay
0000            486   ;--------------------------------------------------------
0000            487   ; internal ram data
0000            488   ;--------------------------------------------------------
0000            489            rseg R_DSEG
0000            490   _getstr1_PARM_2:
0000            491            ds 1
0001            492   ;--------------------------------------------------------
0001            493   ; overlayable items in internal ram 
0001            494   ;--------------------------------------------------------
0000            495            rseg    R_OSEG
0000            496            rseg    R_OSEG
0000            497            rseg    R_OSEG
0000            498   ;--------------------------------------------------------
0000            499   ; indirectly addressable internal ram data
0000            500   ;--------------------------------------------------------
0000            501            rseg R_ISEG
0000            502   _buff:
0000            503            ds 20
0014            504   ;--------------------------------------------------------
0014            505   ; absolute internal ram data
0014            506   ;--------------------------------------------------------
0000            507            DSEG
0000            508   ;--------------------------------------------------------
0000            509   ; bit data
0000            510   ;--------------------------------------------------------
0000            511            rseg R_BSEG
0000            512   ;--------------------------------------------------------
0000            513   ; paged external ram data
0000            514   ;--------------------------------------------------------
0000            515            rseg R_PSEG
0000            516   ;--------------------------------------------------------
0000            517   ; external ram data
0000            518   ;--------------------------------------------------------
0000            519            rseg R_XSEG
0000            520   ;--------------------------------------------------------
0000            521   ; absolute external ram data
0000            522   ;--------------------------------------------------------
0000            523            XSEG
0000            524   ;--------------------------------------------------------
0000            525   ; external initialized ram data
0000            526   ;--------------------------------------------------------
0000            527            rseg R_IXSEG
0000            528            rseg R_HOME
0000            529            rseg R_GSINIT
0000            530            rseg R_CSEG
0000            531   ;--------------------------------------------------------
0000            532   ; Reset entry point and interrupt vectors
0000            533   ;--------------------------------------------------------
0000            534            CSEG at 0x0000
0000 020000     535            ljmp    _crt0
0003            536   ;--------------------------------------------------------
0003            537   ; global & static initialisations
0003            538   ;--------------------------------------------------------
0000            539            rseg R_HOME
0000            540            rseg R_GSINIT
0000            541            rseg R_GSINIT
0000            542   ;--------------------------------------------------------
0000            543   ; data variables initialization
0000            544   ;--------------------------------------------------------
0000            545            rseg R_DINIT
0000            546            ; The linker places a 'ret' at the end of segment R_DINIT.
0000            547   ;--------------------------------------------------------
0000            548   ; code
0000            549   ;--------------------------------------------------------
0000            550            rseg R_CSEG
0000            551   ;------------------------------------------------------------
0000            552   ;Allocation info for local variables in function '_c51_external_startup'
0000            553   ;------------------------------------------------------------
0000            554   ;------------------------------------------------------------
0000            555   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:13: char _c51_external_startup (void)
0000            556   ;        -----------------------------------------
0000            557   ;         function _c51_external_startup
0000            558   ;        -----------------------------------------
0000            559   __c51_external_startup:
0000            560            using   0
0000            561   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:16: SFRPAGE = 0x00;
0000 75A700     562            mov     _SFRPAGE,#0x00
0003            563   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:17: WDTCN = 0xDE; //First key
0003 7597DE     564            mov     _WDTCN,#0xDE
0006            565   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:18: WDTCN = 0xAD; //Second key
0006 7597AD     566            mov     _WDTCN,#0xAD
0009            567   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:20: VDM0CN=0x80;       // enable VDD monitor
0009 75FF80     568            mov     _VDM0CN,#0x80
000C            569   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:21: RSTSRC=0x02|0x04;  // Enable reset on missing clock detector and VDD
000C 75EF06     570            mov     _RSTSRC,#0x06
000F            571   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:28: SFRPAGE = 0x10;
000F 75A710     572            mov     _SFRPAGE,#0x10
0012            573   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:29: PFE0CN  = 0x20; // SYSCLK < 75 MHz.
0012 75C120     574            mov     _PFE0CN,#0x20
0015            575   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:30: SFRPAGE = 0x00;
0015 75A700     576            mov     _SFRPAGE,#0x00
0018            577   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:51: CLKSEL = 0x00;
0018 75A900     578            mov     _CLKSEL,#0x00
001B            579   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:52: CLKSEL = 0x00;
001B 75A900     580            mov     _CLKSEL,#0x00
001E            581   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:53: while ((CLKSEL & 0x80) == 0);
001E            582   L002001?:
001E E5A9       583            mov     a,_CLKSEL
0020 30E790     584            jnb     acc.7,L002001?
0023            585   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:54: CLKSEL = 0x03;
0023 75A903     586            mov     _CLKSEL,#0x03
0026            587   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:55: CLKSEL = 0x03;
0026 75A903     588            mov     _CLKSEL,#0x03
0029            589   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:56: while ((CLKSEL & 0x80) == 0);
0029            590   L002004?:
0029 E5A9       591            mov     a,_CLKSEL
002B 30E710     592            jnb     acc.7,L002004?
002E            593   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:61: P0MDOUT |= 0x11; // Enable UART0 TX (P0.4) and UART1 TX (P0.0) as push-pull outputs
002E 43A411     594            orl     _P0MDOUT,#0x11
0031            595   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:62: P2MDOUT |= 0x01; // P2.0 in push-pull mode
0031 43A601     596            orl     _P2MDOUT,#0x01
0034            597   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:63: XBR0     = 0x01; // Enable UART0 on P0.4(TX) and P0.5(RX)                     
0034 75E101     598            mov     _XBR0,#0x01
0037            599   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:64: XBR1     = 0X00;
0037 75E200     600            mov     _XBR1,#0x00
003A            601   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:65: XBR2     = 0x41; // Enable crossbar and uart 1
003A 75E341     602            mov     _XBR2,#0x41
003D            603   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:71: SCON0 = 0x10;
003D 759810     604            mov     _SCON0,#0x10
0040            605   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:72: TH1 = 0x100-((SYSCLK/BAUDRATE)/(2L*12L));
0040 758DE6     606            mov     _TH1,#0xE6
0043            607   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:73: TL1 = TH1;      // Init Timer1
0043 858D8B     608            mov     _TL1,_TH1
0046            609   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:74: TMOD &= ~0xf0;  // TMOD: timer 1 in 8-bit auto-reload
0046 53890F     610            anl     _TMOD,#0x0F
0049            611   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:75: TMOD |=  0x20;                       
0049 438920     612            orl     _TMOD,#0x20
004C            613   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:76: TR1 = 1; // START Timer1
004C D28E       614            setb    _TR1
004E            615   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:77: TI = 1;  // Indicate TX0 ready
004E D299       616            setb    _TI
0050            617   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:79: return 0;
0050 758200     618            mov     dpl,#0x00
0053 22         619            ret
0054            620   ;------------------------------------------------------------
0054            621   ;Allocation info for local variables in function 'Timer3us'
0054            622   ;------------------------------------------------------------
0054            623   ;us                        Allocated to registers r2 
0054            624   ;i                         Allocated to registers r3 
0054            625   ;------------------------------------------------------------
0054            626   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:83: void Timer3us(unsigned char us)
0054            627   ;        -----------------------------------------
0054            628   ;         function Timer3us
0054            629   ;        -----------------------------------------
0054            630   _Timer3us:
0054 AA82       631            mov     r2,dpl
0056            632   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:88: CKCON0|=0b_0100_0000;
0056 438E40     633            orl     _CKCON0,#0x40
0059            634   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:90: TMR3RL = (-(SYSCLK)/1000000L); // Set Timer3 to overflow in 1us.
0059 7592B8     635            mov     _TMR3RL,#0xB8
005C 7593FF     636            mov     (_TMR3RL >> 8),#0xFF
005F            637   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:91: TMR3 = TMR3RL;                 // Initialize Timer3 for first overflow
005F 859294     638            mov     _TMR3,_TMR3RL
0062 859395     639            mov     (_TMR3 >> 8),(_TMR3RL >> 8)
0065            640   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:93: TMR3CN0 = 0x04;                 // Sart Timer3 and clear overflow flag
0065 759104     641            mov     _TMR3CN0,#0x04
0068            642   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:94: for (i = 0; i < us; i++)       // Count <us> overflows
0068 7B00       643            mov     r3,#0x00
006A            644   L003004?:
006A C3         645            clr     c
006B EB         646            mov     a,r3
006C 9A         647            subb    a,r2
006D 5000       648            jnc     L003007?
006F            649   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:96: while (!(TMR3CN0 & 0x80));  // Wait for overflow
006F            650   L003001?:
006F E591       651            mov     a,_TMR3CN0
0071 30E710     652            jnb     acc.7,L003001?
0074            653   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:97: TMR3CN0 &= ~(0x80);         // Clear overflow indicator
0074 53917F     654            anl     _TMR3CN0,#0x7F
0077            655   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:94: for (i = 0; i < us; i++)       // Count <us> overflows
0077 0B         656            inc     r3
0078 8000       657            sjmp    L003004?
007A            658   L003007?:
007A            659   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:99: TMR3CN0 = 0 ;                   // Stop Timer3 and clear overflow flag
007A 759100     660            mov     _TMR3CN0,#0x00
007D 22         661            ret
007E            662   ;------------------------------------------------------------
007E            663   ;Allocation info for local variables in function 'waitms'
007E            664   ;------------------------------------------------------------
007E            665   ;ms                        Allocated to registers r2 r3 
007E            666   ;j                         Allocated to registers r4 r5 
007E            667   ;k                         Allocated to registers r6 
007E            668   ;------------------------------------------------------------
007E            669   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:102: void waitms (unsigned int ms)
007E            670   ;        -----------------------------------------
007E            671   ;         function waitms
007E            672   ;        -----------------------------------------
007E            673   _waitms:
007E AA82       674            mov     r2,dpl
0080 AB83       675            mov     r3,dph
0082            676   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:106: for(j=0; j<ms; j++)
0082 7C00       677            mov     r4,#0x00
0084 7D00       678            mov     r5,#0x00
0086            679   L004005?:
0086 C3         680            clr     c
0087 EC         681            mov     a,r4
0088 9A         682            subb    a,r2
0089 ED         683            mov     a,r5
008A 9B         684            subb    a,r3
008B 5000       685            jnc     L004009?
008D            686   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:107: for (k=0; k<4; k++) Timer3us(250);
008D 7E00       687            mov     r6,#0x00
008F            688   L004001?:
008F BE0450     689            cjne    r6,#0x04,L004018?
0092            690   L004018?:
0092 5000       691            jnc     L004007?
0094 7582FA     692            mov     dpl,#0xFA
0097 C002       693            push    ar2
0099 C003       694            push    ar3
009B C004       695            push    ar4
009D C005       696            push    ar5
009F C006       697            push    ar6
00A1 120000     698            lcall   _Timer3us
00A4 D006       699            pop     ar6
00A6 D005       700            pop     ar5
00A8 D004       701            pop     ar4
00AA D003       702            pop     ar3
00AC D002       703            pop     ar2
00AE 0E         704            inc     r6
00AF 8000       705            sjmp    L004001?
00B1            706   L004007?:
00B1            707   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:106: for(j=0; j<ms; j++)
00B1 0C         708            inc     r4
00B2 BC0090     709            cjne    r4,#0x00,L004005?
00B5 0D         710            inc     r5
00B6 8000       711            sjmp    L004005?
00B8            712   L004009?:
00B8 22         713            ret
00B9            714   ;------------------------------------------------------------
00B9            715   ;Allocation info for local variables in function 'UART1_Init'
00B9            716   ;------------------------------------------------------------
00B9            717   ;baudrate                  Allocated to registers r2 r3 r4 r5 
00B9            718   ;------------------------------------------------------------
00B9            719   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:110: void UART1_Init (unsigned long baudrate)
00B9            720   ;        -----------------------------------------
00B9            721   ;         function UART1_Init
00B9            722   ;        -----------------------------------------
00B9            723   _UART1_Init:
00B9 AA82       724            mov     r2,dpl
00BB AB83       725            mov     r3,dph
00BD ACF0       726            mov     r4,b
00BF FD         727            mov     r5,a
00C0            728   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:112: SFRPAGE = 0x20;
00C0 75A720     729            mov     _SFRPAGE,#0x20
00C3            730   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:113: SMOD1 = 0x0C; // no parity, 8 data bits, 1 stop bit
00C3 75930C     731            mov     _SMOD1,#0x0C
00C6            732   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:114: SCON1 = 0x10;
00C6 75C810     733            mov     _SCON1,#0x10
00C9            734   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:115: SBCON1 =0x00;   // disable baud rate generator
00C9 759400     735            mov     _SBCON1,#0x00
00CC            736   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:116: SBRL1 = 0x10000L-((SYSCLK/baudrate)/(12L*2L));
00CC 8A00       737            mov     __divulong_PARM_2,r2
00CE 8B01       738            mov     (__divulong_PARM_2 + 1),r3
00D0 8C02       739            mov     (__divulong_PARM_2 + 2),r4
00D2 8D03       740            mov     (__divulong_PARM_2 + 3),r5
00D4 90A200     741            mov     dptr,#0xA200
00D7 75F04A     742            mov     b,#0x4A
00DA 7404       743            mov     a,#0x04
00DC 120000     744            lcall   __divulong
00DF AA82       745            mov     r2,dpl
00E1 AB83       746            mov     r3,dph
00E3 ACF0       747            mov     r4,b
00E5 FD         748            mov     r5,a
00E6 750018     749            mov     __divulong_PARM_2,#0x18
00E9 E4         750            clr     a
00EA F501       751            mov     (__divulong_PARM_2 + 1),a
00EC F502       752            mov     (__divulong_PARM_2 + 2),a
00EE F503       753            mov     (__divulong_PARM_2 + 3),a
00F0 8A82       754            mov     dpl,r2
00F2 8B83       755            mov     dph,r3
00F4 8CF0       756            mov     b,r4
00F6 ED         757            mov     a,r5
00F7 120000     758            lcall   __divulong
00FA AA82       759            mov     r2,dpl
00FC AB83       760            mov     r3,dph
00FE ACF0       761            mov     r4,b
0100 FD         762            mov     r5,a
0101 E4         763            clr     a
0102 C3         764            clr     c
0103 9A         765            subb    a,r2
0104 FA         766            mov     r2,a
0105 E4         767            clr     a
0106 9B         768            subb    a,r3
0107 FB         769            mov     r3,a
0108 7401       770            mov     a,#0x01
010A 9C         771            subb    a,r4
010B E4         772            clr     a
010C 9D         773            subb    a,r5
010D 8A95       774            mov     _SBRL1,r2
010F 8B96       775            mov     (_SBRL1 >> 8),r3
0111            776   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:117: TI1 = 1; // indicate ready for TX
0111 D2C9       777            setb    _TI1
0113            778   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:118: SBCON1 |= 0x40;   // enable baud rate generator
0113 439440     779            orl     _SBCON1,#0x40
0116            780   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:119: SFRPAGE = 0x00;
0116 75A700     781            mov     _SFRPAGE,#0x00
0119 22         782            ret
011A            783   ;------------------------------------------------------------
011A            784   ;Allocation info for local variables in function 'putchar1'
011A            785   ;------------------------------------------------------------
011A            786   ;c                         Allocated to registers r2 
011A            787   ;------------------------------------------------------------
011A            788   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:122: void putchar1 (char c) 
011A            789   ;        -----------------------------------------
011A            790   ;         function putchar1
011A            791   ;        -----------------------------------------
011A            792   _putchar1:
011A AA82       793            mov     r2,dpl
011C            794   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:124: SFRPAGE = 0x20;
011C 75A720     795            mov     _SFRPAGE,#0x20
011F            796   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:125: while (!TI1);
011F            797   L006001?:
011F            798   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:126: TI1=0;
011F 10C9E0     799            jbc     _TI1,L006008?
0122 8000       800            sjmp    L006001?
0124            801   L006008?:
0124            802   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:127: SBUF1 = c;
0124 8A92       803            mov     _SBUF1,r2
0126            804   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:128: SFRPAGE = 0x00;
0126 75A700     805            mov     _SFRPAGE,#0x00
0129 22         806            ret
012A            807   ;------------------------------------------------------------
012A            808   ;Allocation info for local variables in function 'sendstr1'
012A            809   ;------------------------------------------------------------
012A            810   ;s                         Allocated to registers r2 r3 r4 
012A            811   ;------------------------------------------------------------
012A            812   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:131: void sendstr1 (char * s)
012A            813   ;        -----------------------------------------
012A            814   ;         function sendstr1
012A            815   ;        -----------------------------------------
012A            816   _sendstr1:
012A AA82       817            mov     r2,dpl
012C AB83       818            mov     r3,dph
012E ACF0       819            mov     r4,b
0130            820   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:133: while(*s)
0130            821   L007001?:
0130 8A82       822            mov     dpl,r2
0132 8B83       823            mov     dph,r3
0134 8CF0       824            mov     b,r4
0136 120000     825            lcall   __gptrget
0139 FD         826            mov     r5,a
013A 6000       827            jz      L007004?
013C            828   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:135: putchar1(*s);
013C 8D82       829            mov     dpl,r5
013E C002       830            push    ar2
0140 C003       831            push    ar3
0142 C004       832            push    ar4
0144 120000     833            lcall   _putchar1
0147 D004       834            pop     ar4
0149 D003       835            pop     ar3
014B D002       836            pop     ar2
014D            837   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:136: s++;   
014D 0A         838            inc     r2
014E BA0020     839            cjne    r2,#0x00,L007001?
0151 0B         840            inc     r3
0152 8000       841            sjmp    L007001?
0154            842   L007004?:
0154 22         843            ret
0155            844   ;------------------------------------------------------------
0155            845   ;Allocation info for local variables in function 'getchar1'
0155            846   ;------------------------------------------------------------
0155            847   ;c                         Allocated to registers 
0155            848   ;------------------------------------------------------------
0155            849   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:140: char getchar1 (void)
0155            850   ;        -----------------------------------------
0155            851   ;         function getchar1
0155            852   ;        -----------------------------------------
0155            853   _getchar1:
0155            854   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:143: SFRPAGE = 0x20;
0155 75A720     855            mov     _SFRPAGE,#0x20
0158            856   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:144: while (!RI1);
0158            857   L008001?:
0158            858   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:145: RI1=0;
0158 10C820     859            jbc     _RI1,L008008?
015B 8000       860            sjmp    L008001?
015D            861   L008008?:
015D            862   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:147: SCON1&=0b_0011_1111;
015D 53C83F     863            anl     _SCON1,#0x3F
0160            864   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:148: c = SBUF1;
0160 859282     865            mov     dpl,_SBUF1
0163            866   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:149: SFRPAGE = 0x00;
0163 75A700     867            mov     _SFRPAGE,#0x00
0166            868   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:150: return (c);
0166 22         869            ret
0167            870   ;------------------------------------------------------------
0167            871   ;Allocation info for local variables in function 'getchar1_with_timeout'
0167            872   ;------------------------------------------------------------
0167            873   ;c                         Allocated to registers 
0167            874   ;timeout                   Allocated to registers r2 r3 
0167            875   ;------------------------------------------------------------
0167            876   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:153: char getchar1_with_timeout (void)
0167            877   ;        -----------------------------------------
0167            878   ;         function getchar1_with_timeout
0167            879   ;        -----------------------------------------
0167            880   _getchar1_with_timeout:
0167            881   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:157: SFRPAGE = 0x20;
0167 75A720     882            mov     _SFRPAGE,#0x20
016A            883   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:159: while (!RI1)
016A 7A00       884            mov     r2,#0x00
016C 7B00       885            mov     r3,#0x00
016E            886   L009003?:
016E 20C8A0     887            jb      _RI1,L009005?
0171            888   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:161: SFRPAGE = 0x00;
0171 75A700     889            mov     _SFRPAGE,#0x00
0174            890   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:162: Timer3us(20);
0174 758214     891            mov     dpl,#0x14
0177 C002       892            push    ar2
0179 C003       893            push    ar3
017B 120000     894            lcall   _Timer3us
017E D003       895            pop     ar3
0180 D002       896            pop     ar2
0182            897   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:163: SFRPAGE = 0x20;
0182 75A720     898            mov     _SFRPAGE,#0x20
0185            899   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:164: timeout++;
0185 0A         900            inc     r2
0186 BA00E0     901            cjne    r2,#0x00,L009012?
0189 0B         902            inc     r3
018A            903   L009012?:
018A            904   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:165: if(timeout==25000)
018A BAA860     905            cjne    r2,#0xA8,L009003?
018D BB6160     906            cjne    r3,#0x61,L009003?
0190            907   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:167: SFRPAGE = 0x00;
0190 75A700     908            mov     _SFRPAGE,#0x00
0193            909   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:168: return ('\n'); // Timeout after half second
0193 75820A     910            mov     dpl,#0x0A
0196 22         911            ret
0197            912   L009005?:
0197            913   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:171: RI1=0;
0197 C2C8       914            clr     _RI1
0199            915   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:173: SCON1&=0b_0011_1111;
0199 53C83F     916            anl     _SCON1,#0x3F
019C            917   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:174: c = SBUF1;
019C 859282     918            mov     dpl,_SBUF1
019F            919   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:175: SFRPAGE = 0x00;
019F 75A700     920            mov     _SFRPAGE,#0x00
01A2            921   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:176: return (c);
01A2 22         922            ret
01A3            923   ;------------------------------------------------------------
01A3            924   ;Allocation info for local variables in function 'getstr1'
01A3            925   ;------------------------------------------------------------
01A3            926   ;n                         Allocated with name '_getstr1_PARM_2'
01A3            927   ;s                         Allocated to registers r2 r3 r4 
01A3            928   ;c                         Allocated to registers r1 
01A3            929   ;cnt                       Allocated to registers r5 
01A3            930   ;------------------------------------------------------------
01A3            931   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:179: void getstr1 (char * s, unsigned char n)
01A3            932   ;        -----------------------------------------
01A3            933   ;         function getstr1
01A3            934   ;        -----------------------------------------
01A3            935   _getstr1:
01A3 AA82       936            mov     r2,dpl
01A5 AB83       937            mov     r3,dph
01A7 ACF0       938            mov     r4,b
01A9            939   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:185: while(1)
01A9 7D00       940            mov     r5,#0x00
01AB 8A06       941            mov     ar6,r2
01AD 8B07       942            mov     ar7,r3
01AF 8C00       943            mov     ar0,r4
01B1            944   L010007?:
01B1            945   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:187: c=getchar1_with_timeout();
01B1 C002       946            push    ar2
01B3 C003       947            push    ar3
01B5 C004       948            push    ar4
01B7 C005       949            push    ar5
01B9 C006       950            push    ar6
01BB C007       951            push    ar7
01BD C000       952            push    ar0
01BF 120000     953            lcall   _getchar1_with_timeout
01C2 A982       954            mov     r1,dpl
01C4 D000       955            pop     ar0
01C6 D007       956            pop     ar7
01C8 D006       957            pop     ar6
01CA D005       958            pop     ar5
01CC D004       959            pop     ar4
01CE D003       960            pop     ar3
01D0 D002       961            pop     ar2
01D2            962   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:188: if(c=='\n')
01D2 B90A60     963            cjne    r1,#0x0A,L010002?
01D5            964   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:190: *s=0;
01D5 8A82       965            mov     dpl,r2
01D7 8B83       966            mov     dph,r3
01D9 8CF0       967            mov     b,r4
01DB E4         968            clr     a
01DC            969   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:191: return;
01DC 020000     970            ljmp    __gptrput
01DF            971   L010002?:
01DF            972   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:194: if (cnt<n)
01DF C3         973            clr     c
01E0 ED         974            mov     a,r5
01E1 9530       975            subb    a,_getstr1_PARM_2
01E3 5000       976            jnc     L010004?
01E5            977   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:196: cnt++;
01E5 0D         978            inc     r5
01E6            979   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:197: *s=c;
01E6 8E82       980            mov     dpl,r6
01E8 8F83       981            mov     dph,r7
01EA 88F0       982            mov     b,r0
01EC E9         983            mov     a,r1
01ED 120000     984            lcall   __gptrput
01F0 A3         985            inc     dptr
01F1 AE82       986            mov     r6,dpl
01F3 AF83       987            mov     r7,dph
01F5            988   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:198: s++;
01F5 8E02       989            mov     ar2,r6
01F7 8F03       990            mov     ar3,r7
01F9 8804       991            mov     ar4,r0
01FB 8000       992            sjmp    L010007?
01FD            993   L010004?:
01FD            994   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:202: *s=0;
01FD 8A82       995            mov     dpl,r2
01FF 8B83       996            mov     dph,r3
0201 8CF0       997            mov     b,r4
0203 E4         998            clr     a
0204            999   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:203: return;
0204 020000    1000            ljmp    __gptrput
0207           1001   ;------------------------------------------------------------
0207           1002   ;Allocation info for local variables in function 'RXU1'
0207           1003   ;------------------------------------------------------------
0207           1004   ;------------------------------------------------------------
0207           1005   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:209: bit RXU1 (void)
0207           1006   ;        -----------------------------------------
0207           1007   ;         function RXU1
0207           1008   ;        -----------------------------------------
0207           1009   _RXU1:
0207           1010   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:212: SFRPAGE = 0x20;
0207 75A720    1011            mov     _SFRPAGE,#0x20
020A           1012   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:213: mybit=RI1;
020A A2C8      1013            mov     c,_RI1
020C           1014   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:214: SFRPAGE = 0x00;
020C 75A700    1015            mov     _SFRPAGE,#0x00
020F           1016   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:215: return mybit;
020F 22        1017            ret
0210           1018   ;------------------------------------------------------------
0210           1019   ;Allocation info for local variables in function 'waitms_or_RI1'
0210           1020   ;------------------------------------------------------------
0210           1021   ;ms                        Allocated to registers r2 r3 
0210           1022   ;j                         Allocated to registers r4 r5 
0210           1023   ;k                         Allocated to registers r6 
0210           1024   ;------------------------------------------------------------
0210           1025   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:218: void waitms_or_RI1 (unsigned int ms)
0210           1026   ;        -----------------------------------------
0210           1027   ;         function waitms_or_RI1
0210           1028   ;        -----------------------------------------
0210           1029   _waitms_or_RI1:
0210 AA82      1030            mov     r2,dpl
0212 AB83      1031            mov     r3,dph
0214           1032   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:222: for(j=0; j<ms; j++)
0214 7C00      1033            mov     r4,#0x00
0216 7D00      1034            mov     r5,#0x00
0218           1035   L012007?:
0218 C3        1036            clr     c
0219 EC        1037            mov     a,r4
021A 9A        1038            subb    a,r2
021B ED        1039            mov     a,r5
021C 9B        1040            subb    a,r3
021D 5000      1041            jnc     L012011?
021F           1042   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:224: for (k=0; k<4; k++)
021F 7E00      1043            mov     r6,#0x00
0221           1044   L012003?:
0221 BE04E0    1045            cjne    r6,#0x04,L012019?
0224           1046   L012019?:
0224 5000      1047            jnc     L012009?
0226           1048   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:226: if(RXU1()) return;
0226 C002      1049            push    ar2
0228 C003      1050            push    ar3
022A C004      1051            push    ar4
022C C005      1052            push    ar5
022E C006      1053            push    ar6
0230 120000    1054            lcall   _RXU1
0233 E4        1055            clr     a
0234 33        1056            rlc     a
0235 D006      1057            pop     ar6
0237 D005      1058            pop     ar5
0239 D004      1059            pop     ar4
023B D003      1060            pop     ar3
023D D002      1061            pop     ar2
023F 6000      1062            jz      L012002?
0241 22        1063            ret
0242           1064   L012002?:
0242           1065   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:227: Timer3us(250);
0242 7582FA    1066            mov     dpl,#0xFA
0245 C002      1067            push    ar2
0247 C003      1068            push    ar3
0249 C004      1069            push    ar4
024B C005      1070            push    ar5
024D C006      1071            push    ar6
024F 120000    1072            lcall   _Timer3us
0252 D006      1073            pop     ar6
0254 D005      1074            pop     ar5
0256 D004      1075            pop     ar4
0258 D003      1076            pop     ar3
025A D002      1077            pop     ar2
025C           1078   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:224: for (k=0; k<4; k++)
025C 0E        1079            inc     r6
025D 8000      1080            sjmp    L012003?
025F           1081   L012009?:
025F           1082   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:222: for(j=0; j<ms; j++)
025F 0C        1083            inc     r4
0260 BC0020    1084            cjne    r4,#0x00,L012007?
0263 0D        1085            inc     r5
0264 8000      1086            sjmp    L012007?
0266           1087   L012011?:
0266 22        1088            ret
0267           1089   ;------------------------------------------------------------
0267           1090   ;Allocation info for local variables in function 'SendATCommand'
0267           1091   ;------------------------------------------------------------
0267           1092   ;s                         Allocated to registers r2 r3 r4 
0267           1093   ;------------------------------------------------------------
0267           1094   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:232: void SendATCommand (char * s)
0267           1095   ;        -----------------------------------------
0267           1096   ;         function SendATCommand
0267           1097   ;        -----------------------------------------
0267           1098   _SendATCommand:
0267 AA82      1099            mov     r2,dpl
0269 AB83      1100            mov     r3,dph
026B ACF0      1101            mov     r4,b
026D           1102   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:234: printf("Command: %s", s);
026D C002      1103            push    ar2
026F C003      1104            push    ar3
0271 C004      1105            push    ar4
0273 C002      1106            push    ar2
0275 C003      1107            push    ar3
0277 C004      1108            push    ar4
0279 74A0      1109            mov     a,#__str_0
027B C0E0      1110            push    acc
027D 74BE      1111            mov     a,#(__str_0 >> 8)
027F C0E0      1112            push    acc
0281 7480      1113            mov     a,#0x80
0283 C0E0      1114            push    acc
0285 120000    1115            lcall   _printf
0288 E581      1116            mov     a,sp
028A 24FA      1117            add     a,#0xfa
028C F581      1118            mov     sp,a
028E           1119   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:235: P2_0=0; // 'set' pin to 0 is 'AT' mode.
028E C2A0      1120            clr     _P2_0
0290           1121   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:236: waitms(5);
0290 900005    1122            mov     dptr,#0x0005
0293 120000    1123            lcall   _waitms
0296 D004      1124            pop     ar4
0298 D003      1125            pop     ar3
029A D002      1126            pop     ar2
029C           1127   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:237: sendstr1(s);
029C 8A82      1128            mov     dpl,r2
029E 8B83      1129            mov     dph,r3
02A0 8CF0      1130            mov     b,r4
02A2 120000    1131            lcall   _sendstr1
02A5           1132   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:238: getstr1(buff, sizeof(buff)-1);
02A5 753013    1133            mov     _getstr1_PARM_2,#0x13
02A8 9014F0    1134            mov     dptr,#_buff
02AB 75F040    1135            mov     b,#0x40
02AE 120000    1136            lcall   _getstr1
02B1           1137   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:239: waitms(10);
02B1 90000A    1138            mov     dptr,#0x000A
02B4 120000    1139            lcall   _waitms
02B7           1140   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:240: P2_0=1; // 'set' pin to 1 is normal operation mode.
02B7 D2A0      1141            setb    _P2_0
02B9           1142   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:241: printf("Response: %s\r\n", buff);
02B9 74F0      1143            mov     a,#_buff
02BB C0E0      1144            push    acc
02BD 7414      1145            mov     a,#(_buff >> 8)
02BF C0E0      1146            push    acc
02C1 7440      1147            mov     a,#0x40
02C3 C0E0      1148            push    acc
02C5 7460      1149            mov     a,#__str_1
02C7 C0E0      1150            push    acc
02C9 74BF      1151            mov     a,#(__str_1 >> 8)
02CB C0E0      1152            push    acc
02CD 7480      1153            mov     a,#0x80
02CF C0E0      1154            push    acc
02D1 120000    1155            lcall   _printf
02D4 E581      1156            mov     a,sp
02D6 24FA      1157            add     a,#0xfa
02D8 F581      1158            mov     sp,a
02DA 22        1159            ret
02DB           1160   ;------------------------------------------------------------
02DB           1161   ;Allocation info for local variables in function 'ReceptionOff'
02DB           1162   ;------------------------------------------------------------
02DB           1163   ;------------------------------------------------------------
02DB           1164   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:244: void ReceptionOff (void)
02DB           1165   ;        -----------------------------------------
02DB           1166   ;         function ReceptionOff
02DB           1167   ;        -----------------------------------------
02DB           1168   _ReceptionOff:
02DB           1169   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:246: P2_0=0; // 'set' pin to 0 is 'AT' mode.
02DB C2A0      1170            clr     _P2_0
02DD           1171   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:247: waitms(10);
02DD 90000A    1172            mov     dptr,#0x000A
02E0 120000    1173            lcall   _waitms
02E3           1174   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:248: sendstr1("AT+DVID0000\r\n"); // Some unused id, so that we get nothing in RXD1.
02E3 90BFA0    1175            mov     dptr,#__str_2
02E6 75F080    1176            mov     b,#0x80
02E9 120000    1177            lcall   _sendstr1
02EC           1178   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:249: waitms(10);
02EC 90000A    1179            mov     dptr,#0x000A
02EF 120000    1180            lcall   _waitms
02F2           1181   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:251: SCON1&=0b_0011_1111;
02F2 53C83F    1182            anl     _SCON1,#0x3F
02F5           1183   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:252: P2_0=1; // 'set' pin to 1 is normal operation mode.
02F5 D2A0      1184            setb    _P2_0
02F7 22        1185            ret
02F8           1186   ;------------------------------------------------------------
02F8           1187   ;Allocation info for local variables in function 'main'
02F8           1188   ;------------------------------------------------------------
02F8           1189   ;timeout_cnt               Allocated to registers r6 r7 
02F8           1190   ;cont1                     Allocated to registers r2 r3 
02F8           1191   ;cont2                     Allocated to registers r4 r5 
02F8           1192   ;------------------------------------------------------------
02F8           1193   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:255: void main (void)
02F8           1194   ;        -----------------------------------------
02F8           1195   ;         function main
02F8           1196   ;        -----------------------------------------
02F8           1197   _main:
02F8           1198   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:258: int cont1=0, cont2=100;
02F8 7A00      1199            mov     r2,#0x00
02FA 7B00      1200            mov     r3,#0x00
02FC 7C64      1201            mov     r4,#0x64
02FE 7D00      1202            mov     r5,#0x00
0300           1203   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:260: waitms(500);
0300 9001F4    1204            mov     dptr,#0x01F4
0303 C002      1205            push    ar2
0305 C003      1206            push    ar3
0307 C004      1207            push    ar4
0309 C005      1208            push    ar5
030B 120000    1209            lcall   _waitms
030E           1210   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:261: printf("\r\nEFM8LB12 JDY-40 Master Test.\r\n");
030E 74E8      1211            mov     a,#__str_3
0310 C0E0      1212            push    acc
0312 74BF      1213            mov     a,#(__str_3 >> 8)
0314 C0E0      1214            push    acc
0316 7480      1215            mov     a,#0x80
0318 C0E0      1216            push    acc
031A 120000    1217            lcall   _printf
031D 1581      1218            dec     sp
031F 1581      1219            dec     sp
0321 1581      1220            dec     sp
0323           1221   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:262: UART1_Init(9600);
0323 902580    1222            mov     dptr,#0x2580
0326 E4        1223            clr     a
0327 F5F0      1224            mov     b,a
0329 120000    1225            lcall   _UART1_Init
032C           1226   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:276: ReceptionOff();
032C 120000    1227            lcall   _ReceptionOff
032F           1228   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:279: SendATCommand("AT+VER\r\n");
032F 90C028    1229            mov     dptr,#__str_4
0332 75F080    1230            mov     b,#0x80
0335 120000    1231            lcall   _SendATCommand
0338           1232   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:280: SendATCommand("AT+BAUD\r\n");
0338 90C068    1233            mov     dptr,#__str_5
033B 75F080    1234            mov     b,#0x80
033E 120000    1235            lcall   _SendATCommand
0341           1236   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:281: SendATCommand("AT+RFID\r\n");
0341 90C0A8    1237            mov     dptr,#__str_6
0344 75F080    1238            mov     b,#0x80
0347 120000    1239            lcall   _SendATCommand
034A           1240   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:282: SendATCommand("AT+DVID\r\n");
034A 90C0E8    1241            mov     dptr,#__str_7
034D 75F080    1242            mov     b,#0x80
0350 120000    1243            lcall   _SendATCommand
0353           1244   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:283: SendATCommand("AT+RFC\r\n");
0353 90C128    1245            mov     dptr,#__str_8
0356 75F080    1246            mov     b,#0x80
0359 120000    1247            lcall   _SendATCommand
035C           1248   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:284: SendATCommand("AT+POWE\r\n");
035C 90C168    1249            mov     dptr,#__str_9
035F 75F080    1250            mov     b,#0x80
0362 120000    1251            lcall   _SendATCommand
0365           1252   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:285: SendATCommand("AT+CLSS\r\n");
0365 90C1A8    1253            mov     dptr,#__str_10
0368 75F080    1254            mov     b,#0x80
036B 120000    1255            lcall   _SendATCommand
036E           1256   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:289: SendATCommand("AT+DVIDABBA\r\n");
036E 90C1E8    1257            mov     dptr,#__str_11
0371 75F080    1258            mov     b,#0x80
0374 120000    1259            lcall   _SendATCommand
0377 D005      1260            pop     ar5
0379 D004      1261            pop     ar4
037B D003      1262            pop     ar3
037D D002      1263            pop     ar2
037F           1264   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:291: while(1)
037F           1265   L015019?:
037F           1266   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:293: sprintf(buff, "%03d,%03d\n", cont1, cont2); // Construct a test message
037F C002      1267            push    ar2
0381 C003      1268            push    ar3
0383 C004      1269            push    ar4
0385 C005      1270            push    ar5
0387 C004      1271            push    ar4
0389 C005      1272            push    ar5
038B C002      1273            push    ar2
038D C003      1274            push    ar3
038F 7468      1275            mov     a,#__str_12
0391 C0E0      1276            push    acc
0393 74C2      1277            mov     a,#(__str_12 >> 8)
0395 C0E0      1278            push    acc
0397 7480      1279            mov     a,#0x80
0399 C0E0      1280            push    acc
039B 74F0      1281            mov     a,#_buff
039D C0E0      1282            push    acc
039F 7414      1283            mov     a,#(_buff >> 8)
03A1 C0E0      1284            push    acc
03A3 7440      1285            mov     a,#0x40
03A5 C0E0      1286            push    acc
03A7 120000    1287            lcall   _sprintf
03AA E581      1288            mov     a,sp
03AC 24F6      1289            add     a,#0xf6
03AE F581      1290            mov     sp,a
03B0           1291   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:294: putchar1('!'); // Send a message to the slave. First send the 'attention' character which is '!'
03B0 758221    1292            mov     dpl,#0x21
03B3 120000    1293            lcall   _putchar1
03B6           1294   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:296: waitms(5); // This may need adjustment depending on how busy is the slave
03B6 900005    1295            mov     dptr,#0x0005
03B9 120000    1296            lcall   _waitms
03BC           1297   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:297: sendstr1(buff); // Send the test message
03BC 9014F0    1298            mov     dptr,#_buff
03BF 75F040    1299            mov     b,#0x40
03C2 120000    1300            lcall   _sendstr1
03C5 D005      1301            pop     ar5
03C7 D004      1302            pop     ar4
03C9 D003      1303            pop     ar3
03CB D002      1304            pop     ar2
03CD           1305   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:299: if(++cont1>200) cont1=0; // Increment test counters for next message
03CD 0A        1306            inc     r2
03CE BA00E8    1307            cjne    r2,#0x00,L015032?
03D1 0B        1308            inc     r3
03D2           1309   L015032?:
03D2 C3        1310            clr     c
03D3 74C8      1311            mov     a,#0xC8
03D5 9A        1312            subb    a,r2
03D6 E4        1313            clr     a
03D7 6480      1314            xrl     a,#0x80
03D9 8BF0      1315            mov     b,r3
03DB 63F080    1316            xrl     b,#0x80
03DE 95F0      1317            subb    a,b
03E0 5000      1318            jnc     L015002?
03E2 7A00      1319            mov     r2,#0x00
03E4 7B00      1320            mov     r3,#0x00
03E6           1321   L015002?:
03E6           1322   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:300: if(++cont2>200) cont2=0;
03E6 0C        1323            inc     r4
03E7 BC0068    1324            cjne    r4,#0x00,L015034?
03EA 0D        1325            inc     r5
03EB           1326   L015034?:
03EB C3        1327            clr     c
03EC 74C8      1328            mov     a,#0xC8
03EE 9C        1329            subb    a,r4
03EF E4        1330            clr     a
03F0 6480      1331            xrl     a,#0x80
03F2 8DF0      1332            mov     b,r5
03F4 63F080    1333            xrl     b,#0x80
03F7 95F0      1334            subb    a,b
03F9 5000      1335            jnc     L015004?
03FB 7C00      1336            mov     r4,#0x00
03FD 7D00      1337            mov     r5,#0x00
03FF           1338   L015004?:
03FF           1339   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:302: waitms(5); // This may need adjustment depending on how busy is the slave
03FF 900005    1340            mov     dptr,#0x0005
0402 C002      1341            push    ar2
0404 C003      1342            push    ar3
0406 C004      1343            push    ar4
0408 C005      1344            push    ar5
040A 120000    1345            lcall   _waitms
040D           1346   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:304: putchar1('@'); // Request a message from the slave
040D 758240    1347            mov     dpl,#0x40
0410 120000    1348            lcall   _putchar1
0413 D005      1349            pop     ar5
0415 D004      1350            pop     ar4
0417 D003      1351            pop     ar3
0419 D002      1352            pop     ar2
041B           1353   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:307: while(1)
041B 7E00      1354            mov     r6,#0x00
041D 7F00      1355            mov     r7,#0x00
041F           1356   L015010?:
041F           1357   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:309: if(RXU1()) break; // Something has arrived
041F C002      1358            push    ar2
0421 C003      1359            push    ar3
0423 C004      1360            push    ar4
0425 C005      1361            push    ar5
0427 C006      1362            push    ar6
0429 C007      1363            push    ar7
042B 120000    1364            lcall   _RXU1
042E E4        1365            clr     a
042F 33        1366            rlc     a
0430 D007      1367            pop     ar7
0432 D006      1368            pop     ar6
0434 D005      1369            pop     ar5
0436 D004      1370            pop     ar4
0438 D003      1371            pop     ar3
043A D002      1372            pop     ar2
043C 7000      1373            jnz     L015011?
043E           1374   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:310: if(++timeout_cnt>250) break; // Wait up to 25ms for the repply
043E 0E        1375            inc     r6
043F BE0068    1376            cjne    r6,#0x00,L015037?
0442 0F        1377            inc     r7
0443           1378   L015037?:
0443 C3        1379            clr     c
0444 74FA      1380            mov     a,#0xFA
0446 9E        1381            subb    a,r6
0447 E4        1382            clr     a
0448 6480      1383            xrl     a,#0x80
044A 8FF0      1384            mov     b,r7
044C 63F080    1385            xrl     b,#0x80
044F 95F0      1386            subb    a,b
0451 4000      1387            jc      L015011?
0453           1388   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:311: Timer3us(100); // 100us*250=25ms
0453 758264    1389            mov     dpl,#0x64
0456 C002      1390            push    ar2
0458 C003      1391            push    ar3
045A C004      1392            push    ar4
045C C005      1393            push    ar5
045E C006      1394            push    ar6
0460 C007      1395            push    ar7
0462 120000    1396            lcall   _Timer3us
0465 D007      1397            pop     ar7
0467 D006      1398            pop     ar6
0469 D005      1399            pop     ar5
046B D004      1400            pop     ar4
046D D003      1401            pop     ar3
046F D002      1402            pop     ar2
0471 8000      1403            sjmp    L015010?
0473           1404   L015011?:
0473           1405   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:314: if(RXU1()) // Something has arrived from the slave
0473 C002      1406            push    ar2
0475 C003      1407            push    ar3
0477 C004      1408            push    ar4
0479 C005      1409            push    ar5
047B 120000    1410            lcall   _RXU1
047E E4        1411            clr     a
047F 33        1412            rlc     a
0480 D005      1413            pop     ar5
0482 D004      1414            pop     ar4
0484 D003      1415            pop     ar3
0486 D002      1416            pop     ar2
0488 7000      1417            jnz     L015039?
048A 020000    1418            ljmp    L015016?
048D           1419   L015039?:
048D           1420   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:316: getstr1(buff, sizeof(buff)-1);
048D 753013    1421            mov     _getstr1_PARM_2,#0x13
0490 9014F0    1422            mov     dptr,#_buff
0493 75F040    1423            mov     b,#0x40
0496 C002      1424            push    ar2
0498 C003      1425            push    ar3
049A C004      1426            push    ar4
049C C005      1427            push    ar5
049E 120000    1428            lcall   _getstr1
04A1           1429   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:317: if(strlen(buff)==5) // Check for valid message size (5 characters)
04A1 9014F0    1430            mov     dptr,#_buff
04A4 75F040    1431            mov     b,#0x40
04A7 120000    1432            lcall   _strlen
04AA AE82      1433            mov     r6,dpl
04AC AF83      1434            mov     r7,dph
04AE D005      1435            pop     ar5
04B0 D004      1436            pop     ar4
04B2 D003      1437            pop     ar3
04B4 D002      1438            pop     ar2
04B6 BE0568    1439            cjne    r6,#0x05,L015013?
04B9 BF0068    1440            cjne    r7,#0x00,L015013?
04BC           1441   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:319: printf("Slave says: %s\r\n", buff);
04BC C002      1442            push    ar2
04BE C003      1443            push    ar3
04C0 C004      1444            push    ar4
04C2 C005      1445            push    ar5
04C4 74F0      1446            mov     a,#_buff
04C6 C0E0      1447            push    acc
04C8 7414      1448            mov     a,#(_buff >> 8)
04CA C0E0      1449            push    acc
04CC 7440      1450            mov     a,#0x40
04CE C0E0      1451            push    acc
04D0 74A8      1452            mov     a,#__str_13
04D2 C0E0      1453            push    acc
04D4 74C5      1454            mov     a,#(__str_13 >> 8)
04D6 C0E0      1455            push    acc
04D8 7480      1456            mov     a,#0x80
04DA C0E0      1457            push    acc
04DC 120000    1458            lcall   _printf
04DF E581      1459            mov     a,sp
04E1 24FA      1460            add     a,#0xfa
04E3 F581      1461            mov     sp,a
04E5 D005      1462            pop     ar5
04E7 D004      1463            pop     ar4
04E9 D003      1464            pop     ar3
04EB D002      1465            pop     ar2
04ED 8000      1466            sjmp    L015017?
04EF           1467   L015013?:
04EF           1468   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:323: printf("*** BAD MESSAGE ***: %s\r\n", buff);
04EF C002      1469            push    ar2
04F1 C003      1470            push    ar3
04F3 C004      1471            push    ar4
04F5 C005      1472            push    ar5
04F7 74F0      1473            mov     a,#_buff
04F9 C0E0      1474            push    acc
04FB 7414      1475            mov     a,#(_buff >> 8)
04FD C0E0      1476            push    acc
04FF 7440      1477            mov     a,#0x40
0501 C0E0      1478            push    acc
0503 7428      1479            mov     a,#__str_14
0505 C0E0      1480            push    acc
0507 74C6      1481            mov     a,#(__str_14 >> 8)
0509 C0E0      1482            push    acc
050B 7480      1483            mov     a,#0x80
050D C0E0      1484            push    acc
050F 120000    1485            lcall   _printf
0512 E581      1486            mov     a,sp
0514 24FA      1487            add     a,#0xfa
0516 F581      1488            mov     sp,a
0518 D005      1489            pop     ar5
051A D004      1490            pop     ar4
051C D003      1491            pop     ar3
051E D002      1492            pop     ar2
0520 8000      1493            sjmp    L015017?
0522           1494   L015016?:
0522           1495   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:328: printf("NO RESPONSE\r\n", buff);
0522 C002      1496            push    ar2
0524 C003      1497            push    ar3
0526 C004      1498            push    ar4
0528 C005      1499            push    ar5
052A 74F0      1500            mov     a,#_buff
052C C0E0      1501            push    acc
052E 7414      1502            mov     a,#(_buff >> 8)
0530 C0E0      1503            push    acc
0532 7440      1504            mov     a,#0x40
0534 C0E0      1505            push    acc
0536 7468      1506            mov     a,#__str_15
0538 C0E0      1507            push    acc
053A 74C6      1508            mov     a,#(__str_15 >> 8)
053C C0E0      1509            push    acc
053E 7480      1510            mov     a,#0x80
0540 C0E0      1511            push    acc
0542 120000    1512            lcall   _printf
0545 E581      1513            mov     a,sp
0547 24FA      1514            add     a,#0xfa
0549 F581      1515            mov     sp,a
054B D005      1516            pop     ar5
054D D004      1517            pop     ar4
054F D003      1518            pop     ar3
0551 D002      1519            pop     ar2
0553           1520   L015017?:
0553           1521   ;        D:\Zinnia\school\ubc_second_year\ELEC291\PROJECT02\elec291project2\EFM8_JDY40_test\EFM8_JDY40_test_Master\EFM8_JDY40_test.c:331: waitms(50);  // Set the information interchange pace: communicate about every 50ms
0553 900032    1522            mov     dptr,#0x0032
0556 C002      1523            push    ar2
0558 C003      1524            push    ar3
055A C004      1525            push    ar4
055C C005      1526            push    ar5
055E 120000    1527            lcall   _waitms
0561 D005      1528            pop     ar5
0563 D004      1529            pop     ar4
0565 D003      1530            pop     ar3
0567 D002      1531            pop     ar2
0569 020000    1532            ljmp    L015019?
056C           1533            rseg R_CSEG
056C           1534   
0000           1535            rseg R_XINIT
0000           1536   
0000           1537            rseg R_CONST
0000           1538   __str_0:
0000 436F6D6D  1539            db 'Command: %s'
     616E643A
     202573
000B 00        1540            db 0x00
000C           1541   __str_1:
000C 52657370  1542            db 'Response: %s'
     6F6E7365
     3A202573
0018 0D        1543            db 0x0D
0019 0A        1544            db 0x0A
001A 00        1545            db 0x00
001B           1546   __str_2:
001B 41542B44  1547            db 'AT+DVID0000'
     56494430
     303030
0026 0D        1548            db 0x0D
0027 0A        1549            db 0x0A
0028 00        1550            db 0x00
0029           1551   __str_3:
0029 0D        1552            db 0x0D
002A 0A        1553            db 0x0A
002B 45464D38  1554            db 'EFM8LB12 JDY-40 Master Test.'
     4C423132
     204A4459
     2D343020
     4D617374
     65722054
     6573742E
0047 0D        1555            db 0x0D
0048 0A        1556            db 0x0A
0049 00        1557            db 0x00
004A           1558   __str_4:
004A 41542B56  1559            db 'AT+VER'
     4552
0050 0D        1560            db 0x0D
0051 0A        1561            db 0x0A
0052 00        1562            db 0x00
0053           1563   __str_5:
0053 41542B42  1564            db 'AT+BAUD'
     415544
005A 0D        1565            db 0x0D
005B 0A        1566            db 0x0A
005C 00        1567            db 0x00
005D           1568   __str_6:
005D 41542B52  1569            db 'AT+RFID'
     464944
0064 0D        1570            db 0x0D
0065 0A        1571            db 0x0A
0066 00        1572            db 0x00
0067           1573   __str_7:
0067 41542B44  1574            db 'AT+DVID'
     564944
006E 0D        1575            db 0x0D
006F 0A        1576            db 0x0A
0070 00        1577            db 0x00
0071           1578   __str_8:
0071 41542B52  1579            db 'AT+RFC'
     4643
0077 0D        1580            db 0x0D
0078 0A        1581            db 0x0A
0079 00        1582            db 0x00
007A           1583   __str_9:
007A 41542B50  1584            db 'AT+POWE'
     4F5745
0081 0D        1585            db 0x0D
0082 0A        1586            db 0x0A
0083 00        1587            db 0x00
0084           1588   __str_10:
0084 41542B43  1589            db 'AT+CLSS'
     4C5353
008B 0D        1590            db 0x0D
008C 0A        1591            db 0x0A
008D 00        1592            db 0x00
008E           1593   __str_11:
008E 41542B44  1594            db 'AT+DVIDABBA'
     56494441
     424241
0099 0D        1595            db 0x0D
009A 0A        1596            db 0x0A
009B 00        1597            db 0x00
009C           1598   __str_12:
009C 25303364  1599            db '%03d,%03d'
     2C253033
     64
00A5 0A        1600            db 0x0A
00A6 00        1601            db 0x00
00A7           1602   __str_13:
00A7 536C6176  1603            db 'Slave says: %s'
     65207361
     79733A20
     2573
00B5 0D        1604            db 0x0D
00B6 0A        1605            db 0x0A
00B7 00        1606            db 0x00
00B8           1607   __str_14:
00B8 2A2A2A20  1608            db '*** BAD MESSAGE ***: %s'
     42414420
     4D455353
     41474520
     2A2A2A3A
     202573
00CF 0D        1609            db 0x0D
00D0 0A        1610            db 0x0A
00D1 00        1611            db 0x00
00D2           1612   __str_15:
00D2 4E4F2052  1613            db 'NO RESPONSE'
     4553504F
     4E5345
00DD 0D        1614            db 0x0D
00DE 0A        1615            db 0x0A
00DF 00        1616            db 0x00
00E0           1617   
0003           1618            CSEG
0003           1619   
0003           1620   end
